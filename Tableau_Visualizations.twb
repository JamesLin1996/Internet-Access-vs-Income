<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.1003.0840                               -->
<workbook original-version='10.3' source-build='10.3.4 (10300.17.1003.0840)' source-platform='win' version='10.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Project5Tableau-JamesLin' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.3'>
      <aliases enabled='yes' />
      <column caption='High FB Penetration' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='46.0'>
        <calculation class='tableau' formula='46.0' />
        <range max='100.0' min='46.0' />
      </column>
      <column caption='Low FB Penetration' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='39.0'>
        <calculation class='tableau' formula='39.0' />
        <range max='39.0' min='0.0' />
      </column>
      <column caption='High Net Penetration' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='80.0'>
        <calculation class='tableau' formula='80.0' />
        <range max='100.0' min='80.0' />
      </column>
      <column caption='Low Net Penetration' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='70.0'>
        <calculation class='tableau' formula='70.0' />
        <range max='70.0' min='0.0' />
      </column>
      <column caption='High Income ' datatype='real' name='[Parameter 5]' param-domain-type='range' role='measure' type='quantitative' value='80000.0'>
        <calculation class='tableau' formula='80000.0' />
        <range max='150000.0' min='80000.0' />
      </column>
      <column caption='Low Income' datatype='real' name='[Parameter 6]' param-domain-type='range' role='measure' type='quantitative' value='65000.0'>
        <calculation class='tableau' formula='65000.0' />
        <range max='65000.0' min='0.0' />
      </column>
    </datasource>
    <datasource caption='apk585/f-17-edv-project-5/' inline='true' name='federated.0d3s4hb0i1l7bf1fww6o21w6ihhh' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='apk585/f-17-edv-project-5/' name='webdata-direct.0s2vf6d1nywewe1cfuugg18d5cf8'>
            <connection APIVersion='' authType='none' authentication='no' channel='https' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;apk585/f-17-edv-project-5/&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkYXRhLWRvdC13b3JsZC10YWJsZWF1OmphbWVzbGluIiwiaXNzIjoiY2xpZW50OmRhdGEtZG90LXdvcmxkLXRhYmxlYXU6YWdlbnQ6amFtZXNsaW46OjkxYThlMTMwLWI3NWItNDU3Yy04MGU0LTFkZGJmZTJhMzcwZCIsImlhdCI6MTUwNDIxOTg5OSwicm9sZSI6WyJ1c2VyX2FwaV9yZWFkIl0sImV4cCI6MTUxNzA5NDk1OCwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.QtvnmuJDyNsGeYVz667V8d0uwJ5AwKCIjIQKopFP5Bh8sMO0ZhH_QOCOHARgC8VkPzqDehUEdG9IJgAJeawhxA&quot;,&quot;version&quot;:&quot;1.0.1&quot;}' connectionName='apk585/f-17-edv-project-5/' filename='' increment-key='' path='/' port='443' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[apk585.internetaccessdata.facebook_cleaned].[region]' />
              <expression op='[apk585.internetaccessdata.2007population_cleaned].[region]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[apk585.internetaccessdata.facebook_cleaned].[region]' />
                <expression op='[apk585.internetaccessdata.2007internet_cleaned].[region]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[apk585.internetaccessdata.facebook_cleaned].[region]' />
                  <expression op='[apk585.internetaccessdata.2007income_cleaned].[region]' />
                </expression>
              </clause>
              <relation connection='webdata-direct.0s2vf6d1nywewe1cfuugg18d5cf8' name='apk585.internetaccessdata.facebook_cleaned' table='[apk585__internetaccessdata__facebook_cleaned]' type='table' />
              <relation connection='webdata-direct.0s2vf6d1nywewe1cfuugg18d5cf8' name='apk585.internetaccessdata.2007income_cleaned' table='[apk585__internetaccessdata__2007income_cleaned]' type='table' />
            </relation>
            <relation connection='webdata-direct.0s2vf6d1nywewe1cfuugg18d5cf8' name='apk585.internetaccessdata.2007internet_cleaned' table='[apk585__internetaccessdata__2007internet_cleaned]' type='table' />
          </relation>
          <relation connection='webdata-direct.0s2vf6d1nywewe1cfuugg18d5cf8' name='apk585.internetaccessdata.2007population_cleaned' table='[apk585__internetaccessdata__2007population_cleaned]' type='table' />
        </relation>
        <cols>
          <map key='[average_household_income]' value='[apk585.internetaccessdata.2007income_cleaned].[average_household_income]' />
          <map key='[facebook_penetration]' value='[apk585.internetaccessdata.facebook_cleaned].[facebook_penetration]' />
          <map key='[faceook_users]' value='[apk585.internetaccessdata.facebook_cleaned].[faceook_users]' />
          <map key='[female_total_population]' value='[apk585.internetaccessdata.2007population_cleaned].[female_total_population]' />
          <map key='[internet_penetration]' value='[apk585.internetaccessdata.facebook_cleaned].[internet_penetration]' />
          <map key='[male_total_population]' value='[apk585.internetaccessdata.2007population_cleaned].[male_total_population]' />
          <map key='[number_of_individuals_who_access_internet_from_home]' value='[apk585.internetaccessdata.2007internet_cleaned].[number_of_individuals_who_access_internet_from_home]' />
          <map key='[number_of_individuals_who_access_internet_outside_of_household]' value='[apk585.internetaccessdata.2007internet_cleaned].[number_of_individuals_who_access_internet_outside_of_household]' />
          <map key='[number_of_individuals_with_internet_acess_in_house]' value='[apk585.internetaccessdata.2007internet_cleaned].[number_of_individuals_with_internet_acess_in_house]' />
          <map key='[percent_of_individuals_who_access_internet_from_home]' value='[apk585.internetaccessdata.2007internet_cleaned].[percent_of_individuals_who_access_internet_from_home]' />
          <map key='[percent_of_individuals_who_access_internet_outside_of_household]' value='[apk585.internetaccessdata.2007internet_cleaned].[percent_of_individuals_who_access_internet_outside_of_household]' />
          <map key='[population_percent_of_usa]' value='[apk585.internetaccessdata.facebook_cleaned].[population_percent_of_usa]' />
          <map key='[region (apk585.internetaccessdata.2007income_cleaned)]' value='[apk585.internetaccessdata.2007income_cleaned].[region]' />
          <map key='[region (apk585.internetaccessdata.2007internet_cleaned)]' value='[apk585.internetaccessdata.2007internet_cleaned].[region]' />
          <map key='[region (apk585.internetaccessdata.2007population_cleaned)]' value='[apk585.internetaccessdata.2007population_cleaned].[region]' />
          <map key='[region]' value='[apk585.internetaccessdata.facebook_cleaned].[region]' />
          <map key='[total_estimate_total_population_age_10_to_14_years]' value='[apk585.internetaccessdata.2007population_cleaned].[total_estimate_total_population_age_10_to_14_years]' />
          <map key='[total_estimate_total_population_age_15_to_19_years]' value='[apk585.internetaccessdata.2007population_cleaned].[total_estimate_total_population_age_15_to_19_years]' />
          <map key='[total_estimate_total_population_age_20_to_24_years]' value='[apk585.internetaccessdata.2007population_cleaned].[total_estimate_total_population_age_20_to_24_years]' />
          <map key='[total_estimate_total_population_age_25_to_29_years]' value='[apk585.internetaccessdata.2007population_cleaned].[total_estimate_total_population_age_25_to_29_years]' />
          <map key='[total_estimate_total_population_age_30_to_34_years]' value='[apk585.internetaccessdata.2007population_cleaned].[total_estimate_total_population_age_30_to_34_years]' />
          <map key='[total_estimate_total_population_age_35_to_39_years]' value='[apk585.internetaccessdata.2007population_cleaned].[total_estimate_total_population_age_35_to_39_years]' />
          <map key='[total_estimate_total_population_age_40_to_44_years]' value='[apk585.internetaccessdata.2007population_cleaned].[total_estimate_total_population_age_40_to_44_years]' />
          <map key='[total_estimate_total_population_age_45_to_49_years]' value='[apk585.internetaccessdata.2007population_cleaned].[total_estimate_total_population_age_45_to_49_years]' />
          <map key='[total_estimate_total_population_age_50_to_54_years]' value='[apk585.internetaccessdata.2007population_cleaned].[total_estimate_total_population_age_50_to_54_years]' />
          <map key='[total_estimate_total_population_age_55_to_59_years]' value='[apk585.internetaccessdata.2007population_cleaned].[total_estimate_total_population_age_55_to_59_years]' />
          <map key='[total_estimate_total_population_age_5_to_9_years]' value='[apk585.internetaccessdata.2007population_cleaned].[total_estimate_total_population_age_5_to_9_years]' />
          <map key='[total_estimate_total_population_age_60_to_64_years]' value='[apk585.internetaccessdata.2007population_cleaned].[total_estimate_total_population_age_60_to_64_years]' />
          <map key='[total_estimate_total_population_age_65_to_69_years]' value='[apk585.internetaccessdata.2007population_cleaned].[total_estimate_total_population_age_65_to_69_years]' />
          <map key='[total_estimate_total_population_age_70_to_74_years]' value='[apk585.internetaccessdata.2007population_cleaned].[total_estimate_total_population_age_70_to_74_years]' />
          <map key='[total_estimate_total_population_age_75_to_79_years]' value='[apk585.internetaccessdata.2007population_cleaned].[total_estimate_total_population_age_75_to_79_years]' />
          <map key='[total_estimate_total_population_age_80_to_84_years]' value='[apk585.internetaccessdata.2007population_cleaned].[total_estimate_total_population_age_80_to_84_years]' />
          <map key='[total_estimate_total_population_age_85_years_and_over]' value='[apk585.internetaccessdata.2007population_cleaned].[total_estimate_total_population_age_85_years_and_over]' />
          <map key='[total_estimate_total_population_age_under_5_years]' value='[apk585.internetaccessdata.2007population_cleaned].[total_estimate_total_population_age_under_5_years]' />
          <map key='[total_population]' value='[apk585.internetaccessdata.2007population_cleaned].[total_population]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[apk585.internetaccessdata.facebook_cleaned]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>0</ordinal>
            <caption>Region</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_percent_of_usa</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[population_percent_of_usa]</local-name>
            <parent-name>[apk585.internetaccessdata.facebook_cleaned]</parent-name>
            <remote-alias>Population Percent of USA</remote-alias>
            <ordinal>1</ordinal>
            <caption>Population Percent of USA</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>internet_penetration</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[internet_penetration]</local-name>
            <parent-name>[apk585.internetaccessdata.facebook_cleaned]</parent-name>
            <remote-alias>Internet Penetration</remote-alias>
            <ordinal>2</ordinal>
            <caption>Internet Penetration</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>faceook_users</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[faceook_users]</local-name>
            <parent-name>[apk585.internetaccessdata.facebook_cleaned]</parent-name>
            <remote-alias>Faceook Users</remote-alias>
            <ordinal>3</ordinal>
            <caption>Faceook Users</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>facebook_penetration</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[facebook_penetration]</local-name>
            <parent-name>[apk585.internetaccessdata.facebook_cleaned]</parent-name>
            <remote-alias>Facebook Penetration</remote-alias>
            <ordinal>4</ordinal>
            <caption>Facebook Penetration</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[region (apk585.internetaccessdata.2007income_cleaned)]</local-name>
            <parent-name>[apk585.internetaccessdata.2007income_cleaned]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>5</ordinal>
            <caption>Region</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average_household_income</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[average_household_income]</local-name>
            <parent-name>[apk585.internetaccessdata.2007income_cleaned]</parent-name>
            <remote-alias>Average Household Income</remote-alias>
            <ordinal>6</ordinal>
            <caption>Average Household Income</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[region (apk585.internetaccessdata.2007internet_cleaned)]</local-name>
            <parent-name>[apk585.internetaccessdata.2007internet_cleaned]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>7</ordinal>
            <caption>Region</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_individuals_with_internet_acess_in_house</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[number_of_individuals_with_internet_acess_in_house]</local-name>
            <parent-name>[apk585.internetaccessdata.2007internet_cleaned]</parent-name>
            <remote-alias>Number of Individuals with Internet Acess in House</remote-alias>
            <ordinal>8</ordinal>
            <caption>Number of Individuals with Internet Acess in House</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_individuals_who_access_internet_outside_of_household</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[number_of_individuals_who_access_internet_outside_of_household]</local-name>
            <parent-name>[apk585.internetaccessdata.2007internet_cleaned]</parent-name>
            <remote-alias>Number of Individuals who Access Internet outside of Household</remote-alias>
            <ordinal>9</ordinal>
            <caption>Number of Individuals who Access Internet outside of Household</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_of_individuals_who_access_internet_outside_of_household</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[percent_of_individuals_who_access_internet_outside_of_household]</local-name>
            <parent-name>[apk585.internetaccessdata.2007internet_cleaned]</parent-name>
            <remote-alias>Percent of Individuals who Access Internet outside of Household</remote-alias>
            <ordinal>10</ordinal>
            <caption>Percent of Individuals who Access Internet outside of Household</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_individuals_who_access_internet_from_home</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[number_of_individuals_who_access_internet_from_home]</local-name>
            <parent-name>[apk585.internetaccessdata.2007internet_cleaned]</parent-name>
            <remote-alias>Number of Individuals who Access Internet from Home</remote-alias>
            <ordinal>11</ordinal>
            <caption>Number of Individuals who Access Internet from Home</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_of_individuals_who_access_internet_from_home</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[percent_of_individuals_who_access_internet_from_home]</local-name>
            <parent-name>[apk585.internetaccessdata.2007internet_cleaned]</parent-name>
            <remote-alias>Percent of Individuals who Access Internet from Home</remote-alias>
            <ordinal>12</ordinal>
            <caption>Percent of Individuals who Access Internet from Home</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[region (apk585.internetaccessdata.2007population_cleaned)]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <caption>Region</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_population</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_population]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total Population</remote-alias>
            <ordinal>14</ordinal>
            <caption>Total Population</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_total_population</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[male_total_population]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Male Total Population</remote-alias>
            <ordinal>15</ordinal>
            <caption>Male Total Population</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_total_population</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[female_total_population]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Female Total Population</remote-alias>
            <ordinal>16</ordinal>
            <caption>Female Total Population</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_total_population_age_under_5_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_total_population_age_under_5_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; Total population - AGE - Under 5 years</remote-alias>
            <ordinal>17</ordinal>
            <caption>Total; Estimate; Total population - AGE - Under 5 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_total_population_age_5_to_9_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_total_population_age_5_to_9_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; Total population - AGE - 5 to 9 years</remote-alias>
            <ordinal>18</ordinal>
            <caption>Total; Estimate; Total population - AGE - 5 to 9 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_total_population_age_10_to_14_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_total_population_age_10_to_14_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; Total population - AGE - 10 to 14 years</remote-alias>
            <ordinal>19</ordinal>
            <caption>Total; Estimate; Total population - AGE - 10 to 14 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_total_population_age_15_to_19_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_total_population_age_15_to_19_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; Total population - AGE - 15 to 19 years</remote-alias>
            <ordinal>20</ordinal>
            <caption>Total; Estimate; Total population - AGE - 15 to 19 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_total_population_age_20_to_24_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_total_population_age_20_to_24_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; Total population - AGE - 20 to 24 years</remote-alias>
            <ordinal>21</ordinal>
            <caption>Total; Estimate; Total population - AGE - 20 to 24 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_total_population_age_25_to_29_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_total_population_age_25_to_29_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; Total population - AGE - 25 to 29 years</remote-alias>
            <ordinal>22</ordinal>
            <caption>Total; Estimate; Total population - AGE - 25 to 29 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_total_population_age_30_to_34_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_total_population_age_30_to_34_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; Total population - AGE - 30 to 34 years</remote-alias>
            <ordinal>23</ordinal>
            <caption>Total; Estimate; Total population - AGE - 30 to 34 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_total_population_age_35_to_39_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_total_population_age_35_to_39_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; Total population - AGE - 35 to 39 years</remote-alias>
            <ordinal>24</ordinal>
            <caption>Total; Estimate; Total population - AGE - 35 to 39 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_total_population_age_40_to_44_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_total_population_age_40_to_44_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; Total population - AGE - 40 to 44 years</remote-alias>
            <ordinal>25</ordinal>
            <caption>Total; Estimate; Total population - AGE - 40 to 44 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_total_population_age_45_to_49_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_total_population_age_45_to_49_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; Total population - AGE - 45 to 49 years</remote-alias>
            <ordinal>26</ordinal>
            <caption>Total; Estimate; Total population - AGE - 45 to 49 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_total_population_age_50_to_54_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_total_population_age_50_to_54_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; Total population - AGE - 50 to 54 years</remote-alias>
            <ordinal>27</ordinal>
            <caption>Total; Estimate; Total population - AGE - 50 to 54 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_total_population_age_55_to_59_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_total_population_age_55_to_59_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; Total population - AGE - 55 to 59 years</remote-alias>
            <ordinal>28</ordinal>
            <caption>Total; Estimate; Total population - AGE - 55 to 59 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_total_population_age_60_to_64_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_total_population_age_60_to_64_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; Total population - AGE - 60 to 64 years</remote-alias>
            <ordinal>29</ordinal>
            <caption>Total; Estimate; Total population - AGE - 60 to 64 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_total_population_age_65_to_69_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_total_population_age_65_to_69_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; Total population - AGE - 65 to 69 years</remote-alias>
            <ordinal>30</ordinal>
            <caption>Total; Estimate; Total population - AGE - 65 to 69 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_total_population_age_70_to_74_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_total_population_age_70_to_74_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; Total population - AGE - 70 to 74 years</remote-alias>
            <ordinal>31</ordinal>
            <caption>Total; Estimate; Total population - AGE - 70 to 74 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_total_population_age_75_to_79_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_total_population_age_75_to_79_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; Total population - AGE - 75 to 79 years</remote-alias>
            <ordinal>32</ordinal>
            <caption>Total; Estimate; Total population - AGE - 75 to 79 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_total_population_age_80_to_84_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_total_population_age_80_to_84_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; Total population - AGE - 80 to 84 years</remote-alias>
            <ordinal>33</ordinal>
            <caption>Total; Estimate; Total population - AGE - 80 to 84 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_total_population_age_85_years_and_over</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_total_population_age_85_years_and_over]</local-name>
            <parent-name>[apk585.internetaccessdata.2007population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; Total population - AGE - 85 years and over</remote-alias>
            <ordinal>34</ordinal>
            <caption>Total; Estimate; Total population - AGE - 85 years and over</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/James/Documents/My Tableau Repository/Datasources/federated.0d3s4hb0i1l7bf1fww6o21w6ihhh_0mtoayg1n0eqgv10fntg50favpi6.tde' schema='Extract' tablename='Extract' update-time='12/05/2017 02:24:07 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[average_household_income]' value='[Extract].[average_household_income]' />
            <map key='[facebook_penetration]' value='[Extract].[facebook_penetration]' />
            <map key='[faceook_users]' value='[Extract].[faceook_users]' />
            <map key='[female_total_population]' value='[Extract].[female_total_population]' />
            <map key='[internet_penetration]' value='[Extract].[internet_penetration]' />
            <map key='[male_total_population]' value='[Extract].[male_total_population]' />
            <map key='[number_of_individuals_who_access_internet_from_home]' value='[Extract].[number_of_individuals_who_access_internet_from_home]' />
            <map key='[number_of_individuals_who_access_internet_outside_of_household]' value='[Extract].[number_of_individuals_who_access_internet_outside_of_household]' />
            <map key='[number_of_individuals_with_internet_acess_in_house]' value='[Extract].[number_of_individuals_with_internet_acess_in_house]' />
            <map key='[percent_of_individuals_who_access_internet_from_home]' value='[Extract].[percent_of_individuals_who_access_internet_from_home]' />
            <map key='[percent_of_individuals_who_access_internet_outside_of_household]' value='[Extract].[percent_of_individuals_who_access_internet_outside_of_household]' />
            <map key='[population_percent_of_usa]' value='[Extract].[population_percent_of_usa]' />
            <map key='[region (apk585.internetaccessdata.2007income_cleaned)]' value='[Extract].[region]' />
            <map key='[region (apk585.internetaccessdata.2007internet_cleaned)]' value='[Extract].[region1]' />
            <map key='[region (apk585.internetaccessdata.2007population_cleaned)]' value='[Extract].[region2]' />
            <map key='[region]' value='[Extract].[region3]' />
            <map key='[total_estimate_total_population_age_10_to_14_years]' value='[Extract].[total_estimate_total_population_age_10_to_14_years]' />
            <map key='[total_estimate_total_population_age_15_to_19_years]' value='[Extract].[total_estimate_total_population_age_15_to_19_years]' />
            <map key='[total_estimate_total_population_age_20_to_24_years]' value='[Extract].[total_estimate_total_population_age_20_to_24_years]' />
            <map key='[total_estimate_total_population_age_25_to_29_years]' value='[Extract].[total_estimate_total_population_age_25_to_29_years]' />
            <map key='[total_estimate_total_population_age_30_to_34_years]' value='[Extract].[total_estimate_total_population_age_30_to_34_years]' />
            <map key='[total_estimate_total_population_age_35_to_39_years]' value='[Extract].[total_estimate_total_population_age_35_to_39_years]' />
            <map key='[total_estimate_total_population_age_40_to_44_years]' value='[Extract].[total_estimate_total_population_age_40_to_44_years]' />
            <map key='[total_estimate_total_population_age_45_to_49_years]' value='[Extract].[total_estimate_total_population_age_45_to_49_years]' />
            <map key='[total_estimate_total_population_age_50_to_54_years]' value='[Extract].[total_estimate_total_population_age_50_to_54_years]' />
            <map key='[total_estimate_total_population_age_55_to_59_years]' value='[Extract].[total_estimate_total_population_age_55_to_59_years]' />
            <map key='[total_estimate_total_population_age_5_to_9_years]' value='[Extract].[total_estimate_total_population_age_5_to_9_years]' />
            <map key='[total_estimate_total_population_age_60_to_64_years]' value='[Extract].[total_estimate_total_population_age_60_to_64_years]' />
            <map key='[total_estimate_total_population_age_65_to_69_years]' value='[Extract].[total_estimate_total_population_age_65_to_69_years]' />
            <map key='[total_estimate_total_population_age_70_to_74_years]' value='[Extract].[total_estimate_total_population_age_70_to_74_years]' />
            <map key='[total_estimate_total_population_age_75_to_79_years]' value='[Extract].[total_estimate_total_population_age_75_to_79_years]' />
            <map key='[total_estimate_total_population_age_80_to_84_years]' value='[Extract].[total_estimate_total_population_age_80_to_84_years]' />
            <map key='[total_estimate_total_population_age_85_years_and_over]' value='[Extract].[total_estimate_total_population_age_85_years_and_over]' />
            <map key='[total_estimate_total_population_age_under_5_years]' value='[Extract].[total_estimate_total_population_age_under_5_years]' />
            <map key='[total_population]' value='[Extract].[total_population]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='51' timestamp-start='2017-12-05 02:24:07.053' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>average_household_income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[average_household_income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>average_household_income</remote-alias>
              <ordinal>0</ordinal>
              <family>apk585.internetaccessdata.2007income_cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3388840.0</statistic>
                <statistic aggregation='Avg' datatype='real'>66447.843137254895</statistic>
                <statistic aggregation='Min' datatype='integer'>49060</statistic>
                <statistic aggregation='Max' datatype='integer'>92686</statistic>
                <statistic aggregation='Stdev' datatype='real'>10654.028108415238</statistic>
                <statistic aggregation='StdevP' datatype='real'>10549.059754351772</statistic>
                <statistic aggregation='Var' datatype='real'>113508314.93490197</statistic>
                <statistic aggregation='VarP' datatype='real'>111282661.70088428</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>230856524484.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>facebook_penetration</remote-name>
              <remote-type>5</remote-type>
              <local-name>[facebook_penetration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>facebook_penetration</remote-alias>
              <ordinal>1</ordinal>
              <family>apk585.internetaccessdata.facebook_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>43</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2294.5999999999999</statistic>
                <statistic aggregation='Avg' datatype='real'>44.992156862745098</statistic>
                <statistic aggregation='Min' datatype='real'>24.199999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>260.10000000000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>31.465853512258366</statistic>
                <statistic aggregation='StdevP' datatype='real'>31.155837542826582</statistic>
                <statistic aggregation='Var' datatype='real'>990.09993725490222</statistic>
                <statistic aggregation='VarP' datatype='real'>970.68621299500228</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>152744.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>faceook_users</remote-name>
              <remote-type>3</remote-type>
              <local-name>[faceook_users]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>faceook_users</remote-alias>
              <ordinal>2</ordinal>
              <family>apk585.internetaccessdata.facebook_cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>263889380.0</statistic>
                <statistic aggregation='Avg' datatype='real'>5174301.5686274506</statistic>
                <statistic aggregation='Min' datatype='integer'>216140</statistic>
                <statistic aggregation='Max' datatype='integer'>133518980</statistic>
                <statistic aggregation='Stdev' datatype='real'>18585717.699141711</statistic>
                <statistic aggregation='StdevP' datatype='real'>18402602.714263257</statistic>
                <statistic aggregation='Var' datatype='real'>345428902392189.5</statistic>
                <statistic aggregation='VarP' datatype='real'>338655786659009.31</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>18636888352487600.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>female_total_population</remote-name>
              <remote-type>3</remote-type>
              <local-name>[female_total_population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>female_total_population</remote-alias>
              <ordinal>3</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>302641571.0</statistic>
                <statistic aggregation='Avg' datatype='real'>5934148.4509803923</statistic>
                <statistic aggregation='Min' datatype='integer'>256067</statistic>
                <statistic aggregation='Max' datatype='integer'>152981937</statistic>
                <statistic aggregation='Stdev' datatype='real'>21270267.454951189</statistic>
                <statistic aggregation='StdevP' datatype='real'>21060703.058976639</statistic>
                <statistic aggregation='Var' datatype='real'>452424277605155.75</statistic>
                <statistic aggregation='VarP' datatype='real'>443553213338388.0</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>24417133890009712.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>internet_penetration</remote-name>
              <remote-type>5</remote-type>
              <local-name>[internet_penetration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>internet_penetration</remote-alias>
              <ordinal>4</ordinal>
              <family>apk585.internetaccessdata.facebook_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3942.4000000000005</statistic>
                <statistic aggregation='Avg' datatype='real'>77.301960784313735</statistic>
                <statistic aggregation='Min' datatype='real'>59.299999999999997</statistic>
                <statistic aggregation='Max' datatype='real'>90.099999999999994</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.6339879468107332</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.5686268656715203</statistic>
                <statistic aggregation='Var' datatype='real'>44.009796078430085</statistic>
                <statistic aggregation='VarP' datatype='real'>43.146858900421655</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>306955.73999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>male_total_population</remote-name>
              <remote-type>3</remote-type>
              <local-name>[male_total_population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>male_total_population</remote-alias>
              <ordinal>5</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>294150992.0</statistic>
                <statistic aggregation='Avg' datatype='real'>5767666.5098039219</statistic>
                <statistic aggregation='Min' datatype='integer'>266763</statistic>
                <statistic aggregation='Max' datatype='integer'>148639222</statistic>
                <statistic aggregation='Stdev' datatype='real'>20672784.707622759</statistic>
                <statistic aggregation='StdevP' datatype='real'>20469106.984738443</statistic>
                <statistic aggregation='Var' datatype='real'>427364027567721.44</statistic>
                <statistic aggregation='VarP' datatype='real'>418984340752668.06</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>23064766203770072.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>number_of_individuals_who_access_internet_from_home</remote-name>
              <remote-type>3</remote-type>
              <local-name>[number_of_individuals_who_access_internet_from_home]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>number_of_individuals_who_access_internet_from_home</remote-alias>
              <ordinal>6</ordinal>
              <family>apk585.internetaccessdata.2007internet_cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>378357000.0</statistic>
                <statistic aggregation='Avg' datatype='real'>7418764.7058823528</statistic>
                <statistic aggregation='Min' datatype='integer'>339000</statistic>
                <statistic aggregation='Max' datatype='integer'>191520000</statistic>
                <statistic aggregation='Stdev' datatype='real'>26639994.283474039</statistic>
                <statistic aggregation='StdevP' datatype='real'>26377524.884694468</statistic>
                <statistic aggregation='Var' datatype='real'>709689295423529.5</statistic>
                <statistic aggregation='VarP' datatype='real'>695773819042676.0</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>38291406329000000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>number_of_individuals_who_access_internet_outside_of_household</remote-name>
              <remote-type>3</remote-type>
              <local-name>[number_of_individuals_who_access_internet_outside_of_household]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>number_of_individuals_who_access_internet_outside_of_household</remote-alias>
              <ordinal>7</ordinal>
              <family>apk585.internetaccessdata.2007internet_cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>351803000.0</statistic>
                <statistic aggregation='Avg' datatype='real'>6898098.0392156867</statistic>
                <statistic aggregation='Min' datatype='integer'>349000</statistic>
                <statistic aggregation='Max' datatype='integer'>177987000</statistic>
                <statistic aggregation='Stdev' datatype='real'>24733225.547230918</statistic>
                <statistic aggregation='StdevP' datatype='real'>24489542.505478606</statistic>
                <statistic aggregation='Var' datatype='real'>611732445970196.12</statistic>
                <statistic aggregation='VarP' datatype='real'>599737692127643.25</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>33013393883000000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>number_of_individuals_with_internet_acess_in_house</remote-name>
              <remote-type>3</remote-type>
              <local-name>[number_of_individuals_with_internet_acess_in_house]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>number_of_individuals_with_internet_acess_in_house</remote-alias>
              <ordinal>8</ordinal>
              <family>apk585.internetaccessdata.2007internet_cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>564680000.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11072156.862745099</statistic>
                <statistic aggregation='Min' datatype='integer'>494000</statistic>
                <statistic aggregation='Max' datatype='integer'>285410000</statistic>
                <statistic aggregation='Stdev' datatype='real'>39691574.523756325</statistic>
                <statistic aggregation='StdevP' datatype='real'>39300514.991572887</statistic>
                <statistic aggregation='Var' datatype='real'>1575421088174902.0</statistic>
                <statistic aggregation='VarP' datatype='real'>1544530478602845.0</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>85023279946000000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>percent_of_individuals_who_access_internet_from_home</remote-name>
              <remote-type>5</remote-type>
              <local-name>[percent_of_individuals_who_access_internet_from_home]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>percent_of_individuals_who_access_internet_from_home</remote-alias>
              <ordinal>9</ordinal>
              <family>apk585.internetaccessdata.2007internet_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3429.1999999999998</statistic>
                <statistic aggregation='Avg' datatype='real'>67.239215686274505</statistic>
                <statistic aggregation='Min' datatype='real'>52.799999999999997</statistic>
                <statistic aggregation='Max' datatype='real'>82.599999999999994</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.4046882338291677</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.3415863182575656</statistic>
                <statistic aggregation='Var' datatype='real'>41.020031372549781</statistic>
                <statistic aggregation='VarP' datatype='real'>40.215717031911545</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>232627.72</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>percent_of_individuals_who_access_internet_outside_of_household</remote-name>
              <remote-type>5</remote-type>
              <local-name>[percent_of_individuals_who_access_internet_outside_of_household]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>percent_of_individuals_who_access_internet_outside_of_household</remote-alias>
              <ordinal>10</ordinal>
              <family>apk585.internetaccessdata.2007internet_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3245.5000000000009</statistic>
                <statistic aggregation='Avg' datatype='real'>63.637254901960802</statistic>
                <statistic aggregation='Min' datatype='real'>51.5</statistic>
                <statistic aggregation='Max' datatype='real'>76.099999999999994</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.8306761455017257</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.77322965936124</statistic>
                <statistic aggregation='Var' datatype='real'>33.996784313722863</statistic>
                <statistic aggregation='VarP' datatype='real'>33.330180699728295</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>208234.54999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population_percent_of_usa</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population_percent_of_usa]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population_percent_of_usa</remote-alias>
              <ordinal>11</ordinal>
              <family>apk585.internetaccessdata.facebook_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>197.79999999999998</statistic>
                <statistic aggregation='Avg' datatype='real'>3.8784313725490192</statistic>
                <statistic aggregation='Min' datatype='real'>0.20000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>13.905327234200428</statistic>
                <statistic aggregation='StdevP' datatype='real'>13.768325595230188</statistic>
                <statistic aggregation='Var' datatype='real'>193.3581254901961</statistic>
                <statistic aggregation='VarP' datatype='real'>189.56678969627069</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10435.060000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region (apk585.internetaccessdata.2007income_cleaned)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>region</remote-alias>
              <ordinal>12</ordinal>
              <family>apk585.internetaccessdata.2007income_cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Montana&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region (apk585.internetaccessdata.2007internet_cleaned)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>region1</remote-alias>
              <ordinal>13</ordinal>
              <family>apk585.internetaccessdata.2007internet_cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Montana&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region (apk585.internetaccessdata.2007population_cleaned)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>region2</remote-alias>
              <ordinal>14</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>region3</remote-alias>
              <ordinal>15</ordinal>
              <family>apk585.internetaccessdata.facebook_cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_total_population_age_10_to_14_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_total_population_age_10_to_14_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_total_population_age_10_to_14_years</remote-alias>
              <ordinal>16</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>339.49999999999994</statistic>
                <statistic aggregation='Avg' datatype='real'>6.6568627450980378</statistic>
                <statistic aggregation='Min' datatype='real'>4.7999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>8.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.47718126617076095</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.47247985825347738</statistic>
                <statistic aggregation='Var' datatype='real'>0.22770196078433061</statistic>
                <statistic aggregation='VarP' datatype='real'>0.2232372164552261</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2271.3899999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_total_population_age_15_to_19_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_total_population_age_15_to_19_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_total_population_age_15_to_19_years</remote-alias>
              <ordinal>17</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>370.39999999999992</statistic>
                <statistic aggregation='Avg' datatype='real'>7.2627450980392139</statistic>
                <statistic aggregation='Min' datatype='real'>6.5</statistic>
                <statistic aggregation='Max' datatype='real'>8.3000000000000007</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.37733846043774921</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.37362074947303842</statistic>
                <statistic aggregation='Var' datatype='real'>0.14238431372553081</statistic>
                <statistic aggregation='VarP' datatype='real'>0.13959246443679493</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2697.2400000000007</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_total_population_age_20_to_24_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_total_population_age_20_to_24_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_total_population_age_20_to_24_years</remote-alias>
              <ordinal>18</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>358.69999999999993</statistic>
                <statistic aggregation='Avg' datatype='real'>7.0333333333333323</statistic>
                <statistic aggregation='Min' datatype='real'>6.0</statistic>
                <statistic aggregation='Max' datatype='real'>9.4000000000000004</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.74449087749057064</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.73715581311583678</statistic>
                <statistic aggregation='Var' datatype='real'>0.5542666666666799</statistic>
                <statistic aggregation='VarP' datatype='real'>0.54339869281047048</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2550.5699999999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_total_population_age_25_to_29_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_total_population_age_25_to_29_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_total_population_age_25_to_29_years</remote-alias>
              <ordinal>19</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>351.00000000000011</statistic>
                <statistic aggregation='Avg' datatype='real'>6.8823529411764728</statistic>
                <statistic aggregation='Min' datatype='real'>5.5999999999999996</statistic>
                <statistic aggregation='Max' datatype='real'>10.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.77115650353293963</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.76355871722362334</statistic>
                <statistic aggregation='Var' datatype='real'>0.5946823529411488</statistic>
                <statistic aggregation='VarP' datatype='real'>0.5830219146481852</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2445.4400000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_total_population_age_30_to_34_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_total_population_age_30_to_34_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_total_population_age_30_to_34_years</remote-alias>
              <ordinal>20</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>318.10000000000002</statistic>
                <statistic aggregation='Avg' datatype='real'>6.2372549019607844</statistic>
                <statistic aggregation='Min' datatype='real'>5.2000000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>8.3000000000000007</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.55712145329855522</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.55163243812315854</statistic>
                <statistic aggregation='Var' datatype='real'>0.3103843137254943</statistic>
                <statistic aggregation='VarP' datatype='real'>0.3042983467897003</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1999.5900000000006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_total_population_age_35_to_39_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_total_population_age_35_to_39_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_total_population_age_35_to_39_years</remote-alias>
              <ordinal>21</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>346.19999999999999</statistic>
                <statistic aggregation='Avg' datatype='real'>6.7882352941176469</statistic>
                <statistic aggregation='Min' datatype='real'>5.7000000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>7.7999999999999998</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.49985880359300899</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.49493396621287788</statistic>
                <statistic aggregation='Var' datatype='real'>0.24985882352943437</statistic>
                <statistic aggregation='VarP' datatype='real'>0.24495963091121015</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2362.5800000000008</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_total_population_age_40_to_44_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_total_population_age_40_to_44_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_total_population_age_40_to_44_years</remote-alias>
              <ordinal>22</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>368.99999999999989</statistic>
                <statistic aggregation='Avg' datatype='real'>7.2352941176470562</statistic>
                <statistic aggregation='Min' datatype='real'>6.0</statistic>
                <statistic aggregation='Max' datatype='real'>8.3000000000000007</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.46853965868935316</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.4639233918383926</statistic>
                <statistic aggregation='Var' datatype='real'>0.21952941176473556</statistic>
                <statistic aggregation='VarP' datatype='real'>0.21522491349483877</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2680.7999999999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_total_population_age_45_to_49_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_total_population_age_45_to_49_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_total_population_age_45_to_49_years</remote-alias>
              <ordinal>23</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>388.40000000000003</statistic>
                <statistic aggregation='Avg' datatype='real'>7.6156862745098044</statistic>
                <statistic aggregation='Min' datatype='real'>6.0</statistic>
                <statistic aggregation='Max' datatype='real'>8.8000000000000007</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.47132687129829109</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.4666831435548861</statistic>
                <statistic aggregation='Var' datatype='real'>0.22214901960783584</statistic>
                <statistic aggregation='VarP' datatype='real'>0.21779315647827041</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2969.0400000000004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_total_population_age_50_to_54_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_total_population_age_50_to_54_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_total_population_age_50_to_54_years</remote-alias>
              <ordinal>24</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>363.30000000000007</statistic>
                <statistic aggregation='Avg' datatype='real'>7.1235294117647072</statistic>
                <statistic aggregation='Min' datatype='real'>5.5</statistic>
                <statistic aggregation='Max' datatype='real'>8.3000000000000007</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.52975021861027471</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.5245308773483196</statistic>
                <statistic aggregation='Var' datatype='real'>0.28063529411763383</statistic>
                <statistic aggregation='VarP' datatype='real'>0.27513264129179787</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2602.0100000000002</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_total_population_age_55_to_59_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_total_population_age_55_to_59_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_total_population_age_55_to_59_years</remote-alias>
              <ordinal>25</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>316.90000000000009</statistic>
                <statistic aggregation='Avg' datatype='real'>6.2137254901960803</statistic>
                <statistic aggregation='Min' datatype='real'>4.5</statistic>
                <statistic aggregation='Max' datatype='real'>7.7000000000000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.52383952040414039</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.51867841404223902</statistic>
                <statistic aggregation='Var' datatype='real'>0.27440784313723982</statistic>
                <statistic aggregation='VarP' datatype='real'>0.26902729719337237</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1982.8500000000004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_total_population_age_5_to_9_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_total_population_age_5_to_9_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_total_population_age_5_to_9_years</remote-alias>
              <ordinal>26</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>331.80000000000018</statistic>
                <statistic aggregation='Avg' datatype='real'>6.50588235294118</statistic>
                <statistic aggregation='Min' datatype='real'>5.0</statistic>
                <statistic aggregation='Max' datatype='real'>8.6999999999999993</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.58529027489128027</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.57952372761174353</statistic>
                <statistic aggregation='Var' datatype='real'>0.34256470588231047</statistic>
                <statistic aggregation='VarP' datatype='real'>0.33584775086501029</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2175.7800000000002</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_total_population_age_60_to_64_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_total_population_age_60_to_64_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_total_population_age_60_to_64_years</remote-alias>
              <ordinal>27</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>252.79999999999995</statistic>
                <statistic aggregation='Avg' datatype='real'>4.9568627450980385</statistic>
                <statistic aggregation='Min' datatype='real'>3.6000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>5.9000000000000004</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.42154710387373495</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.41739382914951156</statistic>
                <statistic aggregation='Var' datatype='real'>0.17770196078433348</statistic>
                <statistic aggregation='VarP' datatype='real'>0.17421760861209165</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1261.9800000000005</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_total_population_age_65_to_69_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_total_population_age_65_to_69_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_total_population_age_65_to_69_years</remote-alias>
              <ordinal>28</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>184.59999999999997</statistic>
                <statistic aggregation='Avg' datatype='real'>3.619607843137254</statistic>
                <statistic aggregation='Min' datatype='real'>2.6000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>4.4000000000000004</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.36987544273344347</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.36623126082992868</statistic>
                <statistic aggregation='Var' datatype='real'>0.13680784313726083</statistic>
                <statistic aggregation='VarP' datatype='real'>0.13412533640907925</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>675.0200000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_total_population_age_70_to_74_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_total_population_age_70_to_74_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_total_population_age_70_to_74_years</remote-alias>
              <ordinal>29</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>148.70000000000005</statistic>
                <statistic aggregation='Avg' datatype='real'>2.9156862745098047</statistic>
                <statistic aggregation='Min' datatype='real'>1.7</statistic>
                <statistic aggregation='Max' datatype='real'>3.7000000000000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.35348128607868118</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.3499986268990411</statistic>
                <statistic aggregation='Var' datatype='real'>0.12494901960783845</statistic>
                <statistic aggregation='VarP' datatype='real'>0.12249903883121417</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>439.81000000000006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_total_population_age_75_to_79_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_total_population_age_75_to_79_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_total_population_age_75_to_79_years</remote-alias>
              <ordinal>30</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>127.80000000000001</statistic>
                <statistic aggregation='Avg' datatype='real'>2.5058823529411769</statistic>
                <statistic aggregation='Min' datatype='real'>1.2</statistic>
                <statistic aggregation='Max' datatype='real'>3.7000000000000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.40467852164693585</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.4006914439041464</statistic>
                <statistic aggregation='Var' datatype='real'>0.16376470588234951</statistic>
                <statistic aggregation='VarP' datatype='real'>0.16055363321798971</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>328.43999999999988</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_total_population_age_80_to_84_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_total_population_age_80_to_84_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_total_population_age_80_to_84_years</remote-alias>
              <ordinal>31</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>98.699999999999989</statistic>
                <statistic aggregation='Avg' datatype='real'>1.9352941176470586</statistic>
                <statistic aggregation='Min' datatype='real'>0.69999999999999996</statistic>
                <statistic aggregation='Max' datatype='real'>2.7999999999999998</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.36759952633906623</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.36397776780401569</statistic>
                <statistic aggregation='Var' datatype='real'>0.13512941176470586</statistic>
                <statistic aggregation='VarP' datatype='real'>0.13247981545559398</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>197.76999999999995</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_total_population_age_85_years_and_over</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_total_population_age_85_years_and_over]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_total_population_age_85_years_and_over</remote-alias>
              <ordinal>32</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>88.299999999999983</statistic>
                <statistic aggregation='Avg' datatype='real'>1.7313725490196075</statistic>
                <statistic aggregation='Min' datatype='real'>0.69999999999999996</statistic>
                <statistic aggregation='Max' datatype='real'>2.3999999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.36850519457854752</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.36487451298609014</statistic>
                <statistic aggregation='Var' datatype='real'>0.13579607843137317</statistic>
                <statistic aggregation='VarP' datatype='real'>0.13313341022683645</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>159.66999999999996</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_total_population_age_under_5_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_total_population_age_under_5_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_total_population_age_under_5_years</remote-alias>
              <ordinal>33</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>345.00000000000006</statistic>
                <statistic aggregation='Avg' datatype='real'>6.764705882352942</statistic>
                <statistic aggregation='Min' datatype='real'>5.2000000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>9.5999999999999996</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.74318867844221737</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.73586644392764322</statistic>
                <statistic aggregation='Var' datatype='real'>0.55232941176468964</statistic>
                <statistic aggregation='VarP' datatype='real'>0.54149942329871537</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2361.4400000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_population</remote-name>
              <remote-type>3</remote-type>
              <local-name>[total_population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_population</remote-alias>
              <ordinal>34</ordinal>
              <family>apk585.internetaccessdata.2007population_cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>596792563.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11701814.960784314</statistic>
                <statistic aggregation='Min' datatype='integer'>522830</statistic>
                <statistic aggregation='Max' datatype='integer'>301621159</statistic>
                <statistic aggregation='Stdev' datatype='real'>41942912.981173553</statistic>
                <statistic aggregation='StdevP' datatype='real'>41529672.233593449</statistic>
                <statistic aggregation='Var' datatype='real'>1759207949346297.0</statistic>
                <statistic aggregation='VarP' datatype='real'>1724713675829703.0</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>94943953609513056.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.413361' measure-ordering='alphabetic' measure-percentage='0.292276' parameter-percentage='0.294363' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='apk585/f-17-edv-project-5' inline='true' name='federated.16kl8b808nrotj154kv001p16gnp' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='apk585/f-17-edv-project-5' name='webdata-direct.0zdr7v41w292rn15l2k100vonf4t'>
            <connection APIVersion='' authType='none' authentication='no' channel='https' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;apk585/f-17-edv-project-5&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkYXRhLWRvdC13b3JsZC10YWJsZWF1OmphbWVzbGluIiwiaXNzIjoiY2xpZW50OmRhdGEtZG90LXdvcmxkLXRhYmxlYXU6YWdlbnQ6amFtZXNsaW46OjkxYThlMTMwLWI3NWItNDU3Yy04MGU0LTFkZGJmZTJhMzcwZCIsImlhdCI6MTUwNDIxOTg5OSwicm9sZSI6WyJ1c2VyX2FwaV9yZWFkIl0sImV4cCI6MTUxNzA5NDk1OCwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.QtvnmuJDyNsGeYVz667V8d0uwJ5AwKCIjIQKopFP5Bh8sMO0ZhH_QOCOHARgC8VkPzqDehUEdG9IJgAJeawhxA&quot;,&quot;version&quot;:&quot;1.0.1&quot;}' connectionName='apk585/f-17-edv-project-5' filename='' increment-key='' path='/' port='443' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[apk585.internetaccessdata.facebook_cleaned].[region]' />
              <expression op='[apk585.internetaccessdata.2012income_cleaned].[region]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[apk585.internetaccessdata.facebook_cleaned].[region]' />
                <expression op='[apk585.internetaccessdata.2012internet_cleaned].[region]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[apk585.internetaccessdata.facebook_cleaned].[region]' />
                  <expression op='[apk585.internetaccessdata.2012population_cleaned].[region]' />
                </expression>
              </clause>
              <relation connection='webdata-direct.0zdr7v41w292rn15l2k100vonf4t' name='apk585.internetaccessdata.facebook_cleaned' table='[apk585__internetaccessdata__facebook_cleaned]' type='table' />
              <relation connection='webdata-direct.0zdr7v41w292rn15l2k100vonf4t' name='apk585.internetaccessdata.2012population_cleaned' table='[apk585__internetaccessdata__2012population_cleaned]' type='table' />
            </relation>
            <relation connection='webdata-direct.0zdr7v41w292rn15l2k100vonf4t' name='apk585.internetaccessdata.2012internet_cleaned' table='[apk585__internetaccessdata__2012internet_cleaned]' type='table' />
          </relation>
          <relation connection='webdata-direct.0zdr7v41w292rn15l2k100vonf4t' name='apk585.internetaccessdata.2012income_cleaned' table='[apk585__internetaccessdata__2012income_cleaned]' type='table' />
        </relation>
        <cols>
          <map key='[average_household_income]' value='[apk585.internetaccessdata.2012income_cleaned].[average_household_income]' />
          <map key='[facebook_penetration]' value='[apk585.internetaccessdata.facebook_cleaned].[facebook_penetration]' />
          <map key='[faceook_users]' value='[apk585.internetaccessdata.facebook_cleaned].[faceook_users]' />
          <map key='[female_total_population]' value='[apk585.internetaccessdata.2012population_cleaned].[female_total_population]' />
          <map key='[internet_penetration]' value='[apk585.internetaccessdata.facebook_cleaned].[internet_penetration]' />
          <map key='[male_total_population]' value='[apk585.internetaccessdata.2012population_cleaned].[male_total_population]' />
          <map key='[number_of_individuals_who_access_internet_from_home]' value='[apk585.internetaccessdata.2012internet_cleaned].[number_of_individuals_who_access_internet_from_home]' />
          <map key='[number_of_individuals_who_access_internet_outside_of_household]' value='[apk585.internetaccessdata.2012internet_cleaned].[number_of_individuals_who_access_internet_outside_of_household]' />
          <map key='[number_of_individuals_with_internet_acess_in_house]' value='[apk585.internetaccessdata.2012internet_cleaned].[number_of_individuals_with_internet_acess_in_house]' />
          <map key='[percent_of_individuals_who_access_internet_from_home]' value='[apk585.internetaccessdata.2012internet_cleaned].[percent_of_individuals_who_access_internet_from_home]' />
          <map key='[percent_of_individuals_who_access_internet_outside_of_household]' value='[apk585.internetaccessdata.2012internet_cleaned].[percent_of_individuals_who_access_internet_outside_of_household]' />
          <map key='[population_percent_of_usa]' value='[apk585.internetaccessdata.facebook_cleaned].[population_percent_of_usa]' />
          <map key='[region (apk585.internetaccessdata.2012income_cleaned)]' value='[apk585.internetaccessdata.2012income_cleaned].[region]' />
          <map key='[region (apk585.internetaccessdata.2012internet_cleaned)]' value='[apk585.internetaccessdata.2012internet_cleaned].[region]' />
          <map key='[region (apk585.internetaccessdata.2012population_cleaned)]' value='[apk585.internetaccessdata.2012population_cleaned].[region]' />
          <map key='[region]' value='[apk585.internetaccessdata.facebook_cleaned].[region]' />
          <map key='[total_estimate_age_10_to_14_years]' value='[apk585.internetaccessdata.2012population_cleaned].[total_estimate_age_10_to_14_years]' />
          <map key='[total_estimate_age_15_to_19_years]' value='[apk585.internetaccessdata.2012population_cleaned].[total_estimate_age_15_to_19_years]' />
          <map key='[total_estimate_age_20_to_24_years]' value='[apk585.internetaccessdata.2012population_cleaned].[total_estimate_age_20_to_24_years]' />
          <map key='[total_estimate_age_25_to_29_years]' value='[apk585.internetaccessdata.2012population_cleaned].[total_estimate_age_25_to_29_years]' />
          <map key='[total_estimate_age_30_to_34_years]' value='[apk585.internetaccessdata.2012population_cleaned].[total_estimate_age_30_to_34_years]' />
          <map key='[total_estimate_age_35_to_39_years]' value='[apk585.internetaccessdata.2012population_cleaned].[total_estimate_age_35_to_39_years]' />
          <map key='[total_estimate_age_40_to_44_years]' value='[apk585.internetaccessdata.2012population_cleaned].[total_estimate_age_40_to_44_years]' />
          <map key='[total_estimate_age_45_to_49_years]' value='[apk585.internetaccessdata.2012population_cleaned].[total_estimate_age_45_to_49_years]' />
          <map key='[total_estimate_age_50_to_54_years]' value='[apk585.internetaccessdata.2012population_cleaned].[total_estimate_age_50_to_54_years]' />
          <map key='[total_estimate_age_55_to_59_years]' value='[apk585.internetaccessdata.2012population_cleaned].[total_estimate_age_55_to_59_years]' />
          <map key='[total_estimate_age_5_to_9_years]' value='[apk585.internetaccessdata.2012population_cleaned].[total_estimate_age_5_to_9_years]' />
          <map key='[total_estimate_age_60_to_64_years]' value='[apk585.internetaccessdata.2012population_cleaned].[total_estimate_age_60_to_64_years]' />
          <map key='[total_estimate_age_65_to_69_years]' value='[apk585.internetaccessdata.2012population_cleaned].[total_estimate_age_65_to_69_years]' />
          <map key='[total_estimate_age_70_to_74_years]' value='[apk585.internetaccessdata.2012population_cleaned].[total_estimate_age_70_to_74_years]' />
          <map key='[total_estimate_age_75_to_79_years]' value='[apk585.internetaccessdata.2012population_cleaned].[total_estimate_age_75_to_79_years]' />
          <map key='[total_estimate_age_80_to_84_years]' value='[apk585.internetaccessdata.2012population_cleaned].[total_estimate_age_80_to_84_years]' />
          <map key='[total_estimate_age_85_years_and_over]' value='[apk585.internetaccessdata.2012population_cleaned].[total_estimate_age_85_years_and_over]' />
          <map key='[total_estimate_age_under_5_years]' value='[apk585.internetaccessdata.2012population_cleaned].[total_estimate_age_under_5_years]' />
          <map key='[total_population]' value='[apk585.internetaccessdata.2012population_cleaned].[total_population]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[apk585.internetaccessdata.facebook_cleaned]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>0</ordinal>
            <caption>Region</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_percent_of_usa</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[population_percent_of_usa]</local-name>
            <parent-name>[apk585.internetaccessdata.facebook_cleaned]</parent-name>
            <remote-alias>Population Percent of USA</remote-alias>
            <ordinal>1</ordinal>
            <caption>Population Percent of USA</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>internet_penetration</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[internet_penetration]</local-name>
            <parent-name>[apk585.internetaccessdata.facebook_cleaned]</parent-name>
            <remote-alias>Internet Penetration</remote-alias>
            <ordinal>2</ordinal>
            <caption>Internet Penetration</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>faceook_users</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[faceook_users]</local-name>
            <parent-name>[apk585.internetaccessdata.facebook_cleaned]</parent-name>
            <remote-alias>Faceook Users</remote-alias>
            <ordinal>3</ordinal>
            <caption>Faceook Users</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>facebook_penetration</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[facebook_penetration]</local-name>
            <parent-name>[apk585.internetaccessdata.facebook_cleaned]</parent-name>
            <remote-alias>Facebook Penetration</remote-alias>
            <ordinal>4</ordinal>
            <caption>Facebook Penetration</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[region (apk585.internetaccessdata.2012population_cleaned)]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>5</ordinal>
            <caption>Region</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_population</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_population]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total Population</remote-alias>
            <ordinal>6</ordinal>
            <caption>Total Population</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_total_population</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[male_total_population]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Male Total Population</remote-alias>
            <ordinal>7</ordinal>
            <caption>Male Total Population</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_total_population</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[female_total_population]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Female Total Population</remote-alias>
            <ordinal>8</ordinal>
            <caption>Female Total Population</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_age_under_5_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_age_under_5_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; AGE - Under 5 years</remote-alias>
            <ordinal>9</ordinal>
            <caption>Total; Estimate; AGE - Under 5 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_age_5_to_9_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_age_5_to_9_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; AGE - 5 to 9 years</remote-alias>
            <ordinal>10</ordinal>
            <caption>Total; Estimate; AGE - 5 to 9 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_age_10_to_14_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_age_10_to_14_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; AGE - 10 to 14 years</remote-alias>
            <ordinal>11</ordinal>
            <caption>Total; Estimate; AGE - 10 to 14 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_age_15_to_19_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_age_15_to_19_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; AGE - 15 to 19 years</remote-alias>
            <ordinal>12</ordinal>
            <caption>Total; Estimate; AGE - 15 to 19 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_age_20_to_24_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_age_20_to_24_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; AGE - 20 to 24 years</remote-alias>
            <ordinal>13</ordinal>
            <caption>Total; Estimate; AGE - 20 to 24 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_age_25_to_29_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_age_25_to_29_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; AGE - 25 to 29 years</remote-alias>
            <ordinal>14</ordinal>
            <caption>Total; Estimate; AGE - 25 to 29 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_age_30_to_34_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_age_30_to_34_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; AGE - 30 to 34 years</remote-alias>
            <ordinal>15</ordinal>
            <caption>Total; Estimate; AGE - 30 to 34 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_age_35_to_39_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_age_35_to_39_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; AGE - 35 to 39 years</remote-alias>
            <ordinal>16</ordinal>
            <caption>Total; Estimate; AGE - 35 to 39 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_age_40_to_44_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_age_40_to_44_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; AGE - 40 to 44 years</remote-alias>
            <ordinal>17</ordinal>
            <caption>Total; Estimate; AGE - 40 to 44 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_age_45_to_49_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_age_45_to_49_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; AGE - 45 to 49 years</remote-alias>
            <ordinal>18</ordinal>
            <caption>Total; Estimate; AGE - 45 to 49 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_age_50_to_54_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_age_50_to_54_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; AGE - 50 to 54 years</remote-alias>
            <ordinal>19</ordinal>
            <caption>Total; Estimate; AGE - 50 to 54 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_age_55_to_59_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_age_55_to_59_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; AGE - 55 to 59 years</remote-alias>
            <ordinal>20</ordinal>
            <caption>Total; Estimate; AGE - 55 to 59 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_age_60_to_64_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_age_60_to_64_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; AGE - 60 to 64 years</remote-alias>
            <ordinal>21</ordinal>
            <caption>Total; Estimate; AGE - 60 to 64 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_age_65_to_69_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_age_65_to_69_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; AGE - 65 to 69 years</remote-alias>
            <ordinal>22</ordinal>
            <caption>Total; Estimate; AGE - 65 to 69 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_age_70_to_74_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_age_70_to_74_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; AGE - 70 to 74 years</remote-alias>
            <ordinal>23</ordinal>
            <caption>Total; Estimate; AGE - 70 to 74 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_age_75_to_79_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_age_75_to_79_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; AGE - 75 to 79 years</remote-alias>
            <ordinal>24</ordinal>
            <caption>Total; Estimate; AGE - 75 to 79 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_age_80_to_84_years</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_age_80_to_84_years]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; AGE - 80 to 84 years</remote-alias>
            <ordinal>25</ordinal>
            <caption>Total; Estimate; AGE - 80 to 84 years</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_estimate_age_85_years_and_over</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[total_estimate_age_85_years_and_over]</local-name>
            <parent-name>[apk585.internetaccessdata.2012population_cleaned]</parent-name>
            <remote-alias>Total; Estimate; AGE - 85 years and over</remote-alias>
            <ordinal>26</ordinal>
            <caption>Total; Estimate; AGE - 85 years and over</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[region (apk585.internetaccessdata.2012internet_cleaned)]</local-name>
            <parent-name>[apk585.internetaccessdata.2012internet_cleaned]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>27</ordinal>
            <caption>Region</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_individuals_with_internet_acess_in_house</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[number_of_individuals_with_internet_acess_in_house]</local-name>
            <parent-name>[apk585.internetaccessdata.2012internet_cleaned]</parent-name>
            <remote-alias>Number of Individuals with Internet Acess in House</remote-alias>
            <ordinal>28</ordinal>
            <caption>Number of Individuals with Internet Acess in House</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_individuals_who_access_internet_outside_of_household</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[number_of_individuals_who_access_internet_outside_of_household]</local-name>
            <parent-name>[apk585.internetaccessdata.2012internet_cleaned]</parent-name>
            <remote-alias>Number of Individuals who Access Internet outside of Household</remote-alias>
            <ordinal>29</ordinal>
            <caption>Number of Individuals who Access Internet outside of Household</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_of_individuals_who_access_internet_outside_of_household</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[percent_of_individuals_who_access_internet_outside_of_household]</local-name>
            <parent-name>[apk585.internetaccessdata.2012internet_cleaned]</parent-name>
            <remote-alias>Percent of Individuals who Access Internet outside of Household</remote-alias>
            <ordinal>30</ordinal>
            <caption>Percent of Individuals who Access Internet outside of Household</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_individuals_who_access_internet_from_home</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[number_of_individuals_who_access_internet_from_home]</local-name>
            <parent-name>[apk585.internetaccessdata.2012internet_cleaned]</parent-name>
            <remote-alias>Number of Individuals who Access Internet from Home</remote-alias>
            <ordinal>31</ordinal>
            <caption>Number of Individuals who Access Internet from Home</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_of_individuals_who_access_internet_from_home</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[percent_of_individuals_who_access_internet_from_home]</local-name>
            <parent-name>[apk585.internetaccessdata.2012internet_cleaned]</parent-name>
            <remote-alias>Percent of Individuals who Access Internet from Home</remote-alias>
            <ordinal>32</ordinal>
            <caption>Percent of Individuals who Access Internet from Home</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[region (apk585.internetaccessdata.2012income_cleaned)]</local-name>
            <parent-name>[apk585.internetaccessdata.2012income_cleaned]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>33</ordinal>
            <caption>Region</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average_household_income</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[average_household_income]</local-name>
            <parent-name>[apk585.internetaccessdata.2012income_cleaned]</parent-name>
            <remote-alias>Average Household Income</remote-alias>
            <ordinal>34</ordinal>
            <caption>Average Household Income</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Male Percentage' datatype='real' name='[Calculation_1230045658081157134]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([male_total_population])/SUM([total_population])) * 100' />
      </column>
      <column caption='Female Percentage' datatype='real' name='[Calculation_1230045658088955919]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([female_total_population])/SUM([total_population]))*100' />
      </column>
      <column caption='Youth' datatype='real' name='[Calculation_1230045658363994128]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((SUM([total_estimate_age_15_to_19_years])+SUM([total_estimate_age_20_to_24_years])+SUM([total_estimate_age_25_to_29_years]))/SUM([total_population]))*100' />
      </column>
      <column caption='Elder Age Group' datatype='real' name='[Calculation_1230045658407514134]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((SUM([total_estimate_age_60_to_64_years])+SUM([total_estimate_age_65_to_69_years])+SUM([total_estimate_age_70_to_74_years])+SUM([total_estimate_age_75_to_79_years])+SUM([total_estimate_age_80_to_84_years])+SUM([total_estimate_age_85_years_and_over]))/SUM([total_population]))*100' />
      </column>
      <column caption='Level Of Facebook Penetration' datatype='string' name='[Calculation_1230045658441191447]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [facebook_penetration] &lt;= [Parameters].[Parameter 2] THEN &quot;Low&quot;&#13;&#10;ELSEIF [facebook_penetration] &gt;= [Parameters].[Parameter 1] THEN &quot;High&quot;&#13;&#10;ELSE &quot;Medium&quot;&#13;&#10;END' />
      </column>
      <column caption='Level Of Net Penetration' datatype='string' name='[Calculation_1230045658445385753]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [internet_penetration] &lt;= [Parameters].[Parameter 4] THEN &quot;Low&quot;&#13;&#10;ELSEIF [internet_penetration] &gt;= [Parameters].[Parameter 3] THEN &quot;High&quot;&#13;&#10;ELSE &quot;Medium&quot;&#13;&#10;END' />
      </column>
      <column caption='Level of National Average Income' datatype='string' name='[Calculation_1230045658476216349]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [average_household_income] &lt;= [Parameters].[Parameter 6] THEN &quot;Low&quot;&#13;&#10;ELSEIF [average_household_income] &gt;= [Parameters].[Parameter 5] THEN &quot;High&quot;&#13;&#10;ELSE &quot;Medium&quot;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[facebook_penetration (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[facebook_penetration]' peg='0' size='19.9' />
      </column>
      <column datatype='real' name='[facebook_penetration]' role='measure' type='quantitative' />
      <column datatype='string' name='[region (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[region]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Delaware, District of Columbia, North Dakota and 2 more&quot;'>
            <value>&quot;Delaware&quot;</value>
            <value>&quot;District of Columbia&quot;</value>
            <value>&quot;North Dakota&quot;</value>
            <value>&quot;Vermont&quot;</value>
            <value>&quot;Wyoming&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[top 5 fb pen]' derivation='InOut' name='[io:top 5 fb pen:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1230045658476216349]' derivation='None' name='[none:Calculation_1230045658476216349:nk]' pivot='key' type='nominal' />
      <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Level of National Average Income,region)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_1230045658476216349:nk]' />
          <groupfilter function='level-members' level='[none:region:nk]' />
        </groupfilter>
      </group>
      <group name='[F]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[region]' member='&quot;District of Columbia&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Georgia&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Illinois&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Rhode Island&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Washington&quot;' />
        </groupfilter>
      </group>
      <group name='[M]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[region]' member='&quot;District of Columbia&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Georgia&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Illinois&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Rhode Island&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Washington&quot;' />
        </groupfilter>
      </group>
      <group name='[Top 4 FB Penetration]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[region]' member='&quot;District of Columbia&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Illinois&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Rhode Island&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Washington&quot;' />
        </groupfilter>
      </group>
      <group name='[internet]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[region]' member='&quot;Connecticut&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;New Hampshire&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;New Jersey&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Oregon&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Utah&quot;' />
        </groupfilter>
      </group>
      <group name='[top 5 fb pen]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[region]' member='&quot;District of Columbia&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Georgia&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Illinois&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Rhode Island&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Washington&quot;' />
        </groupfilter>
      </group>
      <group caption='Top 5 Younger Group Percentage' name='[youth most]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[region]' member='&quot;Alaska&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;District of Columbia&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;North Dakota&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Vermont&quot;' />
          <groupfilter function='member' level='[region]' member='&quot;Wyoming&quot;' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/James/Documents/My Tableau Repository/Datasources/federated.16kl8b808nrotj154kv001p16gnp_0eqorx707xmkdr1f2k4wy1koq192.tde' schema='Extract' tablename='Extract' update-time='12/05/2017 02:39:48 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[average_household_income]' value='[Extract].[average_household_income]' />
            <map key='[facebook_penetration (bin)]' value='[Extract].[facebook_penetration (bin)]' />
            <map key='[facebook_penetration]' value='[Extract].[facebook_penetration]' />
            <map key='[faceook_users]' value='[Extract].[faceook_users]' />
            <map key='[female_total_population]' value='[Extract].[female_total_population]' />
            <map key='[internet_penetration]' value='[Extract].[internet_penetration]' />
            <map key='[male_total_population]' value='[Extract].[male_total_population]' />
            <map key='[number_of_individuals_who_access_internet_from_home]' value='[Extract].[number_of_individuals_who_access_internet_from_home]' />
            <map key='[number_of_individuals_who_access_internet_outside_of_household]' value='[Extract].[number_of_individuals_who_access_internet_outside_of_household]' />
            <map key='[number_of_individuals_with_internet_acess_in_house]' value='[Extract].[number_of_individuals_with_internet_acess_in_house]' />
            <map key='[percent_of_individuals_who_access_internet_from_home]' value='[Extract].[percent_of_individuals_who_access_internet_from_home]' />
            <map key='[percent_of_individuals_who_access_internet_outside_of_household]' value='[Extract].[percent_of_individuals_who_access_internet_outside_of_household]' />
            <map key='[population_percent_of_usa]' value='[Extract].[population_percent_of_usa]' />
            <map key='[region (apk585.internetaccessdata.2012income_cleaned)]' value='[Extract].[region]' />
            <map key='[region (apk585.internetaccessdata.2012internet_cleaned)]' value='[Extract].[region1]' />
            <map key='[region (apk585.internetaccessdata.2012population_cleaned)]' value='[Extract].[region2]' />
            <map key='[region (group)]' value='[Extract].[region (group)]' />
            <map key='[region]' value='[Extract].[region3]' />
            <map key='[total_estimate_age_10_to_14_years]' value='[Extract].[total_estimate_age_10_to_14_years]' />
            <map key='[total_estimate_age_15_to_19_years]' value='[Extract].[total_estimate_age_15_to_19_years]' />
            <map key='[total_estimate_age_20_to_24_years]' value='[Extract].[total_estimate_age_20_to_24_years]' />
            <map key='[total_estimate_age_25_to_29_years]' value='[Extract].[total_estimate_age_25_to_29_years]' />
            <map key='[total_estimate_age_30_to_34_years]' value='[Extract].[total_estimate_age_30_to_34_years]' />
            <map key='[total_estimate_age_35_to_39_years]' value='[Extract].[total_estimate_age_35_to_39_years]' />
            <map key='[total_estimate_age_40_to_44_years]' value='[Extract].[total_estimate_age_40_to_44_years]' />
            <map key='[total_estimate_age_45_to_49_years]' value='[Extract].[total_estimate_age_45_to_49_years]' />
            <map key='[total_estimate_age_50_to_54_years]' value='[Extract].[total_estimate_age_50_to_54_years]' />
            <map key='[total_estimate_age_55_to_59_years]' value='[Extract].[total_estimate_age_55_to_59_years]' />
            <map key='[total_estimate_age_5_to_9_years]' value='[Extract].[total_estimate_age_5_to_9_years]' />
            <map key='[total_estimate_age_60_to_64_years]' value='[Extract].[total_estimate_age_60_to_64_years]' />
            <map key='[total_estimate_age_65_to_69_years]' value='[Extract].[total_estimate_age_65_to_69_years]' />
            <map key='[total_estimate_age_70_to_74_years]' value='[Extract].[total_estimate_age_70_to_74_years]' />
            <map key='[total_estimate_age_75_to_79_years]' value='[Extract].[total_estimate_age_75_to_79_years]' />
            <map key='[total_estimate_age_80_to_84_years]' value='[Extract].[total_estimate_age_80_to_84_years]' />
            <map key='[total_estimate_age_85_years_and_over]' value='[Extract].[total_estimate_age_85_years_and_over]' />
            <map key='[total_estimate_age_under_5_years]' value='[Extract].[total_estimate_age_under_5_years]' />
            <map key='[total_population]' value='[Extract].[total_population]' />
          </cols>
          <calculations>
            <calculation column='[facebook_penetration (bin)]' formula='SYS_NUMBIN([facebook_penetration],19.9)' />
            <calculation column='[region (group)]' formula='CASE [region]&#10;  WHEN &quot;Delaware&quot; THEN &quot;Delaware, District of Columbia, North Dakota and 2 more&quot;&#10;  WHEN &quot;District of Columbia&quot; THEN &quot;Delaware, District of Columbia, North Dakota and 2 more&quot;&#10;  WHEN &quot;North Dakota&quot; THEN &quot;Delaware, District of Columbia, North Dakota and 2 more&quot;&#10;  WHEN &quot;Vermont&quot; THEN &quot;Delaware, District of Columbia, North Dakota and 2 more&quot;&#10;  WHEN &quot;Wyoming&quot; THEN &quot;Delaware, District of Columbia, North Dakota and 2 more&quot;&#10;  ELSE &quot;Other&quot;&#10;END' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='51' timestamp-start='2017-12-05 02:39:48.091' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>average_household_income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[average_household_income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>average_household_income</remote-alias>
              <ordinal>0</ordinal>
              <family>apk585.internetaccessdata.2012income_cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3537358.0</statistic>
                <statistic aggregation='Avg' datatype='real'>69359.96078431372</statistic>
                <statistic aggregation='Min' datatype='integer'>52677</statistic>
                <statistic aggregation='Max' datatype='integer'>102160</statistic>
                <statistic aggregation='Stdev' datatype='real'>11334.821517713959</statistic>
                <statistic aggregation='StdevP' datatype='real'>11223.145675843614</statistic>
                <statistic aggregation='Var' datatype='real'>128478178.83843137</statistic>
                <statistic aggregation='VarP' datatype='real'>125958998.86120723</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>251774921102.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>facebook_penetration</remote-name>
              <remote-type>5</remote-type>
              <local-name>[facebook_penetration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>facebook_penetration</remote-alias>
              <ordinal>1</ordinal>
              <family>apk585.internetaccessdata.facebook_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>43</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2294.5999999999999</statistic>
                <statistic aggregation='Avg' datatype='real'>44.992156862745098</statistic>
                <statistic aggregation='Min' datatype='real'>24.199999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>260.10000000000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>31.465853512258366</statistic>
                <statistic aggregation='StdevP' datatype='real'>31.155837542826582</statistic>
                <statistic aggregation='Var' datatype='real'>990.09993725490222</statistic>
                <statistic aggregation='VarP' datatype='real'>970.68621299500228</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>152744.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>faceook_users</remote-name>
              <remote-type>3</remote-type>
              <local-name>[faceook_users]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>faceook_users</remote-alias>
              <ordinal>2</ordinal>
              <family>apk585.internetaccessdata.facebook_cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>263889380.0</statistic>
                <statistic aggregation='Avg' datatype='real'>5174301.5686274506</statistic>
                <statistic aggregation='Min' datatype='integer'>216140</statistic>
                <statistic aggregation='Max' datatype='integer'>133518980</statistic>
                <statistic aggregation='Stdev' datatype='real'>18585717.699141711</statistic>
                <statistic aggregation='StdevP' datatype='real'>18402602.714263257</statistic>
                <statistic aggregation='Var' datatype='real'>345428902392189.5</statistic>
                <statistic aggregation='VarP' datatype='real'>338655786659009.31</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>18636888352487600.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>female_total_population</remote-name>
              <remote-type>3</remote-type>
              <local-name>[female_total_population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>female_total_population</remote-alias>
              <ordinal>3</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>315529203.0</statistic>
                <statistic aggregation='Avg' datatype='real'>6186847.1176470593</statistic>
                <statistic aggregation='Min' datatype='integer'>283676</statistic>
                <statistic aggregation='Max' datatype='integer'>159477797</statistic>
                <statistic aggregation='Stdev' datatype='real'>22177114.722406618</statistic>
                <statistic aggregation='StdevP' datatype='real'>21958615.652702745</statistic>
                <statistic aggregation='Var' datatype='real'>491824417410784.37</statistic>
                <statistic aggregation='VarP' datatype='real'>482180801383121.94</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>26543351810653244.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>internet_penetration</remote-name>
              <remote-type>5</remote-type>
              <local-name>[internet_penetration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>internet_penetration</remote-alias>
              <ordinal>4</ordinal>
              <family>apk585.internetaccessdata.facebook_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3942.4000000000005</statistic>
                <statistic aggregation='Avg' datatype='real'>77.301960784313735</statistic>
                <statistic aggregation='Min' datatype='real'>59.299999999999997</statistic>
                <statistic aggregation='Max' datatype='real'>90.099999999999994</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.6339879468107332</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.5686268656715203</statistic>
                <statistic aggregation='Var' datatype='real'>44.009796078430085</statistic>
                <statistic aggregation='VarP' datatype='real'>43.146858900421655</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>306955.73999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>male_total_population</remote-name>
              <remote-type>3</remote-type>
              <local-name>[male_total_population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>male_total_population</remote-alias>
              <ordinal>5</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>305652733.0</statistic>
                <statistic aggregation='Avg' datatype='real'>5993190.8431372549</statistic>
                <statistic aggregation='Min' datatype='integer'>292736</statistic>
                <statistic aggregation='Max' datatype='integer'>154436243</statistic>
                <statistic aggregation='Stdev' datatype='real'>21479908.246145405</statistic>
                <statistic aggregation='StdevP' datatype='real'>21268278.373285279</statistic>
                <statistic aggregation='Var' datatype='real'>461386458262825.44</statistic>
                <statistic aggregation='VarP' datatype='real'>452339664963554.37</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>24901158073736748.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>number_of_individuals_who_access_internet_from_home</remote-name>
              <remote-type>3</remote-type>
              <local-name>[number_of_individuals_who_access_internet_from_home]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>number_of_individuals_who_access_internet_from_home</remote-alias>
              <ordinal>6</ordinal>
              <family>apk585.internetaccessdata.2012internet_cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>406191000.0</statistic>
                <statistic aggregation='Avg' datatype='real'>7964529.4117647056</statistic>
                <statistic aggregation='Min' datatype='integer'>403000</statistic>
                <statistic aggregation='Max' datatype='integer'>205500000</statistic>
                <statistic aggregation='Stdev' datatype='real'>28566497.450232111</statistic>
                <statistic aggregation='StdevP' datatype='real'>28285047.261796754</statistic>
                <statistic aggregation='Var' datatype='real'>816044776574117.62</statistic>
                <statistic aggregation='VarP' datatype='real'>800043898602076.12</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>44037358995000000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>number_of_individuals_who_access_internet_outside_of_household</remote-name>
              <remote-type>3</remote-type>
              <local-name>[number_of_individuals_who_access_internet_outside_of_household]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>number_of_individuals_who_access_internet_outside_of_household</remote-alias>
              <ordinal>7</ordinal>
              <family>apk585.internetaccessdata.2012internet_cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>439053000.0</statistic>
                <statistic aggregation='Avg' datatype='real'>8608882.3529411759</statistic>
                <statistic aggregation='Min' datatype='integer'>436000</statistic>
                <statistic aggregation='Max' datatype='integer'>222038000</statistic>
                <statistic aggregation='Stdev' datatype='real'>30861672.680298496</statistic>
                <statistic aggregation='StdevP' datatype='real'>30557609.376547907</statistic>
                <statistic aggregation='Var' datatype='real'>952442840625882.5</statistic>
                <statistic aggregation='VarP' datatype='real'>933767490809688.62</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>51401897655000000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>number_of_individuals_with_internet_acess_in_house</remote-name>
              <remote-type>3</remote-type>
              <local-name>[number_of_individuals_with_internet_acess_in_house]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>number_of_individuals_with_internet_acess_in_house</remote-alias>
              <ordinal>8</ordinal>
              <family>apk585.internetaccessdata.2012internet_cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>465994000.0</statistic>
                <statistic aggregation='Avg' datatype='real'>9137137.2549019605</statistic>
                <statistic aggregation='Min' datatype='integer'>450000</statistic>
                <statistic aggregation='Max' datatype='integer'>235721000</statistic>
                <statistic aggregation='Stdev' datatype='real'>32785289.27614921</statistic>
                <statistic aggregation='StdevP' datatype='real'>32462273.62255865</statistic>
                <statistic aggregation='Var' datatype='real'>1074875192920784.4</statistic>
                <statistic aggregation='VarP' datatype='real'>1053799208745867.1</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>58001610784000000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>percent_of_individuals_who_access_internet_from_home</remote-name>
              <remote-type>5</remote-type>
              <local-name>[percent_of_individuals_who_access_internet_from_home]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>percent_of_individuals_who_access_internet_from_home</remote-alias>
              <ordinal>9</ordinal>
              <family>apk585.internetaccessdata.2012internet_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3563.5999999999995</statistic>
                <statistic aggregation='Avg' datatype='real'>69.874509803921555</statistic>
                <statistic aggregation='Min' datatype='real'>56.0</statistic>
                <statistic aggregation='Max' datatype='real'>79.5</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.7445920007344693</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.6879936549306933</statistic>
                <statistic aggregation='Var' datatype='real'>33.000337254902455</statistic>
                <statistic aggregation='VarP' datatype='real'>32.353271818531823</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>250654.81999999992</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>percent_of_individuals_who_access_internet_outside_of_household</remote-name>
              <remote-type>5</remote-type>
              <local-name>[percent_of_individuals_who_access_internet_outside_of_household]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>percent_of_individuals_who_access_internet_outside_of_household</remote-alias>
              <ordinal>10</ordinal>
              <family>apk585.internetaccessdata.2012internet_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>39</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3861.3000000000002</statistic>
                <statistic aggregation='Avg' datatype='real'>75.711764705882359</statistic>
                <statistic aggregation='Min' datatype='real'>64.0</statistic>
                <statistic aggregation='Max' datatype='real'>83.5</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.0437147841178067</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.9940218009693735</statistic>
                <statistic aggregation='Var' datatype='real'>25.439058823528534</statistic>
                <statistic aggregation='VarP' datatype='real'>24.940253748557389</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>293617.78999999998</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population_percent_of_usa</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population_percent_of_usa]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population_percent_of_usa</remote-alias>
              <ordinal>11</ordinal>
              <family>apk585.internetaccessdata.facebook_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>197.79999999999998</statistic>
                <statistic aggregation='Avg' datatype='real'>3.8784313725490192</statistic>
                <statistic aggregation='Min' datatype='real'>0.20000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>13.905327234200428</statistic>
                <statistic aggregation='StdevP' datatype='real'>13.768325595230188</statistic>
                <statistic aggregation='Var' datatype='real'>193.3581254901961</statistic>
                <statistic aggregation='VarP' datatype='real'>189.56678969627069</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10435.060000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region (apk585.internetaccessdata.2012income_cleaned)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>region</remote-alias>
              <ordinal>12</ordinal>
              <family>apk585.internetaccessdata.2012income_cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Montana&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region (apk585.internetaccessdata.2012internet_cleaned)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>region1</remote-alias>
              <ordinal>13</ordinal>
              <family>apk585.internetaccessdata.2012internet_cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Montana&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region (apk585.internetaccessdata.2012population_cleaned)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>region2</remote-alias>
              <ordinal>14</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>region3</remote-alias>
              <ordinal>15</ordinal>
              <family>apk585.internetaccessdata.facebook_cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_age_10_to_14_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_age_10_to_14_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_age_10_to_14_years</remote-alias>
              <ordinal>16</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>332.79999999999984</statistic>
                <statistic aggregation='Avg' datatype='real'>6.5254901960784286</statistic>
                <statistic aggregation='Min' datatype='real'>3.7999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>8.5</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.64678996196756955</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.64041749166416562</statistic>
                <statistic aggregation='Var' datatype='real'>0.41833725490201007</statistic>
                <statistic aggregation='VarP' datatype='real'>0.41013456362942163</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2192.6000000000004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_age_15_to_19_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_age_15_to_19_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_age_15_to_19_years</remote-alias>
              <ordinal>17</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>347.7000000000001</statistic>
                <statistic aggregation='Avg' datatype='real'>6.8176470588235318</statistic>
                <statistic aggregation='Min' datatype='real'>5.9000000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>7.7999999999999998</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.35816525926049891</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.35463645143638656</statistic>
                <statistic aggregation='Var' datatype='real'>0.1282823529411404</statistic>
                <statistic aggregation='VarP' datatype='real'>0.12576701268739254</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2376.9099999999994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_age_20_to_24_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_age_20_to_24_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_age_20_to_24_years</remote-alias>
              <ordinal>18</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>366.59999999999997</statistic>
                <statistic aggregation='Avg' datatype='real'>7.1882352941176464</statistic>
                <statistic aggregation='Min' datatype='real'>6.0</statistic>
                <statistic aggregation='Max' datatype='real'>9.4000000000000004</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.58194400377478717</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.57621042548761403</statistic>
                <statistic aggregation='Var' datatype='real'>0.33865882352942955</statistic>
                <statistic aggregation='VarP' datatype='real'>0.33201845444061723</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2652.1400000000003</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_age_25_to_29_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_age_25_to_29_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_age_25_to_29_years</remote-alias>
              <ordinal>19</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>344.10000000000002</statistic>
                <statistic aggregation='Avg' datatype='real'>6.7470588235294118</statistic>
                <statistic aggregation='Min' datatype='real'>5.5</statistic>
                <statistic aggregation='Max' datatype='real'>11.9</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.90185429891451407</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.89296881819315732</statistic>
                <statistic aggregation='Var' datatype='real'>0.81334117647058979</statistic>
                <statistic aggregation='VarP' datatype='real'>0.79739331026528415</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2362.3300000000004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_age_30_to_34_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_age_30_to_34_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_age_30_to_34_years</remote-alias>
              <ordinal>20</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>336.60000000000002</statistic>
                <statistic aggregation='Avg' datatype='real'>6.6000000000000005</statistic>
                <statistic aggregation='Min' datatype='real'>5.5</statistic>
                <statistic aggregation='Max' datatype='real'>10.1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.68527366796047973</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.67852203859768234</statistic>
                <statistic aggregation='Var' datatype='real'>0.46960000000000984</statistic>
                <statistic aggregation='VarP' datatype='real'>0.4603921568627547</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2245.0400000000009</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_age_35_to_39_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_age_35_to_39_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_age_35_to_39_years</remote-alias>
              <ordinal>21</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>310.79999999999995</statistic>
                <statistic aggregation='Avg' datatype='real'>6.0941176470588223</statistic>
                <statistic aggregation='Min' datatype='real'>5.2000000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>7.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.38802668192067058</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.38420366571314352</statistic>
                <statistic aggregation='Var' datatype='real'>0.15056470588236526</statistic>
                <statistic aggregation='VarP' datatype='real'>0.14761245674741694</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1901.5800000000002</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_age_40_to_44_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_age_40_to_44_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_age_40_to_44_years</remote-alias>
              <ordinal>22</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>333.7999999999999</statistic>
                <statistic aggregation='Avg' datatype='real'>6.5450980392156843</statistic>
                <statistic aggregation='Min' datatype='real'>5.5</statistic>
                <statistic aggregation='Max' datatype='real'>7.4000000000000004</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.42299585127528722</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.41882830282955236</statistic>
                <statistic aggregation='Var' datatype='real'>0.1789254901961049</statistic>
                <statistic aggregation='VarP' datatype='real'>0.17541714725108323</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2193.6999999999998</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_age_45_to_49_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_age_45_to_49_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_age_45_to_49_years</remote-alias>
              <ordinal>23</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>345.90000000000009</statistic>
                <statistic aggregation='Avg' datatype='real'>6.7823529411764722</statistic>
                <statistic aggregation='Min' datatype='real'>5.4000000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>8.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.48855127974568036</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.48373784925829522</statistic>
                <statistic aggregation='Var' datatype='real'>0.23868235294114201</statistic>
                <statistic aggregation='VarP' datatype='real'>0.23400230680504117</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2357.9499999999994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_age_50_to_54_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_age_50_to_54_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_age_50_to_54_years</remote-alias>
              <ordinal>24</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>369.29999999999995</statistic>
                <statistic aggregation='Avg' datatype='real'>7.2411764705882344</statistic>
                <statistic aggregation='Min' datatype='real'>5.4000000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>8.5999999999999996</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.54778699166310452</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.54238994386980699</statistic>
                <statistic aggregation='Var' datatype='real'>0.30007058823531418</statistic>
                <statistic aggregation='VarP' datatype='real'>0.29418685121109234</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2689.1700000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_age_55_to_59_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_age_55_to_59_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_age_55_to_59_years</remote-alias>
              <ordinal>25</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>344.19999999999999</statistic>
                <statistic aggregation='Avg' datatype='real'>6.7490196078431373</statistic>
                <statistic aggregation='Min' datatype='real'>5.0999999999999996</statistic>
                <statistic aggregation='Max' datatype='real'>8.1999999999999993</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.55977586551034164</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.55426069785270604</statistic>
                <statistic aggregation='Var' datatype='real'>0.31334901960785205</statistic>
                <statistic aggregation='VarP' datatype='real'>0.30720492118416864</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2338.6800000000003</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_age_5_to_9_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_age_5_to_9_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_age_5_to_9_years</remote-alias>
              <ordinal>26</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>331.99999999999994</statistic>
                <statistic aggregation='Avg' datatype='real'>6.5098039215686265</statistic>
                <statistic aggregation='Min' datatype='real'>4.7999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>8.8000000000000007</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.64381826689240551</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.63747507508701606</statistic>
                <statistic aggregation='Var' datatype='real'>0.41450196078434065</statistic>
                <statistic aggregation='VarP' datatype='real'>0.40637447135719673</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2181.9800000000005</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_age_60_to_64_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_age_60_to_64_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_age_60_to_64_years</remote-alias>
              <ordinal>27</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>301.80000000000001</statistic>
                <statistic aggregation='Avg' datatype='real'>5.9176470588235297</statistic>
                <statistic aggregation='Min' datatype='real'>4.0</statistic>
                <statistic aggregation='Max' datatype='real'>7.2999999999999998</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.53467967320740417</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.52941176470588236</statistic>
                <statistic aggregation='Var' datatype='real'>0.28588235294117648</statistic>
                <statistic aggregation='VarP' datatype='real'>0.28027681660899656</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1800.2400000000002</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_age_65_to_69_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_age_65_to_69_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_age_65_to_69_years</remote-alias>
              <ordinal>28</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>229.10000000000002</statistic>
                <statistic aggregation='Avg' datatype='real'>4.4921568627450981</statistic>
                <statistic aggregation='Min' datatype='real'>3.1000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>5.5</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.51140713223610523</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.50636851544432682</statistic>
                <statistic aggregation='Var' datatype='real'>0.26153725490195723</statistic>
                <statistic aggregation='VarP' datatype='real'>0.25640907343329139</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1042.23</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_age_70_to_74_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_age_70_to_74_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_age_70_to_74_years</remote-alias>
              <ordinal>29</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>168.20000000000002</statistic>
                <statistic aggregation='Avg' datatype='real'>3.2980392156862748</statistic>
                <statistic aggregation='Min' datatype='real'>2.2999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>4.4000000000000004</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.39420309287392774</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.39031922384292528</statistic>
                <statistic aggregation='Var' datatype='real'>0.15539607843137049</statistic>
                <statistic aggregation='VarP' datatype='real'>0.15234909650134362</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>562.5</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_age_75_to_79_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_age_75_to_79_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_age_75_to_79_years</remote-alias>
              <ordinal>30</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>123.59999999999999</statistic>
                <statistic aggregation='Avg' datatype='real'>2.4235294117647057</statistic>
                <statistic aggregation='Min' datatype='real'>1.3</statistic>
                <statistic aggregation='Max' datatype='real'>3.2999999999999998</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.33141408255782939</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.32814883955250346</statistic>
                <statistic aggregation='Var' datatype='real'>0.10983529411764774</statistic>
                <statistic aggregation='VarP' datatype='real'>0.10768166089965465</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>305.04000000000002</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_age_80_to_84_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_age_80_to_84_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_age_80_to_84_years</remote-alias>
              <ordinal>31</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>94.800000000000011</statistic>
                <statistic aggregation='Avg' datatype='real'>1.858823529411765</statistic>
                <statistic aggregation='Min' datatype='real'>0.90000000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>2.5</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.30995255803960148</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.30689876378224645</statistic>
                <statistic aggregation='Var' datatype='real'>0.09607058823529252</statistic>
                <statistic aggregation='VarP' datatype='real'>0.094186851211071093</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>181.01999999999998</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_age_85_years_and_over</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_age_85_years_and_over]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_age_85_years_and_over</remote-alias>
              <ordinal>32</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>95.200000000000017</statistic>
                <statistic aggregation='Avg' datatype='real'>1.8666666666666669</statistic>
                <statistic aggregation='Min' datatype='real'>0.80000000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>2.7000000000000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.40431011200149974</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.40032666399890904</statistic>
                <statistic aggregation='Var' datatype='real'>0.16346666666666529</statistic>
                <statistic aggregation='VarP' datatype='real'>0.1602614379084954</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>185.87999999999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_estimate_age_under_5_years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_estimate_age_under_5_years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_estimate_age_under_5_years</remote-alias>
              <ordinal>33</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>323.19999999999999</statistic>
                <statistic aggregation='Avg' datatype='real'>6.337254901960784</statistic>
                <statistic aggregation='Min' datatype='real'>5.0</statistic>
                <statistic aggregation='Max' datatype='real'>9.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.684093790152703</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.67735378548529945</statistic>
                <statistic aggregation='Var' datatype='real'>0.46798431372549043</statistic>
                <statistic aggregation='VarP' datatype='real'>0.45880815071126513</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2071.5999999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_population</remote-name>
              <remote-type>3</remote-type>
              <local-name>[total_population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_population</remote-alias>
              <ordinal>34</ordinal>
              <family>apk585.internetaccessdata.2012population_cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>621181936.0</statistic>
                <statistic aggregation='Avg' datatype='real'>12180037.960784314</statistic>
                <statistic aggregation='Min' datatype='integer'>576412</statistic>
                <statistic aggregation='Max' datatype='integer'>313914040</statistic>
                <statistic aggregation='Stdev' datatype='real'>43656924.019127563</statistic>
                <statistic aggregation='StdevP' datatype='real'>43226796.051458515</statistic>
                <statistic aggregation='Var' datatype='real'>1905927014811877.2</statistic>
                <statistic aggregation='VarP' datatype='real'>1868555896874389.5</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1.0286237030162736e+17</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>facebook_penetration (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[facebook_penetration (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>facebook_penetration (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>93.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.8235294117647058</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>13</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.6698009744031312</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.6533493320653172</statistic>
                <statistic aggregation='Var' datatype='real'>2.7882352941176469</statistic>
                <statistic aggregation='VarP' datatype='real'>2.7335640138408306</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>309.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region (group)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region (group)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>region (group)</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>55</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Delaware, District of Columbia, North Dakota and 2 more&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Other&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>220</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.410828' group-percentage='0.132166' measure-ordering='alphabetic' measure-percentage='0.218153' parameter-percentage='0.238853' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:top 5 fb pen:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[region (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Delaware, District of Columbia, North Dakota and 2 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='High FB Penetration' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='46.0'>
          <calculation class='tableau' formula='46.0' />
          <range max='100.0' min='46.0' />
        </column>
        <column caption='Low FB Penetration' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='39.0'>
          <calculation class='tableau' formula='39.0' />
          <range max='39.0' min='0.0' />
        </column>
        <column caption='High Net Penetration' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='80.0'>
          <calculation class='tableau' formula='80.0' />
          <range max='100.0' min='80.0' />
        </column>
        <column caption='Low Net Penetration' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='70.0'>
          <calculation class='tableau' formula='70.0' />
          <range max='70.0' min='0.0' />
        </column>
        <column caption='High Income ' datatype='real' name='[Parameter 5]' param-domain-type='range' role='measure' type='quantitative' value='80000.0'>
          <calculation class='tableau' formula='80000.0' />
          <range max='150000.0' min='80000.0' />
        </column>
        <column caption='Low Income' datatype='real' name='[Parameter 6]' param-domain-type='range' role='measure' type='quantitative' value='65000.0'>
          <calculation class='tableau' formula='65000.0' />
          <range max='65000.0' min='0.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Barchart 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[percent_of_individuals_who_access_internet_from_home]' role='measure' type='quantitative' />
            <column datatype='real' name='[percent_of_individuals_who_access_internet_outside_of_household]' role='measure' type='quantitative' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[percent_of_individuals_who_access_internet_from_home]' derivation='Sum' name='[sum:percent_of_individuals_who_access_internet_from_home:qk]' pivot='key' type='quantitative' />
            <column-instance column='[percent_of_individuals_who_access_internet_outside_of_household]' derivation='Sum' name='[sum:percent_of_individuals_who_access_internet_outside_of_household:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:region:nk]' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_from_home:qk]' scope='rows' value='% of Ppl w/ Access to Net at Home' />
            <format attr='subtitle' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_from_home:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_from_home:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_outside_of_household:qk]' scope='rows' value='% of Ppl w/ Access to Net Outside' />
            <format attr='subtitle' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_outside_of_household:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_outside_of_household:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_outside_of_household:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_from_home:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_outside_of_household:qk] + [federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_from_home:qk])</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Barchart 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column caption='Male Percentage' datatype='real' name='[Calculation_1230045658081157134]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([male_total_population])/SUM([total_population])) * 100' />
            </column>
            <column datatype='real' name='[internet_penetration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[male_total_population]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[internet_penetration]' derivation='Sum' name='[sum:internet_penetration:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1230045658081157134]' derivation='User' name='[usr:Calculation_1230045658081157134:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658081157134:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658081157134:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.16kl8b808nrotj154kv001p16gnp].[sum:internet_penetration:qk]</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Barchart 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column caption='Youth' datatype='real' name='[Calculation_1230045658363994128]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([total_estimate_age_15_to_19_years])+SUM([total_estimate_age_20_to_24_years])+SUM([total_estimate_age_25_to_29_years]))/SUM([total_population]))*100' />
            </column>
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[total_estimate_age_15_to_19_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_20_to_24_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_25_to_29_years]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1230045658363994128]' derivation='User' name='[usr:Calculation_1230045658363994128:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658363994128:qk]</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Barchart 3 part 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column caption='Youth' datatype='real' name='[Calculation_1230045658363994128]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([total_estimate_age_15_to_19_years])+SUM([total_estimate_age_20_to_24_years])+SUM([total_estimate_age_25_to_29_years]))/SUM([total_population]))*100' />
            </column>
            <column datatype='real' name='[facebook_penetration]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[facebook_penetration]' derivation='Sum' name='[sum:facebook_penetration:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_15_to_19_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_20_to_24_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_25_to_29_years]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1230045658363994128]' derivation='User' name='[usr:Calculation_1230045658363994128:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:region:nk]' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;District of Columbia&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658363994128:qk]</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Barchart 3 part 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column caption='Youth' datatype='real' name='[Calculation_1230045658363994128]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([total_estimate_age_15_to_19_years])+SUM([total_estimate_age_20_to_24_years])+SUM([total_estimate_age_25_to_29_years]))/SUM([total_population]))*100' />
            </column>
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[total_estimate_age_15_to_19_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_20_to_24_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_25_to_29_years]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1230045658363994128]' derivation='User' name='[usr:Calculation_1230045658363994128:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16kl8b808nrotj154kv001p16gnp].[youth most]' />
          <slices>
            <column>[federated.16kl8b808nrotj154kv001p16gnp].[youth most]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' value='103' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658363994128:qk]</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Barchart 3, part 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column caption='Youth' datatype='real' name='[Calculation_1230045658363994128]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([total_estimate_age_15_to_19_years])+SUM([total_estimate_age_20_to_24_years])+SUM([total_estimate_age_25_to_29_years]))/SUM([total_population]))*100' />
            </column>
            <column datatype='real' name='[internet_penetration]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[internet_penetration]' derivation='Sum' name='[sum:internet_penetration:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_15_to_19_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_20_to_24_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_25_to_29_years]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1230045658363994128]' derivation='User' name='[usr:Calculation_1230045658363994128:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:region:nk]' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;District of Columbia&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:internet_penetration:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[sum:internet_penetration:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658363994128:qk]</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Barchart 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column caption='Elder Age Group' datatype='real' name='[Calculation_1230045658407514134]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([total_estimate_age_60_to_64_years])+SUM([total_estimate_age_65_to_69_years])+SUM([total_estimate_age_70_to_74_years])+SUM([total_estimate_age_75_to_79_years])+SUM([total_estimate_age_80_to_84_years])+SUM([total_estimate_age_85_years_and_over]))/SUM([total_population]))*100' />
            </column>
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[region]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Delaware, District of Columbia, North Dakota and 2 more&quot;'>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[total_estimate_age_60_to_64_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_65_to_69_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_70_to_74_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_75_to_79_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_80_to_84_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_85_years_and_over]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1230045658407514134]' derivation='User' name='[usr:Calculation_1230045658407514134:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[region (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658407514134:qk]</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Barchart Part 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column caption='Male Percentage' datatype='real' name='[Calculation_1230045658081157134]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([male_total_population])/SUM([total_population])) * 100' />
            </column>
            <column datatype='real' name='[facebook_penetration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[male_total_population]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[percent_of_individuals_who_access_internet_from_home]' role='measure' type='quantitative' />
            <column datatype='real' name='[percent_of_individuals_who_access_internet_outside_of_household]' role='measure' type='quantitative' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[facebook_penetration]' derivation='Sum' name='[sum:facebook_penetration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[percent_of_individuals_who_access_internet_from_home]' derivation='Sum' name='[sum:percent_of_individuals_who_access_internet_from_home:qk]' pivot='key' type='quantitative' />
            <column-instance column='[percent_of_individuals_who_access_internet_outside_of_household]' derivation='Sum' name='[sum:percent_of_individuals_who_access_internet_outside_of_household:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1230045658081157134]' derivation='User' name='[usr:Calculation_1230045658081157134:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:region:nk]' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_from_home:qk]' scope='rows' value='% of Ppl w/ Access to Net at Home' />
            <format attr='subtitle' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_from_home:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_from_home:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_outside_of_household:qk]' scope='rows' value='% of Ppl w/ Access to Net Outside' />
            <format attr='subtitle' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_outside_of_household:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_outside_of_household:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658081157134:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658081157134:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_outside_of_household:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658081157134:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_from_home:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658081157134:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658081157134:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk] + ([federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_outside_of_household:qk] + [federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_from_home:qk]))</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Barchart part 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column caption='Female Percentage' datatype='real' name='[Calculation_1230045658088955919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([female_total_population])/SUM([total_population]))*100' />
            </column>
            <column datatype='real' name='[facebook_penetration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[female_total_population]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[facebook_penetration]' derivation='Sum' name='[sum:facebook_penetration:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1230045658088955919]' derivation='User' name='[usr:Calculation_1230045658088955919:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:region:nk]' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658088955919:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658088955919:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Barchart part 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column caption='Male Percentage' datatype='real' name='[Calculation_1230045658081157134]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([male_total_population])/SUM([total_population])) * 100' />
            </column>
            <column datatype='real' name='[facebook_penetration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[male_total_population]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[facebook_penetration]' derivation='Sum' name='[sum:facebook_penetration:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1230045658081157134]' derivation='User' name='[usr:Calculation_1230045658081157134:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:region:nk]' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658081157134:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658081157134:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Barchart part 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column datatype='real' name='[facebook_penetration]' role='measure' type='quantitative' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[facebook_penetration]' derivation='Sum' name='[sum:facebook_penetration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16kl8b808nrotj154kv001p16gnp].[M]' />
          <slices>
            <column>[federated.16kl8b808nrotj154kv001p16gnp].[M]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[M]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstabs'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='High FB Penetration' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='46.0'>
              <calculation class='tableau' formula='46.0' />
              <range max='100.0' min='46.0' />
            </column>
            <column caption='Low FB Penetration' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='39.0'>
              <calculation class='tableau' formula='39.0' />
              <range max='39.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column caption='Level Of Facebook Penetration' datatype='string' name='[Calculation_1230045658441191447]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [facebook_penetration] &lt;= [Parameters].[Parameter 2] THEN &quot;Low&quot;&#13;&#10;ELSEIF [facebook_penetration] &gt;= [Parameters].[Parameter 1] THEN &quot;High&quot;&#13;&#10;ELSE &quot;Medium&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[average_household_income]' role='measure' type='quantitative' />
            <column datatype='real' name='[facebook_penetration]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1230045658441191447]' derivation='None' name='[none:Calculation_1230045658441191447:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[average_household_income]' derivation='Sum' name='[sum:average_household_income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658441191447:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High&quot;</bucket>
              <bucket>&quot;Medium&quot;</bucket>
              <bucket>&quot;Low&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.16kl8b808nrotj154kv001p16gnp].[sum:average_household_income:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658441191447:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstabs 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='High Net Penetration' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='80.0'>
              <calculation class='tableau' formula='80.0' />
              <range max='100.0' min='80.0' />
            </column>
            <column caption='Low Net Penetration' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='70.0'>
              <calculation class='tableau' formula='70.0' />
              <range max='70.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column caption='Level Of Net Penetration' datatype='string' name='[Calculation_1230045658445385753]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [internet_penetration] &lt;= [Parameters].[Parameter 4] THEN &quot;Low&quot;&#13;&#10;ELSEIF [internet_penetration] &gt;= [Parameters].[Parameter 3] THEN &quot;High&quot;&#13;&#10;ELSE &quot;Medium&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[average_household_income]' role='measure' type='quantitative' />
            <column datatype='real' name='[internet_penetration]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1230045658445385753]' derivation='None' name='[none:Calculation_1230045658445385753:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[average_household_income]' derivation='Sum' name='[sum:average_household_income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658445385753:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High&quot;</bucket>
              <bucket>&quot;Medium&quot;</bucket>
              <bucket>&quot;Low&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' value='21' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658445385753:nk]' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.16kl8b808nrotj154kv001p16gnp].[sum:average_household_income:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658445385753:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstabs 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='High Income ' datatype='real' name='[Parameter 5]' param-domain-type='range' role='measure' type='quantitative' value='80000.0'>
              <calculation class='tableau' formula='80000.0' />
              <range max='150000.0' min='80000.0' />
            </column>
            <column caption='Low Income' datatype='real' name='[Parameter 6]' param-domain-type='range' role='measure' type='quantitative' value='65000.0'>
              <calculation class='tableau' formula='65000.0' />
              <range max='65000.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column caption='Level of National Average Income' datatype='string' name='[Calculation_1230045658476216349]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [average_household_income] &lt;= [Parameters].[Parameter 6] THEN &quot;Low&quot;&#13;&#10;ELSEIF [average_household_income] &gt;= [Parameters].[Parameter 5] THEN &quot;High&quot;&#13;&#10;ELSE &quot;Medium&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[average_household_income]' role='measure' type='quantitative' />
            <column datatype='real' name='[internet_penetration]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1230045658476216349]' derivation='None' name='[none:Calculation_1230045658476216349:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[internet_penetration]' derivation='Sum' name='[sum:internet_penetration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658476216349:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High&quot;</bucket>
              <bucket>&quot;Medium&quot;</bucket>
              <bucket>&quot;Low&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:internet_penetration:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[sum:internet_penetration:qk]' />
              <text column='[federated.16kl8b808nrotj154kv001p16gnp].[sum:internet_penetration:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658476216349:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstabs 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='High Income ' datatype='real' name='[Parameter 5]' param-domain-type='range' role='measure' type='quantitative' value='80000.0'>
              <calculation class='tableau' formula='80000.0' />
              <range max='150000.0' min='80000.0' />
            </column>
            <column caption='Low Income' datatype='real' name='[Parameter 6]' param-domain-type='range' role='measure' type='quantitative' value='65000.0'>
              <calculation class='tableau' formula='65000.0' />
              <range max='65000.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column caption='Level of National Average Income' datatype='string' name='[Calculation_1230045658476216349]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [average_household_income] &lt;= [Parameters].[Parameter 6] THEN &quot;Low&quot;&#13;&#10;ELSEIF [average_household_income] &gt;= [Parameters].[Parameter 5] THEN &quot;High&quot;&#13;&#10;ELSE &quot;Medium&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[average_household_income]' role='measure' type='quantitative' />
            <column datatype='real' name='[facebook_penetration]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1230045658476216349]' derivation='None' name='[none:Calculation_1230045658476216349:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[facebook_penetration]' derivation='Sum' name='[sum:facebook_penetration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16kl8b808nrotj154kv001p16gnp].[Exclusions (Level of National Average Income,region)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Calculation_1230045658476216349:nk]' />
                <groupfilter function='level-members' level='[none:region:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Calculation_1230045658476216349:nk]' member='&quot;High&quot;' />
                <groupfilter function='member' level='[none:region:nk]' member='&quot;District of Columbia&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658476216349:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High&quot;</bucket>
              <bucket>&quot;Medium&quot;</bucket>
              <bucket>&quot;Low&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.16kl8b808nrotj154kv001p16gnp].[Exclusions (Level of National Average Income,region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]' />
              <text column='[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658476216349:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Line Plot 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column datatype='integer' name='[average_household_income]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[average_household_income]' derivation='Sum' name='[sum:average_household_income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <reference-line axis-column='[federated.16kl8b808nrotj154kv001p16gnp].[sum:average_household_income:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.16kl8b808nrotj154kv001p16gnp].[sum:average_household_income:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.16kl8b808nrotj154kv001p16gnp].[sum:average_household_income:qk]</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column datatype='real' name='[internet_penetration]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[internet_penetration]' derivation='Sum' name='[sum:internet_penetration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:region:nk]' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;District of Columbia&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[Longitude (generated)]' field-type='quantitative' max='-6995776.3241830301' min='-14040212.850944875' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[Latitude (generated)]' field-type='quantitative' max='6737699.7063637301' min='2555065.5185988853' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:internet_penetration:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[sum:internet_penetration:qk]' />
              <text column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' />
              <geometry column='[federated.16kl8b808nrotj154kv001p16gnp].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16kl8b808nrotj154kv001p16gnp].[Latitude (generated)]</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Map part 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column datatype='real' name='[facebook_penetration]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[facebook_penetration]' derivation='Sum' name='[sum:facebook_penetration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:region:nk]' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;District of Columbia&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[Longitude (generated)]' field-type='quantitative' max='32911151.4317495' min='25865616.378378473' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[Latitude (generated)]' field-type='quantitative' max='6827417.7390075084' min='2641951.3581946241' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]' />
              <text column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' />
              <geometry column='[federated.16kl8b808nrotj154kv001p16gnp].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16kl8b808nrotj154kv001p16gnp].[Latitude (generated)]</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Packed Bubble'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column caption='Youth' datatype='real' name='[Calculation_1230045658363994128]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([total_estimate_age_15_to_19_years])+SUM([total_estimate_age_20_to_24_years])+SUM([total_estimate_age_25_to_29_years]))/SUM([total_population]))*100' />
            </column>
            <column datatype='real' name='[facebook_penetration]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[facebook_penetration]' derivation='Sum' name='[sum:facebook_penetration:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_15_to_19_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_20_to_24_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_25_to_29_years]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1230045658363994128]' derivation='User' name='[usr:Calculation_1230045658363994128:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:region:nk]' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;District of Columbia&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658363994128:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]' />
              <text column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' />
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658363994128:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Packed Bubbles'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column caption='Elder Age Group' datatype='real' name='[Calculation_1230045658407514134]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([total_estimate_age_60_to_64_years])+SUM([total_estimate_age_65_to_69_years])+SUM([total_estimate_age_70_to_74_years])+SUM([total_estimate_age_75_to_79_years])+SUM([total_estimate_age_80_to_84_years])+SUM([total_estimate_age_85_years_and_over]))/SUM([total_population]))*100' />
            </column>
            <column datatype='real' name='[internet_penetration]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[internet_penetration]' derivation='Sum' name='[sum:internet_penetration:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_60_to_64_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_65_to_69_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_70_to_74_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_75_to_79_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_80_to_84_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_85_years_and_over]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1230045658407514134]' derivation='User' name='[usr:Calculation_1230045658407514134:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:region:nk]' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;District of Columbia&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658407514134:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.16kl8b808nrotj154kv001p16gnp].[sum:internet_penetration:qk]' />
              <text column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' />
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658407514134:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Scatterplot 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column datatype='real' name='[facebook_penetration]' role='measure' type='quantitative' />
            <column datatype='real' name='[internet_penetration]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[facebook_penetration]' derivation='Sum' name='[sum:facebook_penetration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[internet_penetration]' derivation='Sum' name='[sum:internet_penetration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[sum:internet_penetration:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Scatterplot 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[percent_of_individuals_who_access_internet_from_home]' role='measure' type='quantitative' />
            <column datatype='real' name='[percent_of_individuals_who_access_internet_outside_of_household]' role='measure' type='quantitative' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[percent_of_individuals_who_access_internet_from_home]' derivation='Sum' name='[sum:percent_of_individuals_who_access_internet_from_home:qk]' pivot='key' type='quantitative' />
            <column-instance column='[percent_of_individuals_who_access_internet_outside_of_household]' derivation='Sum' name='[sum:percent_of_individuals_who_access_internet_outside_of_household:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_outside_of_household:qk]</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_from_home:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Scatterplot2 part 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column datatype='real' name='[facebook_penetration]' role='measure' type='quantitative' />
            <column datatype='real' name='[internet_penetration]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[percent_of_individuals_who_access_internet_from_home]' role='measure' type='quantitative' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[facebook_penetration]' derivation='Sum' name='[sum:facebook_penetration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[internet_penetration]' derivation='Sum' name='[sum:internet_penetration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[percent_of_individuals_who_access_internet_from_home]' derivation='Sum' name='[sum:percent_of_individuals_who_access_internet_from_home:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_from_home:qk]' scope='cols' value='% of Individuals With Internet Access at Home' />
            <format attr='subtitle' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_from_home:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_from_home:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16kl8b808nrotj154kv001p16gnp].[sum:internet_penetration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk] + [federated.16kl8b808nrotj154kv001p16gnp].[sum:internet_penetration:qk])</rows>
        <cols>[federated.16kl8b808nrotj154kv001p16gnp].[sum:percent_of_individuals_who_access_internet_from_home:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Treemap'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5' name='federated.16kl8b808nrotj154kv001p16gnp' />
          </datasources>
          <datasource-dependencies datasource='federated.16kl8b808nrotj154kv001p16gnp'>
            <column caption='Elder Age Group' datatype='real' name='[Calculation_1230045658407514134]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([total_estimate_age_60_to_64_years])+SUM([total_estimate_age_65_to_69_years])+SUM([total_estimate_age_70_to_74_years])+SUM([total_estimate_age_75_to_79_years])+SUM([total_estimate_age_80_to_84_years])+SUM([total_estimate_age_85_years_and_over]))/SUM([total_population]))*100' />
            </column>
            <column datatype='real' name='[facebook_penetration]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[facebook_penetration]' derivation='Sum' name='[sum:facebook_penetration:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_60_to_64_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_65_to_69_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_70_to_74_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_75_to_79_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_80_to_84_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_estimate_age_85_years_and_over]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1230045658407514134]' derivation='User' name='[usr:Calculation_1230045658407514134:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:region:nk]' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;District of Columbia&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658407514134:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]' />
              <size column='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658407514134:qk]' />
              <text column='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='scatterplot1 part 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='apk585/f-17-edv-project-5/' name='federated.0d3s4hb0i1l7bf1fww6o21w6ihhh' />
          </datasources>
          <datasource-dependencies datasource='federated.0d3s4hb0i1l7bf1fww6o21w6ihhh'>
            <column datatype='real' name='[facebook_penetration]' role='measure' type='quantitative' />
            <column datatype='real' name='[internet_penetration]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[facebook_penetration]' derivation='Sum' name='[sum:facebook_penetration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[internet_penetration]' derivation='Sum' name='[sum:internet_penetration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0d3s4hb0i1l7bf1fww6o21w6ihhh].[none:region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0d3s4hb0i1l7bf1fww6o21w6ihhh].[sum:facebook_penetration:qk]</rows>
        <cols>[federated.0d3s4hb0i1l7bf1fww6o21w6ihhh].[sum:internet_penetration:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Barchart 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[:Measure Names]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063106050:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063196165:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063241223:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063712265:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063777802:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:female_total_population:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Barchart Part 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='12' param='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658081157134:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[:Measure Names]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063106050:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063196165:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063241223:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063712265:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063777802:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:female_total_population:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Barchart part 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='12' param='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658088955919:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658088955919:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Washington&quot;</value>
                <value>0.57699999999999996</value>
                <value>50.102609651831841</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658088955919:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Rhode Island&quot;</value>
                <value>0.52700000000000002</value>
                <value>51.743419925125586</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658088955919:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Illinois&quot;</value>
                <value>0.54800000000000004</value>
                <value>50.939589157651632</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658088955919:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Georgia&quot;</value>
                <value>0.48699999999999999</value>
                <value>51.097984918263151</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658088955919:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;District of Columbia&quot;</value>
                <value>2.601</value>
                <value>52.708346841724875</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[:Measure Names]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063106050:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063196165:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063241223:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063712265:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063777802:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:female_total_population:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Barchart part 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='12' param='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658081157134:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[:Measure Names]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063106050:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063196165:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063241223:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063712265:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063777802:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:female_total_population:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='8' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Barchart part 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[M]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Barchart 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658081157134:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Scatterplot 1'>
      <cards>
        <edge name='left'>
          <strip size='164'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='12' param='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[:Measure Names]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[io:M:nk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063106050:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063196165:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063241223:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063712265:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658063777802:qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:female_total_population:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='scatterplot1 part 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0d3s4hb0i1l7bf1fww6o21w6ihhh].[none:region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0d3s4hb0i1l7bf1fww6o21w6ihhh].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Scatterplot 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Scatterplot2 part 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Barchart 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658363994128:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658363994128:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Wyoming&quot;</value>
                <value>0.0036605761156950239</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658363994128:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658363994128:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Vermont&quot;</value>
                <value>0.0032108061998910569</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658363994128:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658363994128:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;North Dakota&quot;</value>
                <value>0.0033446345772324719</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658363994128:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658363994128:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;District of Columbia&quot;</value>
                <value>0.0043648578337337094</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658363994128:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658363994128:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Alaska&quot;</value>
                <value>0.0031307719335182632</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Packed Bubble'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='title' />
            <card pane-specification-id='0' param='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658363994128:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658363994128:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Barchart 3 part 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Barchart 3 part 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[io:youth most:nk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Barchart 3, part 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.16kl8b808nrotj154kv001p16gnp].[sum:internet_penetration:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:internet_penetration:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Barchart 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='title' />
            <card pane-specification-id='0' param='[federated.16kl8b808nrotj154kv001p16gnp].[region (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658407514134:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[region (group)]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658407514134:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;District of Columbia&quot;</value>
                <value>&quot;Delaware, District of Columbia, North Dakota and 2 more&quot;</value>
                <value>0.0026094258788625434</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Treemap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='title' />
            <card pane-specification-id='0' param='[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Packed Bubbles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='title' />
            <card pane-specification-id='0' param='[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658407514134:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[usr:Calculation_1230045658407514134:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16kl8b808nrotj154kv001p16gnp].[sum:internet_penetration:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[Geometry (generated)]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[Latitude (generated)]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;District of Columbia&quot;</value>
                <value>260.10000000000002</value>
                <value>&quot;POLYGON((-77.1201 38.9346,-77.0419 38.9937,-77.0019 38.9659,-76.9098 38.8929,-77.0384 38.7921,-77.0384 38.8303,-77.0488 38.8407,-77.0332 38.8442,-77.068 38.8998,-77.1027 38.912,-77.1201 38.9346))&quot;</value>
                <value>38.909999999999997</value>
                <value>-77.0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:internet_penetration:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Map part 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[Geometry (generated)]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[Latitude (generated)]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;District of Columbia&quot;</value>
                <value>260.10000000000002</value>
                <value>&quot;POLYGON((-77.1201 38.9346,-77.0419 38.9937,-77.0019 38.9659,-76.9098 38.8929,-77.0384 38.7921,-77.0384 38.8303,-77.0488 38.8407,-77.0332 38.8442,-77.068 38.8998,-77.1027 38.912,-77.1201 38.9346))&quot;</value>
                <value>38.909999999999997</value>
                <value>-77.0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Line Plot 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstabs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658441191447:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658441191447:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:average_household_income:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;High&quot;</value>
                <value>&quot;District of Columbia&quot;</value>
                <value>102160</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[:Measure Names]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658441191447:nk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstabs 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658445385753:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658445385753:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:average_household_income:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Medium&quot;</value>
                <value>&quot;District of Columbia&quot;</value>
                <value>102160</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[:Measure Names]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658441191447:nk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658445385753:nk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstabs 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16kl8b808nrotj154kv001p16gnp].[sum:internet_penetration:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658476216349:nk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstabs 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658476216349:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658476216349:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
                  <field>[federated.16kl8b808nrotj154kv001p16gnp].[sum:facebook_penetration:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;High&quot;</value>
                <value>&quot;District of Columbia&quot;</value>
                <value>260.10000000000002</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658441191447:nk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:Calculation_1230045658476216349:nk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:facebook_penetration (bin):qk]</field>
            <field>[federated.16kl8b808nrotj154kv001p16gnp].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Barchart 1' width='192'>
      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
      XWM7gM265v8HwC4FXqhlXN0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Barchart 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Barchart 3' width='192'>
      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
      b9xX5uAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Barchart 3 part 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Barchart 3 part 3' width='192'>
      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
      /f8HXg45XOpK3SkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Barchart 3, part 4' width='192'>
      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
      Evm0/D85zFyXZ0uQjgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Barchart 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Barchart Part 2' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Barchart part 3' width='192'>
      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
      vkYIQOBr/j+4bknEbFuuKQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Barchart part 4' width='192'>
      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
      bFwHdXMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Barchart part 5' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Crosstabs' width='192'>
      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
      M3hB+2e3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Crosstabs 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crosstabs 3' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Crosstabs 4' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Line Plot 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29yZMk2VX/ezzCY8zIrOqS7Am11BKmRrBAwwK2rPlrnxkrNtgDw8BYaQFm
      0AbWwoD+ISSGVlcOMQ/+FqnPza+fONfdIzKyurr5HbOyyojw4Q7nnnkofvWrX1XD4dC+6lBV
      le33e6uqKv09Go2s1+u9yPu2261VVVX7rizL9L7D4WD7/T6NzcNgMLCiKC46pqqqbLfbpbHs
      drvw3dF954ylKAoryzJ77+FwsO12m67tAjreS6+PwuFwsA8//LAoh8OhffDBBy/2oucCCD2f
      z208HttgMKj9Zma22WxsvV5bURTpu/V6ba9fv7bpdPoiY1osFrZer2vfTyYTm0wm6f2LxSKL
      gDc3N1aW5UXHBcJxCB8eHtL66dr0er30N//r79HfPAOkrKrKer2e3dzcWL/fD8ez3+9tPp+n
      g9j2jghe6hBwMC+7Ay8Ah8PB5vO5bTYbq6oqIc1ut7PVapUm4qEsy4sjGKCIoKCHczgc2nq9
      ThSZDS7L0obDYRZpngO9Xs9Go5Ftt1u7u7s7QtpozPqdIrtyhbIs0/gPh4OZmU2nUyuKonEe
      /X7fRqNRjRP59+nfvP9wOByN/aXgvT8AZo+LXhSF7fd7W61W1u/37eHhwQ6HQyjiDAYDu7q6
      qiHkcwCKfzgcrCxLG41GnRD46urKHh4ebL/fW1EUNhwObTweW7/fv8jGIuqtVisrisImk4kV
      RZEOgudQQL/fPzqYZk8IyXoDo9EoPRfE7Lq2w+HQDodD4oa5eXPodCwvjfxmX4ED0O/3EyId
      Dgdbr9dp8SPkn0wmVpZlZySLKFN0Dci03W5tu93a1dWVTadT22w21u/30z+ADSzL0iaTiQ0G
      AzscDokacnhBrFN1FTgjol9RFGlcyOWK0GaW3qOI1jZ/Dv9gMLDpdHoy5+JgDgYDu7+/T+OA
      yvt3NY3lJeC9PwBmjyx4PB7ber1OVG4+nycEMntatNVqZWZms9msE1LtdjtbLpdpk3LQ7/cT
      JTd73KzRaGTD4TBLrZQqb7dbWy6Xiboq9+KQ+/E2IcR+v0/yPtchc9/c3KQxqThh9sgdc5wB
      0GcillxdXT0LMcuytOvr66TPeeRXEYi5/18O8BsAkVAwt9ttokQqtyp0sX5w/36/t8ViYdfX
      1+Gh6fV6dn19bbvdrmbp4f6mZ+vB9FYhKHOkBFZVZZvNxg6Hg/X7ffOWOo8wfIbD9Pv9EMkQ
      fZrGHH232WxsPB433tsG6BLj8dh2u53t9/u0JnAFPahlWaY1eCl4GRvhmYBoEJkYFbw1wswS
      pTuVjSKC7Pf7pGhH0Ov1bDgcnm1WzVF3MwufezgcbLVa2WKxqBkBgH6/f4SQ+/2+ZnrkvXBK
      OALv77rGfL4EFEVho9HIqqpK++x1jl6vZ5PJxKbTqY1Go4u8NwfvFQdAHNntdnZ1dZXECw/I
      1tvtNv2u4lBXJZX7EG92u92LLfhkMjmiZFC/SF9RBD0cDrZcLmt6Boi0Xq9rYgOcAyPAcDhM
      /oHdbldDNl3HJkCBPwcgTCjeu90uGSn6/X56N+vOmCAIg8HAVqtVZ45+KnxpB4CTD8DOQYrF
      YmH7/T7J0Aq9Xs9ms5ktl8skz5ZlaYPBIIkLp3AAWO12u7XNZnPS/V2BMSuAsNFh9RQY6q7X
      RrZ8M0v6Bpxls9kkUU+vN3s8fL1er/EQIHqeClh/ttutDYdDK8syma4RaZWLsR7gBf6dl0J+
      sy/pAEDRlK2zQIgjZo/OpPF4fISMIMdkMkks/jlIi/JbVVWitJf2IZxq1mNOrEXumslkUjMx
      wgk3m01CfKh+pGvA9fr9fkI29AesaeeuLePr9/vJhKwKOsCBRT/5WluBMCnC1rA4sGEAbLdp
      MXq9XqIgz1k0kG29XtvhcHhRpasrFEWRDv9qtUrczV8zHA4T5+IAmB1zB72H70Bu/Ahw0c1m
      02rh6gpeV2F9sWIRsqEHPfJNeC53KZPpOz8A+/0+iS2R5YMJzWazTrb8S1ALkM3skSK+VPzQ
      qYCcPxgMajqOmSULCoik9+j/ZvEh4PvVapUOvBogELcu4UxU0Ww+nydzMsRQnWw6VuVc6suI
      5tT03qZr3+kByNmAoziTd8kGzR51iKurqxd5N7oNVBrPapf3FMVxuIHG2Og7+L+rBUfNsP6d
      +jx12j0HlsvlkUjnnXXROHRP9FDkxpwzjUfwTg8AsTHeHBeZNB8eHhIXeFfwXHYfAeIdcjrm
      P2KCTtU1QH61gOm7FLzFJzc+vQ9Exw6/Xq9tvV5fZC/8IfJI6yGi/F6fabpfr430H7N3eAAI
      YzB7iiQ0e0I6ZENV5PRgYEI7VeFVCvKuuQrvV+TnQGy32xTXlHPA6TPgIkR48n2EUF3l44gT
      809DPw6Hg202m7OtQcB0Ok0EAFAEzx2CJp0g0nVy+kLE3d/ZAdjtdolqeaofsTOV/zW0mN+6
      UE6cSfv9/tmu/OcAiqU/1BxslM5ofAS7qYkwhyhA7gBE3Fav82PDSqfm6ecAQXrMoc3/oOOL
      TL5t4qqfTwQvfgCgJovFImTHJIZsNpsaFUAZA+GJKvT3N713s9mk2KDtdtvJydWFY6DMDYfD
      1nyD7XabDQcGsNmzqST2YBJWXweQG1s07hx1bBM/omufC4PBIAUGohMwXw/+wPr9vwRBe/ED
      gHfXrD7w3GT4TcUcFs2se4wP7wa6WnYQTYbD4RFV1kOFbXuxWNTi8DEnch/zIJw6AojEcDhM
      5uDdbncUJJfjll5RjBC7ifJ7iN5xKQ85z8ZHoNwFP4w/sBGOnPPOCF70AGD18RsPC8TurBQS
      xVCR7xxLhPoVTpH/UdQZU+SII8nD+y0Q07Chw91w/RPSzfW60YvF4ohLovBq/D6/wR1ycnwk
      YuYQK7pXdTPmckkA2TE/EynbBC8hwr7YAcDs5717Sp2Gw2Fy5MDyNVxgu90m7+ThcLDxeNxK
      iaDSX3zxRYpfOYVrMB4zS5yLQ8A4o5BijVdZr9e23W7t9evXaa54V9vGooiJlxtfAOLQeDyu
      iUq8Q+N6quo4xEJzpsnWGgwGSVH3MfrkVF8a+ZnbdDo9ighQiDjYpeHiB6CqKnt4eKhFdOYo
      8Hq9rtnEoTjEpqjFQ69vg8ViYZvNJm1cURT28PBg19fXraa8SFRiDMiso9HIJpNJ4hZeScyJ
      KrPZzFar1VGyuiaIsAYQBJATrqKHkUMxnU5ttVqlsAOSdvb7vY3H46SnaIgJBwBOhBecsZLI
      c0l524NG4HYRzQBdXzzJ58LFD4APx/WTQYwhNqQoHr2weB69Iqig1gkzy5pDoWosFBykiymv
      3+/bbDZLVisQSZXd7XZr0+k0ufRzCpyXX8kFvr29TQceRHt4eEg+kl6vV0skR2EsiiKFCHMg
      uIa15FAwdjU3o0SrMs1aa1w+nPmlPeJlWdp0Ok2Bj6xJk3UHwoAYrUGR5yjrFz8ASglzk2Bh
      oWYESZk9HSAonJYXORwOdnd3l5BuOp0eIXRRFMnkiQ1b9Ys2QDbV7C/eD3KRjqg5sv4ZpD96
      8YFN82VROATcj/jDWnnfCM+KKDRh010SWDDFEog4Go1erJiAB5TrXq9Xy52uqiod7sPhYLPZ
      LCX5wwXn83kaM3hQVVXisE1mW12ri8+UuBVVaMqyrMmfeBmRi1E6yRSaz+fhs72osVqtwrAC
      KKWKUVBI5QqRhcHLwcjLPgGfsGkU1DaLCwCF9UAVC28yhapfIugvAtXFdB0hQlE4+qWhLEub
      zWZ2f39f83cwZ3BnNBolTqwprzru6XSaOCA6nJ+vwsV5HBPAwgPCKyVkU4vi0f7vA6S6AlaS
      nPVAkWm329nbt29rHs63b9/a7e1tTQkbDAZ2fX1dE6/2+30Kk1ZQUY956/iblEdPpUjM8boA
      ii+H7CUOgGaNmVlKEX1XQYFIAa9evbLJZJKcZYfDIeEO36voGI2P3zBj+z3we3RxDoAIgjzP
      ZEajUaqgwMFYr9fJ7qsZQf4geAVJKSR2eygDv799+7Zm0gNAZhQnwgtev36dEFxFD7LFyENW
      pQvupdAkv+oYcKQhwkGJCU3mADCfxWJh0+n0IhXl2hROdKyXqF6XAyxlhEuoCFoUxclhGPqs
      7XZb88PonC5+xFXZ03RDuAKWCgpbqRLnRSTEKbP8pqnpUSG3eRw6qC/I5hX36XRqNzc3tUVD
      vtR3R06nNi6WC+kdDoc2m81qZlAAveMciwchIXDE1WplDw8PtlqtslYp9unLAPDhufWT4G5N
      ST3vJBQCNgZSQtE0uM3MkvwfhbzqZ6XsbC4KHNdeXV0lZ5Wm1amsz7PMLKs0sXBNCfP6HIAD
      7TkWMB6PG02uuXdsNpukpHYxF6pZGoRgrhqeDbVkzl8nUG5AXjTw4kIe8pgisMq0irga9GX2
      pFB7pTKnsCqgZ0DJzqEkvV7Prq6ukuXHz2symWTLlex2O1ssFmmczI2/c0FtXagujjbWKqqi
      gWj39u3bxN2wTDFOgLEiJryErvFlAvO5uro6qmX6peQEDwaDFE5AqUCzpzAINhMzJhBtMocI
      86XmG2DByNnqFZqoHu/QEA0OJkneOecXgXMgKxYv5qOHE2RuAnQnOKuGbIxGo5qOgx9ArSWs
      g64HFh/WDW/81+kQmD0dhC/9ABDkpaLMbrdL3kg2QqkVCIeCFIVEE/lpZnZ/f18zT+Y20y8K
      Cq86gki+93K+UmL/TBxVOLAIX1DkJwyad+OsawINdWC+RVEkvUaf4Tlfk76iRGc+n9vV1VXj
      OL6q8OJWoK7g2SyUVKmhDhSkN4s3NqK+XSiYRwoUTWoTeYoBEOWqlhqeR5gBzigOMLUxdU5Y
      sOAW/jB5f0U0bjUEeL3DP0OfoyZXVcw3m00a09cNlLCavUeV4VDIFNQbGlkG1EtsZmE5wC6A
      w0XlaUIgcqAhz968pjZ+qjn454GMm82msZGGXqvXeL9DRN2jZ+h9vmqcf8fXEXyZyffmABAe
      gGijJiz+9nVy8Cmoom12muzKwYICq6jVhAhKNbkeDoZuwDNw9uWAA5Qz3aI865i8bO/jkjy1
      z3GS6HMUAv51AtU735vSiMScg0jI74Qea56AFsMye9y09XrdiGQ5wN9g9hRDo8WimmAwGNTM
      i2aW4n9AIpA3B4rUhEN0SRUE6fVz7sD67wlVUUsUh2M8Hn/tzKAedL/emwNg9kS1UECJv6EA
      FqYsFL37+/sje75HBEyhmCTNnvSJ6XRas8UTCapjaQIQZb/fp3Hi9fbP9fFRCjpezUfQdfHX
      a8g07+D7pnF7zuZ1LqpAvHr16mvLBXRv36sDAED5AU2HxMynOkPE2gnwAslR6jCLIl55OCX+
      pd/vt7romQsZYRGV9l7YXDgF36n518vunuvofDxx8HNVC9vXWQ/QtX0vD0AEBGhFXQc9Akyn
      U3v9+nV9omIyfdeV39Azbm5uatajCMm4lhDlKPQBUQmrT4TIkb2fwxJxCT5TsPbrSv09vDdK
      cBvgrMkBmzsajVKYQVdT6LsAxkKrIVXY9XDiI4msXiA7pda9JUjfE1l42uJrVPx8X9btpeHF
      OAD2VrWyPAeomBBRRGzv0+n0vVHgiEGiqgPWoPV6bdfX1ylf2APrRetaQidQtgnxjcKV1Xrl
      Dw0Ws16vd1Shwoeq/2+Cix0AKr9BmcjsQiTJFX7qCsjx5A4oEAZwqe6LlwByh5XSq3e5bZz8
      zsEGYZHP8aRrXR01o8IFOAxYuLiX/VFn3f9GeNYBQJ71Hkz1OlZVlZBWRZNzoN/v283NTS0+
      /32lXlEGVy4brA1AYP1Mm6Eu9/rPmJvVjPy/FZ51ADQBXi0MkdmOuHNyTskT0MCutpqfyXT1
      gk2wLwVdkSoySV76HZe+9+sEz8Ii7Nu5jH7PFTREQOsBmVkqGOtt819F0ASgpmu0UyL5Ev+b
      FND3AZ51ADTjC8i54j34LCQzS/VB30Ui9qVBwx7W67X1eo+tVaPrKK+o60YYxvX1dWji/aqt
      x1cFnnUAsFhE7S79QfDInvOKkt313J607wJUkdQEGDNLMrpHXHofeD3JrF773+xJXie0+v/C
      5eHZgjS9tXyOrdlx5CLQRs3oifWuxIFT5XBCBjDL+qrN2nVyMpkc/Z6L2ymK4qjECgQhdwBY
      W/qEYRJGT+q6hs/RRb7K8OwDgJnu4eGhUwvPnJtfASp5dXX1YsouSIPZlvLpXZpvQO2ZC0W8
      KGviHXaIQpiKfY/jprXxYSEK+AjU/NzrPbVFHQwGtSR77tGkGw4XvgGCEr/qelhXuAh2aSaW
      B138LsgPIA60dU85BRDVUMB9vzKU+aZyIFyP2MNnDlMTxdVmF7lrNZ4Hc6cnAlB9FZfMjtfa
      5yzAtXw9ImqxophrSDj3T6fT98rPcil49gFg0SJ3PKD6wSnIDLW6tD6AWdaLIXzf5Lkmth/x
      QqNRvRcWhR4A2VgvTxCI09EqdLnqESB/ZHouisewZowJvg8v4zV7SgFV0Uw7yvPuu7s7Gw6H
      X2qnnZeAZ5HWqqrC8nMecopx00KCHGVZNhahPWWs6jjTpAg/1ibqD8JD8VWMiQ5+9AxElTZE
      yrWCIheZ9+IR5vlEwVJUl8K7OWjLI2Beqmd8XeBZHEB71Eab6amhfh/9rc+gAjJdWHa7nU2n
      07O5ASIDZViqqkq6i9/QpmAxktvpEqPKv+bVEiqdS6rJHTQ9SNFcEaOi+XE/VfIoOJt7vwKc
      iXfn9osYpJfoGfBlwLM4gKfKKga0UZUckJQyHo9tvV4n6oXl5VzqA5Vcr9d2f3+fRAgfz9+m
      dBfFY5k+qlnzHf+DPATmRTWF2rzdcD6vi+BD8JGgGvdDMk703mhNOMyRD4JrFNAlvi5c4FkH
      wJcjNLMkw6qd2/9mdow0xLtQ3ff+/v6oolvTweoCPnuM8AzlUlEDDjV7MpZcQo2ZpdKQVfVY
      AU8VX51701xylhjGoAkvjEdFRnwSXSxuqpx32S+cfV8HeJYIFCVsRKY9PkOlPKi1Q5W1nFlQ
      G9l5WzfdYbp0cDSzVLC3quJ+YGZPFimUWEJAKOfuKS25C1qSXQHluekA5A4iIo2mQALoOL5U
      SxPkdBi/X/5Z2sDjqwxnHwBfksQslmu9jO8LwyJSmFlqEAHotV4ORZzhfqwlyOVffPFFrShq
      kwOKDjC5kG1kbigrtvUcgqmi7PODtSpeLok/Z4b1ieysjdmTfoIfoGtivaf4StS8KKYtX5XL
      f5Xh7AOA8yj63n/mO8/StUKcLxrFvbrAw+GwRnFBQkSZ2Wxmw+HQrq+vk7mSRgvY9z3r5vmU
      aczNlf8puNvr9VKNTw+KpOopRjZHVoeIqMyuBMHDcrlMa+gbdpg9JbaoqOft+bm5mT0edIoC
      7Ha7VGPf7IlTUoLm6xK096wDEIGnTt6Uxmc11eUoobJjRB213ysFU5ZMZTazJ6TRZBQ9QF02
      0Vdq0KYcXg+IOKBygn6/b6vVKolPVK1AvGH8HrxS60UWIkvVWdVlbnoNYepaFlGLEPD+/X5f
      awP7VYazDgD25S6giK+HRk116n3MgTZyy70HTuIp42KxSHK7N/H550fIRxwO4Q+RKKKgz2fM
      PHs8Htvd3V3iePv9PokZTRYoENxbfRTUQafUvwtAJPycKJPC4fUpmjS6+7J6CTwXzrICqf2/
      CRT5vWWoKIrapj4HEG9QoDebTS0yE/BJ4jmLR/R8/BKKgNGmd3Eq+etOmb9fTxUvEdEoIHYK
      8EwC/NhfuFKUhA93+ypbhE7mANiiu4JHFrW2IAY9164cjamprLq/V+9pkpcpP87G565TE2VV
      HfdI07FFfayiMXprmw89x7vMPxT6pjgtBfbo4eEhHTIq3ylobjFA+9mvojh08gHAEdIVlGKg
      VGEepArzczmAp665a7wFSn9jPE1x9/1+366vr1PzCR+6zBgi55F+p22jukSf6nOVA3kFF+RE
      rzrVHKpyvtmTXqXv+Lo4wICTRSAvh3t2rOzRK21amkNDHLgHMaTNRu71Ca8f6BjU6aWFd3Vc
      Xjlug16vZzc3N7WG3Pw7HA5H79H5IK6Z2ZGJtAmiQx6tEdzJv1N/j/bLi4B6cHLv5B46cPro
      2q8CnHQAWDB18ETIBnh5W60GtEniOqAJ+dk87SDIeGDLOh6llFhRfDdKhag+fwTc6x1n+syI
      WvO9OrO6ig1w3Uh/4XtEJW2coaBr6/dLy9joWP37omfyf65u0/sMJx0AlMGbmxu7vr6ulTH3
      Cwfo37p4XoziOqw1uferNSJ6doQcutlRcw2liqeId1rlzc/di378rvb+UwwAuchVFYUgDlF3
      F0XmaL88R2iDaD3Zu68SFzg7Foju3tqf10Mka+fAb0zuecqy1dTnlddoc1erVcimFTGi0Iam
      MVOQyyMP7x+NRklBRFzQLo1dlVTtsJmj5MxRxSw/x2it/HO6zl33C6JF+1V95vt8IJ5dFgWv
      pZodVTljoXu9Xs3OzcHBve6pYXQAFKm19qUeBEAXnt8Wi0XSRbxip+ELbcqwHxO2feZLMJyZ
      1foELBaLlD8N5SQTq82OrpzJ5yFotTl0K5pqExYRWYyitT7FkuMRG/GHg0781PvsPb5IrmGU
      tuflRm/toHw50Ytch0MGBIzYs256RM24xoMeGO7V34BTKRZFvXRMmpGl13mTMIF2bVxH11Kd
      eiC9inJ0Ro8y25Rw+OdfAjnRQ5gT2Wjay+F9govkBJMg4XtgwR1IGM/dy+HAi0nHSJ7jkT8H
      0ab6v0G6nGKnh6srEBmKYu+D6qD+mrWl70dxbYpeHQ6HoXLrOR+w2+2StzlH4Z+L8DnCA4dS
      TkX0wPuWUnmxkguj0ahWr56CtW2TxYKDf8H3BjZ7ElEulRzfRO3OpYTKzTw3VG9pztnWZD1B
      zCIY0CfFRAYAnGHqZMzpSUAT52sTTxU0S85/j5n4fYGLHQCQfrPZ2Gw26zxJGl+0mc8uxaL9
      c/ymIyKc81wcUR5yiucpoLkIcMyqekzzxAuuZldidiJx7xzowoH99XotugD7/L4cgosVf4FK
      nYL8ZtaI/JHM3wRNFofI7h0FtEFhXwrOEbGAqnosQnB3d2fL5dKqqqr5NbjGZ755Y0DuX9cx
      tP0WzRET7Xw+r3XQ/LLholWnoIKnAPV12p7bBN6i03S9l78jWCwWz+5noO/zYkruujYxTxPi
      V6tVykeoqqqzU81bgUBCOEzOGnfKWuSuRTSiDpGZdba2vRSEB+AUee+5QCx8RHVzSlZEOZSS
      RTqEF3vaDsxyuczW5NH3daHmXdZwv9/bZrNpPHggaZQX0PQuL4p4M+pkMkli1W63O6lSxinX
      8EyU/n6/b/P5PL3/UjreKZB9I+X2XnwAvZ5dXV0lRw9yNGyU+CHEKypGRJsOMnh/gJnVlEb9
      Pger1coWi4Utl8swD4FEkbbnFEWRzKRtQLORpmf5bDGdc5NYoc4zb/IlHwOLHN7tSyMk78Av
      QTDkw8ODzefzLyWMIisCHQ4Hu7+/T6UJX5ITFMVT/1+QDUtKZOEoyzIp3DiW2qwb0eZH1+o9
      5ByTVqnroAF0XcS+LsSEd+YyrfCnaIEq5WS5+eQOBmu63W7t9vY2eY+xaPX7/YsWwtI10JBx
      M0tFBN5145PsEW9ihy8ykN9YCUg8gRNANbDfKxBL34TUbLIir/cttMF6vba7u7skH3Nf12Ye
      ULouoCVKIiiKx8JXNN/T75vmxDrkDjxmaOomwQ0uDdEYGZc6Rd8VlAxqvV4fyWFFUSTZ1CeM
      e+fUJRVGwpt5d2S/hkJpPZumzef50di7KM5VVdnd3Z1NJpNaZlhXxfOUNVgul7VwCg+a8KJ+
      B20gGO2Np7q5dVMT6mg0qvV/iMaLTqH6SZe14f3j8Tgl36xWq6PD/ZJQUup7vV7Xovlw3PB3
      5N2cz+eduqV3gaqqUq6phuXm+g6o0tzVUhEpvsjGcAjMo76mP0DIb662aNP8IrOk3+hTxAAo
      NEolNYE0ESayQHmCgPWH31Q0urq6svF4nKppe04TcdgmiERVLFtwyuVyWeul/JJQEsetooTK
      4lBkKhjo4OmDewnYbrf261//+ijLym8WwHhyyek5VhqxX+bYlDQP+J5eTe8A+agFlCvJ4p/f
      ZH3KvY9DfHNzkziIlm5BTyLURJ1mdN8klMObQnOxQ6y9chGfLtkVNBsNaeRd1B8tyeoviiKZ
      4ZbLZW3CRPfpgLSQql5HzZzfPPykjUQG1JiYXBojjSFO6R+gG+bLmmjFhS7m16ZNxoIG1+z1
      HmuFdnGwIWpSLaIL+MM4m81qqatwCkydy+UyNeoYjUZJdKID/XK5TIF0uhbqyY0cibp+px4C
      T7BoOvLSUKJkEq2n7Y4ATFdaeJXwZ9/ojdIhZlbb/LYaMhxENgdEyC0kyvIpEFlM2DSQLWct
      ubq6StUSmkqiVFWVKtxRrAukmM1mqYhX9C5NkKdp3jmyMMYLqD4dY1TUu7m5ORrXw8NDQsTr
      6+sk/1NEmA71WMeivOTnGkzAk3emAygym1kSBby2TkDXZDKp5eAir0WAjfnu7i7Z73OAPyAK
      hovgHPlQKZNyFqVcPJd1gCv1er2kAG+326yFRMUcL5sT9x+1UkIHwuRKLZ5zi09F3Io2SD58
      G/GXBB2UUpL/zaym5ymVv6ScTrGAd9kUsNTQYLT4XKEqzTYi2YJ6+VB/s2NFBzsz9zalPF5f
      X9v9/X2jXduDWjMipc+/g/97vaeS4IhAvV7P1ut1yhzD7Difz204HNYqukXjYO2wjuDcUiXz
      9evXaT1JwAFIYKmqxyJfFNM6tS+CHgC/DsQ7DYfDdCCopocSDuegcp2ZJd2nKIpaxetIZ2sb
      V7RfEAg41rvwDvd00F671wGbPcV0q7ltu93a/f19TfQ5eslvFK/FYpG8ft6mzjvLsqzlG58C
      LGoXDkIfAmzfaomA+jI/YvmR4SeTSeMhViVYKT+I7AlOk9iAsYHndfVf5NaO743axvoAACAA
      SURBVNFTVOEtiqIWU6TdeUB66gbNZrMadzrHWeotSmZPRgaqfL+0D6qmZcHqvYavAJVjArpA
      0bW60WZPpi7MrlFj6MFgYK9evapxI4LmfK+rcwHqB1KTueQ3Uv9WyukRHetJpOhiZSLmBcC6
      5hVzFclwCpo99Sdr65RDyHTO6sR4cHgp1ddrKH+JfsSBwEdRlqW9ffu2RnROOQQRcrMvZpaS
      i14SagdAlZquGn1Xluf/NrMkY6rMpxvAYeA75NKm8OmcFUcBGRhKZvaIXMvlspaw4tdClVLE
      Pqi7esxV4dTPmmus1LxpvIgdOKfMLDXyy0WAFsVTKyd/IJvEQoXVamWbzabm7UZEojQ9iF9V
      1dnmz2i/LmVa7wK1A6DysTZgaDMLemqoz+Kzj1EHsKywaTjj4BJUk4vMoZFNP4dM6B4kaJs9
      NbJQnYb7vRiFLR/ZH2rsRRr1Y3jRkjlRUAuzc1MAHNY3NTwcDo99lGezWdZUigyf+421y1Wm
      g0Mrx0JEfXh4SJYg5VBaDULnD/jv/X4pDrwrqK2eKpMecpNpui46DLPZLAVzqcfSzGo5ryAN
      ZkN1jzfpKREMBoNaLirxNiibm83Gbm5uEjfgmu12W0tAZ9O1iz2H6vr6OlVkiBTDoihSyZWy
      LK2qqiR6+EaDei/2dl0Xvl8ul6kJt9+brmIi/cG8SOUbbCuoVWw4HFpVVTWjQTQeP34PxB69
      65DoI/KRo+S561Tx9J3ivUUGCqIWERUV/LP5G7s2C+5LffgxqugEdQehtfKx3quWHU09ZAyE
      QHBNWZb26tWrmsJo9tRLgAOmwEHESjSbzdKBaVIi1UqloM47heVyeVRvqG2/PJRlmZxl/jrf
      cETfpYp9hEtNh+pLD4f2FLXLIYhOdfTZI/UpNmQVH66urpIvQvNk9WChpKk4E6VeaogCCdue
      2zB/7Ufm1yuaO5Qesx6NJ1Qv0DLzubVWrhVBhMg5Kuv3CxGmqR9ZZO5VsYjrEA99I4/cuKK1
      QzGnX8K7aMARCpAsUheFUqFNFNGF141r2nwNVoPiDQYDe/369ZGSnkNItbVDoVhkRKzD4ZDM
      mzmdJ0I0z8Gg/iDsYDCwm5ub8LkcPD0U0Ty0Q6V/P0q4rkFTIxEAn0ZOB2jiSjjxUH452OhQ
      kQjIWM3yCfFco9UjXlofSAfAI28uBsd/5wOior/1n8q0SpGaDhpOGmRuf62P6/HWCe7fbDY1
      C4N2OiFhW7PNunAp/ztWKtVrEJ000lMDDqPn6BqrPdwbKtAnCGS7uroKK3jrWqnu0sTdc5lw
      2oCb0GwMFVVVJa4aJe006W1KzDTp5yV7DxwdAB8r3vbiSL7zz1K4u7tLYgvQpPiUZZlSJv17
      eV9EmdUjiyiiwVxRdWpkfeay3+8bi1X5tSF+h0O32WwSNdtut6l5H1Qu12QD5OMAe8MCCDyb
      zRJHI4SkiforwWkrydjv949Ckjlo+g7ixwhj4JCj3Cs30OQm1i8nQlfVox9C9501uWTWWO0A
      6OJGcnoXs2OTps/vZnVlqemQae8srgW5FRgv8j4iDmZJKKWW5IjeHcVGRT2wVK/RjTwcDgkx
      J5NJLde1LEu7v79v7C7jn+0JUY5ymj3pOl6HAyJCk1v/3PiiYr44KQmVQSzyCO6limg8Hqdw
      fmI1HA6HF60ulzLClOoxkJxym+MMHqm8zK8b4wPuchMihILkeE2aN3uyHkAF+ZteWSq7+xDe
      LiY3QiFQ/BCl8GhDMNS2jxhFshABZW3Kv65FROVUjISzMAeQ0BfC1fs8LJfLk+RsNV3r8wjg
      Qy/gH6H1fo5dxWs++xTRpgDMU6E0e2qEpmW+I8RU9uUHm6NQfA81xNERPSdnGVB5U5+rB8pb
      mswsZTBh0/ZxLzlQRC2KR4cSohHeYn898mpVPYZDwzUYpzcRd6Fgfn35zH4hehRFkYL09B72
      KzoQZpaK2PpwlBz42qY6TnwhOl4zS5UzImNFhD/+e/+7GgNOTRyKoDSzI3kci0t02plIE3fg
      PkV0TFqaiOEn3gZeacwtoC4wsiRU1dubc8ioVhCdc4T8XA8g508mk0QBURKp7xlBDlE9aGyQ
      lh6POEwTJzd7im/qEnMzHA7D9rhR8gzjxMPu3x/tlx9zTsqAKF3CcVb6AeQUlghyVD8XtqCJ
      7IvF4qi+j4eImzRFeuYojOYYo2CqNSmikl4saKJanrrxDhqAw8YhCs+VX3UsBPBx6Lrep9C1
      EoNyNP0uF5iHeBi9U79rOvgQHb9f6JCa6nkOHIVCNH3WiTV9brqnKB6LO9HLV3sB5O5pG4c6
      xfzYdcOIfYe7RaJJ05wizqfXq1KvYiVjVF2iCboeED1oTWHVTfulY+wCmFk1mabpfnwtvEsR
      umm/FF+i9TwcDknEnUwmR7phV3hnVYiYsJoiy7K0zWZj9/f3tVpAgLeA5ChV00Ki+CLW4SXu
      KocrRGKXHgo9VJG/oqpO60HWFbpS8AiK4ridUtO1Pmq3CdbrdbJK8Z6iKGpZf7n98tzGr6df
      azzqp6aRHh2ANvnxVGDRvGubeBX6COA4yTWObhPFVBH21FhLLfIszXvQg9b0HlXmdMN4nlfS
      vRL6EtD2bM3F8EAoyCnjO+VabQpi9pTzTMadmTXuFxDtF2tNmHhRPCbsaE+2LhDGAkXfNWnm
      uU0mnQ6qrpRcWXav95g4j5hAbIkimd4fUVb/ux4Kfa/W89T/2xYsJ/urnuTzKXy066UPQpNo
      4y1GXs+hCMFLhBpUVVWj8uwHBHA0GiX5XSNhc0q8jtsTuqp6cl6aPfkpuppJa0rwc6m9mSUH
      kNlTDL4ClF5Z1nQ6TTLddDpNrDM6yXzGyaXQtHhm3USoJi7A/f76CPH00CnFyl3XBXIH/9T7
      VG5+CSBcQim6T6oHQcmr8OJuDvw10X5tNpvOXCA5wvT/SCv3L/JUj7apOig/AFIG1c1PQw28
      u4fDISWJcAgUebA3F0VhDw8PycQWIaF+znGPJq7X9XulSNHzde1ylo4ctM1Lr8EaUxTFUaOP
      8XicQgteivKbWVLKdc3JIIsMAFT+9l1GVcRRaNuvoihOyijL6gA5dgRgg9Wy5l4p9PfjIlfF
      VOU93VD0AOr0axJJF3md5+hYnmMzbqI8bBiN7HJrpp/92pyrK/i1w9+gvg/EINbxpSoww8Xx
      kCsOdfE3MBfGOBgMTirOzB514SRANiFGBxS9iDxerSNk9pTiaHYcl2+W19JVZuYdKM/z+Twp
      bLnxNH1+aXj16lXiYhouoOA5hDep5jhUG+gzMCy8evUqFSPj95cOK66qRw+4Ir8SKrX6cCAh
      hEo0GC8+IhKguhwCrbrRFUI/gN+oaLLItpocDZUmMpDWn10UTM2l9e+kYpwu4mQyqekAsH8f
      rJUTxy4BEAKNx8HKEV3L2M2ewhQiROl6GKL98op4WZZ2d3eXil29ZMphv99vTPBBBKK0SuS7
      KIoi6Yg06zCzVKqmyeSLmHXKYc8mxUciEFBVVUI0bcOpTQ5ofdQF8aAK3rsHEJq7Xq9TaiRU
      A/ELRIT9e4uBn+MlAFGtKIpaIF6TnOrHEiFABHjR9XD5/er1Hgt9kZBDaUaC0rCZvwQgYvnK
      ft5ig37grYA4KUFezVUgFZagwhyc2qDRrCUnuAmBvUkRQAzQ9EGlBlB7QltBYs2f9TkJAM6y
      5XKZtHw1OZKcYVYPwjpXvGgC3stcmgqDKUTimh7SHIIScUkoCQdNuaIvWYLsnWskcmngAN7f
      39eiipkj30f6j5mlIgR+rD7HOPfucxyCRxwgGpiy5ibxCCqgYoHZUyID9W2gArvdLsnOuTHw
      Higci0NYAY0V3r59m5wgREZqYwcW/dJIEAWHRdDF7Nn0G+v2+vVr6/f7aQ2ZD3HyHA7yEljP
      d9F6iJB0z5kAX1HcGwuKokhm8pubmxo3QMT2pm/aZZ07x6PKcGZPcqTGXbRZLfjsT+9ut7P7
      +/vkCe71Hktw0C9WnWRN4gHPRrS6urqy29vbWl152C8BWj6V8F0rxxHouvn5NY2PawkinEwm
      ietgZ1e5GrHSzGrWuueMmxRS1hc9BtM21fEUwKPpdGr39/eNz2eOcFQtzQJxpYoGQF7zuZCt
      C+Q3ySehMCiu9xWHAey7OEJQcPr9fkoW3263taQR/24+a+QfVqGqemxdlCYk7YKiXgfvG5x6
      MKllqvsU5XGgkFZVlcqbPyd8GETXWkoEFqpVR+ekEkRRFPbq1atUgS/3Du7nudoskZIzqgc9
      Jw7KrENpRJ2QUphIlsV2r7/j6e31HruVYM3ReB+fpugXheft93t7+/Zt2vTo9GMtoJaQ9hl4
      Hw7Cpcag6wIyKrIoEcE5td1uz3KCacSp2ZNEoLqGjkv/5lrCW1CUfVqoPzRaP1avw5rlOcG5
      UPMEKyjC59IX9T7SBIn4BDHpVqLFmkBmrZXZBJEYQ66olgvURSQJfrFYvNOmaznIWYaUSnYd
      o98vinh5i4tHRmJmTg2D0ILEUZSrB92Lsizt5uamdjg1fTIipPzPeLX8IhHDJN0/t4tM4gDR
      QDTvVA+DWZyooAFOUGLMl75KGhuijrFIHGha7P1+n9ipWnzYfOReOEEUuPZcioxiz/zJdovm
      7OevRKbpOrNYJwIwOlBKxEe9Mm8qOFCmpanMexN4ySD6TYH8bMaEuVM75fhnMV+K9FLHiOvU
      4vccOCqL4i0lGragCNaFoh0Oh0bbLY2uubcLKLLoovV6vaRTHA6H9GxEAziUny/AdacciMFg
      UMuDxfzL3Nsg2viuwPg1vVTl8cgSo4QKsbNrr+Mu4JONeBc9x0B69EUf5ev/Bji4vljvJSAd
      gFxcu1L43EBzlKkLNF3fdNiiazm8/npCf7W6gPdCqnKFwtX0TDNL7Z+qqqp5Wn2nS9bVGxGQ
      jZuSOKI1V7O0etojKgoo9+N/Kli0HQAVWRSwPulhKoqi5gcwezyYd3d34aH0hpecuRiJ4cUO
      gB8cG58z2+k9zzkA0fOAaFG8KKC/sRE44ZRKUi+fpHwvnqhMDAfxcrTvxlhVT1WY5/N58oKr
      d9zsqf8Z1hootTb5boNo7XEa6Xt87qy/x39HcaymMRDpS1cZnHKIMr59LodCD4FfS0Rsxq3j
      jcYJNPVnOwdKj1x+IfzgcgNTyCnVXpGGMoIEuTACrvd/67NA6v1+nyJONemDjUGOvL29rYVc
      eITlwOhvi8WiUemiVpAH1XFAUIrttlkz9BBz4JivJn2wtmoS9fNCX9Ex4rwiDD1af/ZJ3+fF
      LAUOhrf75wio/p7TdZj7peoBASkhJofY0SRzE2kafPR77p1qRWh6Lv8PBgObzWZWVVVi1Zjt
      qAfKxmtW0nw+D6lP7j0RB+oCJIjwbqiucp3cc3k34QxwLo2bQVlUES/ar9lslpxWiHsaVkFI
      twfWtasfAU7kw8Ob9jGygikeYGDRwmOXgJL67r7RgpfR2hQVvafJMsBCqxycUwb9AcqZzSiV
      h7KuuahaWbmqHj3IWGm4p23MOs4ubDoHmrpHeIjOqe2ZuSpu9DeLMtZ4roZMgEh+7rReiu4n
      jVEtgW2A195HiPpnM7co+cWvEcWGL5XUU5ZlmahAVP/Sf45OanQN4J1r/GOylNlQuTlihWb5
      OKHFYmFFURy1I43mMZ/PazH7uqFNB0LnhvihzqEuoPpVBErxGJP3q0TAnmiAIAdCxSXeqznY
      yOp6fzRus6cAw8lk0inupiiK5KzEZO2JIXtDzwcVI3U/WA+tTncJKAld9qxF2b1nW7lNzB2Y
      iHISH6K2XGz6kdVFuYH/DWpudhzPFI1R26D6g9JGgd+8eZPuOzUCUdfCi1deZkdM6lK5QWsr
      FUVRK0teFI9d4RUQT6rqqZQ5IpV/z3K5tOVymezwtC/tegDazMJ8v1wuU+j2arWqWeR0Txj3
      xUQgKCjNm/0Emiw8OpAmGT0nOuh30+m0VtzVT7JJtj11MaIx8H00H0AREZm0K3gxrwsF0/KU
      TZD7XZ1FOcpeFEUtYd2DlmEcDoe1PmqngNYtjcYChyCrC27A9dyruR+XgF5RPAYpRbmXbJqn
      pt7K4JGVhdV/3uNr9mhVub29TTKiNqrLtdqJ3q2AuBBRKL8BuYykHLJ4pbMJibtwyNy1Kiae
      csgAuPrNzU0Wudu4HYCBgXziJp9FDoriya/iQZ+33W5TE3W4ge4HhoxLlJcESgahg/VIHVHv
      JsrvoQkZ8BZr5xTk7Ej00vf7MZCnrOUIUZqaxnUOB8nlNeMc8sr4Ke9B9m2T/XPgTZaMjeQd
      jAIaS980lqbylV1hOBza9fX1UaNz/24NhVZKT0bbpRAfSGQSLdxT6YjC873/nKNkTaITn315
      kzdv3iTTXhRm6w8H+oQ+F9c5xXhzekUXwKX/5s0bq6q4fRDiBGHa/rfoQHuAemtxsEvBw8ND
      bS0vHSCIjyJnncEPQZgzh9IDyT/X19e1Xgs+R+AS0DN7XAyKmHoRA9C/faxHmyMn9xxFZv/O
      9Xpto9HIrq+vEyIrFdJ3Eg+jh5Z4l81mE3Y1UfGsC0CVOZS5JtQqGvl+Y5FRwAPEIVdx+VzQ
      TDFNGsoRLR0fkbeEVEeio78/B1BxMthyh2W/f+wYyT5jDPAc5LmQOADlRyJFhc1XnYDvI2uK
      Qg7R/PPN6vEqINJ4PLabm5tELTzi4bXlGYg9ivRtSJ4T9yLQAk4REPdCCG+v1wub1vnnMw9l
      +5ekdJpMpAXJouvW63WtYzvcz+ypsfZoNKrpBOiJHDRCrv0cyrKsGVzIIY7EIhRjAvZoskLx
      hUtAeoqvxOBPsdcT9O+cqOOvbfus72TyqghpX18WnZgUM0vZRpp4PZ1OG2vne+T31ppoLdqA
      1EAIhxIBH83Ks5nLSwH5tEVRZPMjsAjiTccgoUSHOdCXQA0c2s3ncDjYdDptjbAtiiJ5qPEF
      6XrTYxki9yKhEFVVpYAtuEBTriVIovbdNirfBtG1h8PB7u/vU9M5Nk8pD1SKDDB93gcffJA2
      lQPkg+AUMX0Ixrljj0RIf21kvWIfXgJoZdo0NxyJbWvgCUYkAhP+MZ1OsxYgnoXhQD3H5C1E
      4vMlOWMtI4y6m6TARW5xHYwuVNvG5ThE0/U4mrz73SdC+M6OVfUU515VVa0HVrSoTZYlvS6C
      Jq4XPYN56d+IE5e2cLSNswl0jZ+TR4z3t2tSPvoBJV404YlI3udmgSnUqkPzP86G1WrVWmW3
      6TePXKdAr/dYY6ZN1sOM6kUcdeCgv0TKMM/wtU27ikBt4lEXKxgJIl82kBTkw2LojHlODi7i
      UlVVjZzAAxxek2z4/5IFvo56hAHUZLy/v0/iUJuC7CMr/d9c38WX0KXEHRQiKsVBb9kokaMN
      um5StB6RQq3P5TeNhbokRXsOIGL6cfuSj22+H/878T3nHnJKbWrJl0tBWBbF7CkCcDgcpuK0
      uQ3PybzId8iJEfv3C8gGNCmEWIg0zdE/J6pRE4G3W3dR5HPP0XVos7Pz20s4d54DuTETX6SW
      uibwuPTcOWK50pznS8DRAVDZnr+V9aglQy0YgCKCfuffw/+qhHbxfCJXtukUOXEmN5YcFe8K
      51CltgZz7wt4/wX7pcTMI7nXp7DwkDaqlrFTxKJLOwcbOYC+GOWRmj7I3pPJJMvCFQnN6o3N
      onfiaIomyXM0bDoKfY7u0QPdBF2u8dcD6Cq+3k0TvLTieynwJUxyBgKP9H7tiSzlAODzOMX8
      e+n1yvYIU8Qdj8d2f3+fFBkSO1CYPCjC81wfDOcPB7BYLJLyzTOIYVEZECrUJmrkNi2Cpmty
      ogrx+tPpNJkRzz1E7yOQ0YUfQU3gQG4/vRHEl9XB4XYKXNoU2lgcl7/Lskxx8Ao5GTxii15G
      jq7TxdVAMo/kiGNNFiJVypugi8zf7/ft1atXqbOhwnA4TJayU1ugvu/Ib/YUAu7znXW/1MTM
      Xumektvg9wtro9njfm2320RQcnDpA5AwJGe5UaRUxEVm13rwmKqgGF7JVXkfSplTqrzcqZQ1
      aqN5LvBsnZenXIhs3v+AIq4cz+tHZhZyBY3Vf5+BddbiBbn94n/dX7P8fvkKFnD/Jlgul41F
      dk+F2gHwSJ5TBlV5mc1mSSn1ZTl0cl580VRJfWZtcL/x9OaUJnW965j13V3Aj8MDiBrFwqtt
      m9+ifOfce78q4EvNXGK/vKWOhnlN8D//8z+th+QUKMm8UWTF8uMVVgXdWLx1vrt3pAT7pnge
      QdTJEVHOiDupEs1nEic8qD8jCouI5ocHknLuOj9t5AZl0ueotUThlE6G7wOQkJ9T8nPiszes
      eLFY/26L88GvMxqNauUWnwOlxtOo0spG5/IDFPmIuVGRJloASuSpIqTIVJalffHFF/Yf//Ef
      Nh6P7fvf//6R7uAtDQrKoslx9lAUhX3yySf2ox/96Og3T8H9s70zB7mVv8mpUOtOTmx4X8Uf
      Kk17JG8zNiiokULv8YRAw6rbuOHhcEi5y71eL6wcfQ6UTMyLMGxaFCCWq5ygB8ZbCfQ3v5BV
      9ZgB9umnn9rf/d3f2Q9+8AObz+f2jW98wz744APTMcIVOEgqWvEOxkvgnCqny+XSPvvsM/v9
      3//9sBWPji+ydGiRV/8blInneG4XUcj3BTjMOY6/XC6z+dr+OYDiELjVJhbmgJLqqhNGlUxO
      hdLsuJJCRGG1jF1OEcqF2PJ/dI9yh7/927+1P/7jP7ZXr16Z2aO4slwu7ZNPPrH//u//tpub
      G/vxj39sg8HA/u3f/s2Gw6F99tlnZmb205/+1Eajkf3yl7+0Tz/91Hq9nv34xz+2jz76yMqy
      tH/+53+2f/qnf0phu4g0f//3f2/39/f27W9/237v936vUaFu2nQOH5wzoqAKl0zquBRoD2YP
      uV4ATfqTPyzeoHJKTI96zm9vbxNhe254dHq7p7Be1vZKMhP0Cq//zSfPeAWJ325vb208Hts3
      vvGNZHIj8+rm5sb+4A/+wHa7nf3sZz8zM7Of//zn9sknn9hHH31kt7e39umnnybZ/yc/+Yn9
      4Ac/sD//8z+3X//61/bpp5/a3/zN39jHH39s3/72t9PibzYb+/DDD+0P//AP7V/+5V/s5z//
      ec2S48eZAz9Paog2UafnWK5eCnJz9Y6wpvWIdAFv7VE9Df9SG5CTQHsoM0u5C8+BlBIZiTj6
      W2Th6Sq/NVkO9BovI1ZVZa9fv7abmxv77LPPbLVa2d3dXRrfT37yE/vud79r3/3ud5N8+L3v
      fc/+67/+y/7zP//TqHr37//+7/a7v/u79r3vfc++853vJKfOt771LSuKwv71X/81xa+3ba7O
      J/cbbL8perJrTM2XCRDEpkaAp84hshz5YsL++ZrIv1wu7fb2Nv3WVp2jDWpmUH9ao1MbcYYc
      RGbVHFJQaY0iVzhJPvnkE/vZz35mH374oX388cdHHEjLe9/d3dmf/Mmf2PX1tf3O7/yOTafT
      mvKqJrfD4WB/8Rd/Yb/4xS/s+9//vn3nO9+p6UE6LihOkzjXdR0ALBr0F/6yD4MnTuxVWw7u
      qTK9XwvCX3wFDa6lf5zeQ+IWfoPnmEV7uUnkqLangl40ahOVcnB9fW0ffvih/dVf/ZW9ffvW
      fvnLX9rd3V1qDfrmzRv79a9/XR+88xqi7H7nO9+xzWaTuih+4xvfsE8//dQWi4X98pe/TM67
      +XxuH374oV1dXdWerWPXHmM6RxWTIgTvUixgPp/bw8NDWJPpfQBV+hX8Wuj30TUR8JsW61Wn
      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
    </thumbnail>
    <thumbnail height='192' name='Map part 2' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Packed Bubble' width='192'>
      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
      rZ6TC9kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Packed Bubbles' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOydd3hc1bX2f6fMmT6jUe/FlmVb7jYGg+kldAi9XQj3BkL4QnpCCiRAICSh
      3CTUJCShQ0IzvcZ0cO+9qdjqbaTpM6d9f4wtS1YfDbkQ/D4PD56jc9beI+119l7tXYJpmiYH
      cRBfUoj/1xM4iIP4v8RBBTiILzUOKsBBfKlxUAEO4kuNgwpwEF9qHFSAg/hS46ACHMSXGgcV
      4CC+1DioAAfxpcZBBTiILzUOKsBBfKkh/19P4LOGoarowSCmpiFarUhuN4J4UO8PIon/SAXQ
      IxF6PvqQ7o8+JLpjO3o4AoaOYLEg+3y4Zs7Cd8KJOGfMPKgMX3II/0nZoKZh0P3euzQ//DfU
      trbhbxYEXDNnUfSt67CWlSMIwr9nkgfxucJ/jAIYiQRND95P5+uvwRi+kmh3UPLDH+E96uiD
      SvAlxH+EApi6zp7f343/7bdSel6QZcp+fiOehUf+25TASKgEN2zCv2Q54R01qF1dYIIlMwNH
      5QR8C+bjmTUd0Wr9t8zny4r/CAVof3ERTQ/cNy4ZotNJ1b0PYC0uTtOsBoepabS/tZg9Dz9J
      tLZ+2HttpcUUf+0Sck8/GdFi+Uzn9WXFF14BEu3tbL/mKvRQaNyyPAsOp/yWWz+zXSDR2cWO
      m3+L/9NlY3rOO38uVbf8DGte7mcyry8zvvAK0Pzw32l7+sn0CBMEqh74E/aJlemR1wfx1jY2
      futHI771h4KtpIhp996JvaRo2PtMwyBaV0/PsuWEd+xE7epCEAQs2dk4J1eRseBQrEVFB+2d
      vfhCK4CpaWy9+n9INDamTWbORRdT+PWrBxnMxNQSmCE/ZjgAoojgzkRweBCk4b3JeiTKhmu+
      S2jztnHNzVE5gZkP3YPscQ8yPZPQho00/PXvBNasA8MYVIYgy3gXHErJ1V/HUTlxXPP5T8AX
      Og6QaG8n0dycVpnh9esxTbP3DWkaBnr9JhIr3kCvWY8Z8u+/WRARM/ORpyxAOfRUhMyCAW9W
      0zTZ/dAj4178AJGdNdTd/xATf/r9fuMYmkbj3x6h+amnMTV9WBmmptH98af0LF9J6bXfIO/8
      c7/UsZAvtgI0Nw35pktZZkszpqYhWCwYPR3EXn0QbcsyYJCN0jQwOptIfPICieWvoSw8B+sx
      FyFYlN5b4o3NNP/zhbTNr/Wl1ym44ByclRXJKWgadXf9nvZXXhuTHDORoP6P96H29FB81f98
      aY9EX2jVNyKR9MuMxcA00ZtrCP/lR2hbljLo4j8QapzE+/8g8uStmLFw7+WWRa9gxBNpm5+p
      qrQ8/1Ly36ZJ89P/HPPi74umRx6n8613+AKfhMeFL/QOINhs6ZepWDF72ok8fjNmoHPMz+s7
      VxN95g7sl/0CTIHODz5J+xy7PlpCxfe/RayxkcaHHxu3vLo/3ov30PlYMn2D/jyhJdjUup2N
      LVtpCjQTTkSQRZksp4/KrArmFM0gx5n1hdxFvtAKYM3PB0EYU+R3JCg5OcReuT+lxb8P2vaV
      JD59EaH6eKL1e9I2t32It7SSaGun+YmnMOLxccvTA0Fann2O4m9c1W8RJ3SVd7Z/wGtb3qEz
      4h/02Q9rliKtfIZ5xbO4aNZZFHkH2kGfZ3yhj0CWvDwsOTlplWm1RNBr1o1bTvyDZ4jt3N5r
      owhZpWQfUY1r+hQQBASLBUQB9hmggoB9ylRklwfnpJKkHSEAkoRSWIrstCaVHcA0CW3bjv+j
      9O0uHW+8Dfp+A7ol2MbNb9/JY6ueGXLx74Nu6izfs5qfvXE7b2577wt1nPpC7wCiRcF7xJF0
      vJg+I9PpjKZHUCxMbOnr+z/LFrC5sCkgHXks3pmTiGxeTbxHQVBUjJadhHbUkPfVE+n8aC2+
      BTMxYgksRWVEaxpxzJpA10dL0ELJN35g9Vr0cHiIwceORHs70frdOCZOoKG7idsW/wF/tHts
      MvQEj6z8B93RHi6e/dUvxE7whd4BALLPPhshTfkyjsoKFHn8R4p9EFr7uD5Nk8jmzdgqKzGi
      YXqWr6B7SzuO7AT20hLC9X7Q48R2N2AktOQOYBpEd+0g4e8m3h5Aduz/nomW1rTNcx+itXUE
      42HueP/+MS/+vnhp0xss3vlRGmf22eELvQMAWIuKyT3/QlqffHxccgSLhfxzTsf84K9pmhnI
      ZhhBEjF1A7OthggQ+etT/e5pbakHVvZ+7lmRPH51vtt/gSf6mhKiiORypG2e+6AFAjyz+lla
      Q+3jkmMCj696jhn5U8lzp/eImm58cXYA08Q0DBJ76gkv+5jgu28R+uR9Yju2knPBBbjnHzou
      8UXXfgtbflaaJpuEpEjY0ywTwFaYj62wIO1yG8PtfFizNC2yYlqMFza+PvKN/8f4QuwAek83
      Pa8vIvThYnT/QO+MYLfjnDEXtbiIWMMY0yJEkcJvXkvm6Wegbfw4TTPeNzGRzGMWEnnqxbSK
      zTr2SGzFw+cEpYKPQzsw3OkLLC6tX8llc87DY3OlTWa68flWANMk9PF7dD7yIEZ46GxPMxol
      svwTFEFEzPYQ7YliquqI4pWiYkq+9wOcM2ciCAKCe3A/eMqQFQouvZimRW9iRGNpESlaFfLP
      OxtT15IepDRFwgVZYrs7ffYPQEyLs7l1GwvK5qVVbjrxuVUA0zTpfu5Jul94avR+ftNANmNk
      zpqMVDmDwLKlxOrq+j0vWK04p08n84STyDj2OAR5/69AyisDyQL6yMozGkj55Sj5+RRffjG7
      //JIWmQWXHgOtpIiMAwcEyqI7NyVFrnCjCl0CrFRBb3Hgpqu+oMKkAqC/3p9bIu/D9Sa7VhL
      Sql68C8Y0SiJtlbMRALJ5cKSm4cgy4O66ASbC6l8Gvquten4CshTFiAIAsX/fRndK9cQWD2+
      +IJr2lRKr/nv5NwlifwLz6fm9t+lZa62s7+C0Zp6SsVQ6Iqk7k36d+BzaQSrzY10PfHXcUV4
      Qx8uJrz8EySnE3vFBByTp2AtKka0WIb2TwsCyoIzUx6zH2wuLLOPA0BUFKbe8StcU6tSFueo
      nMDUu29Dstt7r2V95URcM6aPe6q+Y47CPXfOuOUMBsNMb7JiuvG5VAD/C09hxsd5ZjZNup95
      DFMb23FGnnIoUuX4F4P12IsQXRm9ny2+DKY/+HuyTz5hzLIyjz6Cyp98h8jmjXS8+gqdb71J
      cM0ajGiUiTf8FEtWZsrztBUXU3H9D3HanJ9J4Mpt/fwawPA5PALpgR4iy9IT4lebGohuXo9j
      5sAzqB4KEd2ykXjdLvRAD4IgImdlYZ1Yhe30a4k88nPMno6UxpWnHIpy+FkDr7tdTL7tRnJP
      PYk9f32M4MbNw8qx5mVj87kwGndS85MfD9gRBUXBNWsWBRedT8uzi0i0j81/bysvY8pdv8OS
      kUGWaeC0OAgl0hddBijJKEyrvHTjc6cAsc3rMRPp80ZE167qpwBqWytdzz9N8JP3MaODpz1I
      vkzcs6ajRGMIibHVGstVh2A//8dDVokJokjmUYfjO+IwIjW1+JeuILJjF4kufy8rhHNiBXpn
      Gz3vv4ve2jDkWGYiQXDFCoIrV+KonIS1II/ghk0jHx0lkZzTTqX0umuRXck3tCiITM+fwtLd
      q8b0fYcdRhCZljc5bfI+C3zuFCCxuy7N8mqBpFcp+P47tP/9wRHrCHR/F93vf4jkspNRkYms
      +RnJPWJKFhIZU/F35xL60S9ItLVj6jqy14NjQjne+fPwLVzQu+AEScQ5aSLOSf3LEk1dp/HB
      B/G/OQZ+I9MkumM7Sn4+E39+PT1r1hFYuYpEW58dQRCwFuTjXXAYeV89C/uEigFHnmMmHpFW
      BZicU0m++/NdyP+5UwA92JNWeUawB9M08S96hs6nHh6TYa2HonRtN8i94HwseifarnWYwT6B
      OFFEzCwk2C3SsrqZaOuSgfL3QGjjZtpefh05w0vBRedReOmF/YzZvmh57DE6XlyUylcl0dJC
      29NPMukPf0Ry/wCtpwe1yw+CgCUrE9njRbQM/SefXTiNyuwKdnbUpjR+X4iCwDkzTkMQBAxT
      J5IIoukJJFHGoXiQxM/H0vvcFcV3PvIggTdfTps8ZcIkPKedS8sffpuyV0l0OCm+7W6UwiLM
      SE9vUbypOKn/06O0vvz6mAJSjsqJVN1+E47ysn7Xg2vWsOsnPwFj+LrekeBduJDym25Oqda3
      tqueX751Jwl9fFVsR084jJMr57C1eSlN/u3EtAiGqSMiYpGt5HkqmJx/KJPy5qPI6S9sGi0+
      dwrQ/cpz+J/8W9rkWSdNJdbQgB4Y385imzKN4lvu6A2c6bE422+8Bf+HqRnsFp+P6vvvxrmX
      mcE0DLZ/6/8R3bFjXPMEQBCY+Nvf4Z43eADKNE2MrnYSuzajNe/GCIcQJBkxMxtLeRVL9U7+
      vOpp9BRdmFl2hbk5LoKxkTNW3bYsjqq6kKq8+f8n6dOj3odMXSfR0kK8sRGtpwdBkpCzsrAV
      FyNnZqZt8rbK9BpNsfq6tOTNx7ZuIrx6Ba5DD8c0TerveSDlxQ+g+v1s/dHPmfnIX7BkeAmt
      X5+exQ9gmrS/uGiAApimSWLbekJvPkti+wYYwkU8JSOLK4sz+acnQkge29/VZzWpcEYIxkb3
      Ow/GOnl9/Z9oKt3B0VUXI4nSmMYbL0ZUgER7Ox2vvEL3e+8Rb2npVzUEydQC+8SJZJ16Kr7j
      jx/ybDtaWCdNQcrKRu9MzQV5IIxYenJwAAKL38Q5fwE9y1bQ8sL4j2nxphbq7nmAyl/8lJ5P
      0ls7HFq7Fi0YRHYnOYSMaJjAP/9CdOniEY9rRncnM7o7KbXKLJqcw7oMGXMEJ4DX5mGSz4mk
      7Wbs70KTtbv/hWkaHDflv/6tO4F088033zzolDSNtmefpf7WWwmuWoUeDA5+htZ11PZ2AkuW
      0P3hh1iLilAKC1P+EoIoYRoGsQ1rUnq+L6TcfLSewLjl7IMeDOD9ymnsvO0OEq0j0K+PEpGd
      NWSfcAydr76M2pEepYfk389z+OEoubnowW7899xEfMPyMdlBNt1gVnuE2ZMW4JhQTUxPoBs6
      JiayKOOxuZmSW8mZU0/mtMmHUdf6LiapR35bA7V4HTnkuEtTljFWDLoD6OEw9b/5DT2ffjom
      YfGGBmpuvJH8r32NvEsuSZlwyfOVMwh9uBh1T11Kz0PScHUefizx554CQURyORGsNrSOA4JF
      FgXUgQaf5PEOsBuMYICeJUsJbd6a8rwGwDBoffHVAQplKa+CjgZMxY4e7Eawu3GUFxFvbkUL
      RZGsEno4huRxo/m7sWRnoXW0Yxr7F7ja1oaZiNP959+g1qZGzCUYBvmL/8WlV1+P9YxLiKox
      VF1FFERsFhsWUcYwDZ5Z8Rs0Y/xJhB9tf4YJObOxWZzjljUaDNgBjHic2ptuIrBsbASu+wUY
      hNauRZBlnDNmpLQTCLKMbco0wks/Si0oJslkX/M9TMMksnYliBYc8xYgaCHEjAKU/CykzEKs
      5SXIpVNRLAaC04Po9iB6slAKcpDcXkSnC8ntQXC6MSIBMCHqjxKpTS/Tg9YTQNRjmIn9iihn
      5yE7XFh9TuSicqzZLgRRRnK7EV2ZeI84DGQLktWO7HHhmDUP2aaTaO3qleE9/HD0LcuTx57x
      wDSJb1uP49BjsboysFlsWGUrkighCAJ7Ojezoi49iXSqHsehuCnMSD8/62Do/4o2TZr+9jeC
      K1cOcfsoYZo0P/rosEpkmiZqdzftr73Jrlt/y8ar/x/rLvkaG668mm0//QUdHy7Fe/HXkTLH
      VlElWG1kf+O7OI84BkHuQykuCCDK2CZV7a0h1tACEQx/O/H63Ui+LOScXCzZXmK7diFllyA5
      JLC5ULJ87NvZI4OR24pSMsPUIiMoFkSrMvAe2YIwxIYY29PQj00OwNRUTE0l3lCPHokh2twI
      soihqsguJ6q/BzMeJN7QiOj2YfjbMM0DXjZqjPA7qcUUDoQZChB87elBGR+2tqT4shwC21qW
      Yf6bkuj6HYHCW7fSvig9vzB0nYb77sM1a9YAw1gLBGh89EnaXn4VPTTQWxDetgP/Bx8hyBKu
      qok48xyYHU0DDPB+EASsVdVkfe0arBMmAWDJ2RuFNDVi61cgWO1o4fVIioHWFcAEzLiOUlqC
      5u9BcsokmjuwlpUR27AseTyyeRH3pUNIMnpcGzC0nF2C1SchyhYEq0y8tRPB6kCSdWJtIRzF
      WURaehD1MPayMoLrN3Lg31ewO4D9QTa1bge9B4qeDQxnyofXDvLCkiT02k2YifQ5AWLL38d9
      1uVI3v2FQ4Zp0NSdJu/VXrQH9xDXov+WY1A/BWh54onhF9kYkWhqouvtt8k5+2xgL4Pxps3s
      vOk24k0jk9qamk5w83bCViv5p5+EM99LbNM6tI62JH+nJCF5vFinTMd1xDHYqmciSPvdaNaJ
      k0CWQdOSRnwwCMCBSzhem7y+b8HFA/uPEaIrRiyU/LlSWITYOnKAyFqUByaYqo6zKodIQzee
      WVNQm2oQHQ5ERUSP9dcA16xZ+BvTd7RScnMx2+rSJg/AjMeIb16F4/ATe68ltCiRRPocDQCG
      qROIdvx7FSDR3k5wxYq0D9D5+utkn3UWAkkum+3X34A+Rk5PIx6nadFrFP335RTffg+mmsBM
      JJLHDpt9SDtD8mZgr55BdH3qHiVj7+IHcB62kNDHa2FX/1QBIxZGC4iIkgQWKRklVjVAwJTt
      uMp9RHbuRtAiSF4RURLRD/CW5Jx5Jj3vLsaIpYeXKOOIBejr3kyLrL5Qd22BPgqgGxq6MXBX
      HC8Sevp2ruHQqwDB1asxtfR/kVhtLWp7O0ZCZccNN4958ffCNGl8+HFshYXknH4KWEcOnwuC
      gO/M88alAPsg2h14TzqVYFOAnhWr+/3MCLQTH+YlGK/Z/+9Y40BXp+zLwD6hguyzzqLtmX+O
      e66yLxPfwgV0rxmalcFSPhm1sQ5BMDF1I1lfrOtJ1jqrFTMyeCBL62jp91kSJSRBQic9ZaS9
      85P+PekRvWZZdOfOz2QAU9OI1tRSe9cf0HrGmei2NwIbH4MP3jF7Hs7DFo5vXMB33sVYsnLw
      Hpb++lbvIXNBFMm77DKspWUjPzAcRJGia785QkBSQFBsKFPnoVTPQamsxjrvRJTJ1ch5ZTiO
      PwfJNYghD/08VQCKbMeueMY35wNnJ4h47OmnkxkMvQqQziDMgeh85x16lqXneKUFAjQ/Nfq3
      pCCK5F7zHSxFJSmP6TzsCHxnnguCgHfeHKz5eSnLGgy5p5+CIAhITicVN92EnJlihZcgkHfJ
      pWQcdzyCbTgFMDENHRAQBDDiGkbLTqSsXASnF621DUEZ/FgpHiBXFCQKM9LbaSbbVYxVTj/x
      12DoVQAzjcZvX5gmdL77YVpldry9GG2Y/B5T19GDPST21JCo2YoZDVH441+glE8Y81iuw48i
      /zvX97pUJbudwssuSnnuA+RPryZjwfzez7ayMirvugtbefmY5AgWC4VXXU3+176WVKbMnCQf
      6RBQd24ksf4TYmuWodVtRq3bTvTjxag7VhNf8TZa1+DxFyl3YIVXVf5hY5rrSKjKm484lM84
      zei1AfbljKQfJnosfQ0iALTubsKbt+Cdf8j+UUwTrbWRyIdvElu/HK21sV/Oi2C1YcsrhiwP
      CX8QjOFTAkS3h6yLLsf7ldP7eZYA8s45k45/vUdw3YZxfQ9BUZj4kx9gxqLEa7ajNtajh4II
      gkDB2afg/2QpgfWbMRLD/P4EAef06RRe/Q2c1dX7L9udWIorUOu2j2uOB0KpGliEX5Y1jVx3
      GW3B1BoA9oVNdjK9+JhxyxktehXAWvrZ5F+MmHoiiIhWC0YsnqQLN8xRET6Ft+3oVQAjGiaw
      6DHCH7wxZIajGY+h7d6JDEgZFsgowMBCoqkh6VJFQLAqWCsqcR22EPdRxyG5Bz/biorCpF/d
      yKZrv0u8qWXQe0aEKFByydlE//U8XWuWDUoCIALeHBnNtGNmFKBF4+jBIILFgpKXh2PqVLwL
      F+Komjwg7UQQRWyHHJVWBRBdHqxTBhIGSKLM0ZMv5oVVd2OY43OkLJx0Hg7ls3oZD0SvArhm
      zfpsRhAEhisn9By2ACMahYQfS+FEIpvWgqygRXSsHguRusGpDhMdyaCR1t5M532/QmuoG/2U
      DA269uA54Sw8t96VHF8UkVzuAW/7oWAryKf63v9l2/U3EtlVM/IDfSDKElkTfBjL3yAygqIL
      hoYFDSHcSM7ZF+M57fx+ZF7DwXHESYTffBYjlB4/vePoUxHsDgxVRevsRPMn4yWyL5OirIks
      nHQuH21/JmX51YULmfFvfPtDHwVwVFVhLSkhvie9eS628grUrcOwl+lxQuvW4Jl/CHqoG0t+
      AaIsYxUV9LiKZGtFjw3yVjFNtK52Ou6+Ab09tU6R4cUvY2oqGZd/e9icJdM00QM9BFevJrpj
      G2p7O6amIbnd5J18NP7lbnrWbhrZjSyAo7QIry2ERISxJE6aiTg9zz5KYtc2sq69foAxOhhE
      lwfXV68g8MR9ox9oCEhZeVBYRcMdvyW0ZhVad3/CKzkjg9w5c5lTPZm11u0jpk8fiOrCIzlx
      6hVgmJjoyTa0/4a06H4VYR2vvcaeu+9On3BFoexnP2fbT3855D32KdNQvG5idVsQ7Mkjh6go
      oLhQ3BZ6lq3ql+G4D8X/cwVW/zYS29aPe54ZV3w7+XYbpMVpormJticfp/vDDwa4APtCsDsx
      rS4M0Up09+6kU8EERAElMxPv/HlkHXMEsbf+gdY4vrOyfc5hZH/7hmSXmRFgGgbdD99NbNl7
      KY9nmhDRvUSbRke70lOVydYTMgjaR44NWLEytamIghqZ8PZdqN2BJEFZdibu6slkH38UGYfM
      HvXOPFb0UwBT09j+ne8Q2ZqedN+8yy4j75JLWHXGecljRhpRdNpCxLrVI984Cgh2J3m/fqhf
      jotpmnS++jItf/3LmIpqnLPnUPTt74GQ7Asge1zIXi+YJh33/5bo8vQ0jvCccxnecy4b1VvS
      VBN0//1uYqvGPrZhmAQ7NNTY2N7oQoaH+DfPpN7dRVP3DlQ9wb6jsCjI5LnL8K7qxrloG2b7
      8Ec0Z9VEJvzgWnwLDkn7rjCgJjjW0MD2665DD4zv3OiaOZOJd9yBYLGw9fvXpy0OACAqFgqn
      eRHi6SNxcp12EZ5zky5E0zRpfujPdDz/bEqyLHn5TLj9d1iLi3uvRVYvpeP3t6RruggWhfxb
      78VSNDrnhWkYhN95gdArT446xdxQXPTU+9HV1MrGJY+HCXf+L0pJCcF4FwkthiwqOAUnO395
      J+3vvD96YaJAyZWXUnHd19O6GwyoB5A9HlwzZ9L98ceYKXYgdEydyoTbbkNyJun2BFmm670P
      0jFfAFxFmdil9DKY6R2tuE48G0EU6Xj+WdqeSL39qBEOEVy1kozjTkC0WjENg66/3D1ob4PU
      B9Ex43Ec8w4f9MemaRKItlLXtpydLR9T07qEFm+ccHU5CT2KNZxATAxiswgClspqXGdcRuea
      HahdqZPbmvE4kU0byTz5FOw2D06rFytWNn/vF3R+MLZiK0wIrNmAFgzhOyJ9BfSDuhOc1dVU
      3Xsv9b/+NZHtY3CjCQKZJ59M8XXXITn2R/IyjzkaR+XEtFB5C4pC5twpGNvTR+AEoPs70Foa
      0KIJWh4ePytForGBpgfvp/T6n6I21JPYlVpF1nCIrPqUjNDVSK79bkPTNGnoXMf6+ldoDwzx
      +64GcZqPYjWP6cpsnKYjyQrhy0Epq0R0e2l//lni9eP368dqa+h85WVyzrsA0zSpvfch/EtS
      Pw00PvU8rimTyD/71HHPDYYhx7WVlFB1330Uf+97KIUj8DsKAq5Zs6i8805Kf/zjfosfQLTI
      VPzkh6My2kZC0RWXYbEORm1uB9GCYEu9YZ7aWEfzXx9KW1Jg9/vvEtm6ldiG9CrrPpiRcD/F
      iqsh3t/0AIs3/GHoxb8XhqmzW27iLd6hfqKC/ciTsU2fh+j2YqgqnWnsvNn54iJMTSW8fReN
      Tz43bnk1f/gTqj89tOtDFsVDMpjinDyZnLPPxj1/Ptb8fCxZWRiqhhYKY2gGgkXBXjUZx/Tp
      SC4XSmYm4iAd3JWcbJS8HPwfD8KeNkpknXg8Zd/9FuHFr2B09z9OWEorkfNKMMMhLBOnYMai
      WCqnIwgGUuFEBDOBXFyFKBlI+RMQRH0AN6hpddH5bvqOapgmhppAjPWMq755OFiKy7FNnkYk
      3s3ba++kpXvLGKdo0Ni1gbgaoigzWcIa3rSRzpfSVBgFGJEwztlz2fPEC4S3jz/p0ojGkL0e
      vHNmjlvWqCIqgiThnDYNQ9XoXr2WyO6G3kitHk8Q2riJ0MZNAIhWK75jj6Hwisuxlew3AgVB
      IOe0UxAtCjW/vWvMXqG8c8+m7LvXIcry/ubSfedo9yLZRHSbC0GxYymtQPc3IrizECQZweFF
      dNoQvRPQgglEm50Ds5+CK1aktes8QHD5MpQZY89BGi2M7i5UPc67G+/BH049hrO1cTE2i5tZ
      5WcT2bwpjTNMIrhqJZ3vp4/6pe3Ndym5MnXihX0YlQLo0Sh77r2f9tffGJlTJh6n86238X/w
      IUVXX0Xeeef0TlIQBLJOOh5nVSX19zxA95KRa0ltJcWUfusafEcdiSAmjz5SRuaA7HO9uQY1
      piLn5oEaQ+9qwwiFEBImYmYe6BqmpiWZHkT73mzI/oi3pdFI3TevUIj47t18ViEd09BZW7uI
      jsDYotGDYV3dyxT4qlGb+wQWbRl4ZpYRWFuD97BqQuu2jNpDKLk96MHkvV3vf5R6LcggiNTu
      Ru3yo2SPL216RAXQQiF2/uwGguvGFnAyYjH23Hsf8cZGSr9zXT8lsJeXMfmu3xDZsZOOtxcT
      WLOWeFMLejSKaLEgOezYCvPxHXMU2SedgJyV1c/qt5ROJLa6vxdB70oGadS6A/HM2qkAACAA
      SURBVM6GoRB6516KvpahqcYBTIsdSAa7LEUV2Aqzie3chuDORG1sxjFtAvHGLtDCGAkT0aYg
      eTJQW/YgODNxTioltGknskMisU+ZTBNdNz4zFuKQEGZrY3paOpkYrNz1DNP7hj1kK5LXg628
      GFQDa3kZkjcfo6MWqaAKbfdmxOxiRNnECAWI+zWUbBuSEUfXFcLrk3MbqrG3fWIlmQvm0P7G
      W8g+H7GWdsyEhmiVsRXmEdm1B/uEEqI1dZj6/t3ZTCSIt3V8tgpgaho1t/56zIu/L9peWITF
      56Pwa5f3u560L6pwTq5K0pds3UzXm28SXLUSzd+FWtdDW9022p94GEtWFq658/CdcBLO6dOx
      TZtH8KUn0npckYvKocbf+9mS7SO0agVy6WQENYBj+nSQBGwVVsCCoDiJbtmAtaQMW2kReqAb
      PRrHMXUSuiogdXeyj19WdLohkN5A4D7UCrXoaeDj2Yf2wE78hpu+nvZEUwf2Yh+JrgiCKBJv
      2I1zYgmR+nrsxSVocRPTBEFxYKvwYQSaiGzajLV67n4hQ/RLiO7aSSjbizJxCo7cLGTbdhzV
      k+n6ZD32qmnYinIRLTbU5gbUUP/vqaeh8+awCtD24kv0LBl/4+SmRx/Dc8g8XNOqB/ws0dpK
      058fpOfTTwY9XpmGQaKlha7XX6PrjddxzZ5D4TXfxFI2Ka2Zjs6jTqan9VXUvV1W4k2tuObN
      J9HpRykuRWtrA8WClJENagi1qRNDE0GLoqsJBLsH0YihxQxkh0zf9CXHnEOJffBq2ua6D6Yk
      0eZLb6o5QKuri16/X6iN8OY2wlvF/S8cUUJt2AWIJGp1TMRkaaWRbLdqqioYoK3fvzMphUXQ
      OPjRSQ9HUUMJVIuOGjWI1DViK8hC7+7GjAUxnAqy24Ea6l9RKLvGXzQ/pAJogQBNjz4+7gEg
      uZM0/PkvTP7j73uPMqZpElqzmvrf/Bp9tKWSe5/Z+YPvkX3sQhB2pGUXkLLzcBx9Csqna4jV
      JQve9fZGgu3JTNR4TV/PRX+lCywdIT9GEHEfexLq+iXpDYQBemk+EWf6+XPCxbZkFq9pkqS3
      oD9biGEckOqm9342da3ffQAIAtmnn0bHisE9VKG9raLidcnP0VGYM6LdhjU3e+QbR5Iz1A86
      31k8/hrePgiuX0+kD/txaPUqan954+gXfx8YkQhtb72LaqTu8++FKJLxte8iWm04p4+/4+KB
      kH0+bOUTcJ80sGfY+CAgHndMLxdnqCPAqqVNNOzZ39KpeY9/qIeHhZbvwVKSvk701tIysk/5
      ChZfxsg3jxKuqkrkDO+45QypAP6P0pO01QvDpPujpBss3txM/e23DZtdOSJ0nUBzCMMyji6E
      goD34muwTp0NgHfhkaPOtR8tvEcmZbpOOgu5oHjkB0YJ2+z5yNP3+8HVhEZRVQ7xYJgNH9ew
      +LUaQoE4PS09/Ou5TWxZ307d9jbqdnayZ5efj1/bxs6dXSx/q5Zta5v513Ob8IeTb3ndVMm+
      IH1lnzkXXoxos5Jz8nFpk5l35slpSYcYVAEMVSWyLb2ldAChzZsxTZPG++9NElWNE6ZuENGc
      WGcPng8zHATFRsaV38N5/Jm9v0glLx/PkUeNe177x1DIOvOrAIg2G1nf/PEIxeqjg5SdS+Z/
      fxuL0ifibpq0NQbQDBHdECip8CIAHa1hsjItOLwKLa0anXV+rJKJPcdNJBAlvyIT0TAoqszE
      KieXgyxa8R13Aq6542fAcM2dR8axxyUbhl9xEeI46fMBbCVF5J524sg3jgKDvu607m6Mvolw
      ohXX1DLUmIgQD6B2doGiYMY1ZK8LQwcj1IPk8aL1BJBdDhAt6EE/Rp964ERLC5HNmwkuTx+X
      ZGz3HqTLrsA393ACLz+J3jFCVxJBQC6djLLwdOK4iX24BIsvA1tRPpZMH/lXfp3giuUYaWiq
      kX3WV7GV7GejUComkf2tn9Jx329S7oMsZWaT8/2bkDOzccVEREHCMHW8eRmIDhWX14qp+oir
      JlZr0nCNJ7Kx2S0U5CeNRosi4chMYLPLCIKAKLoJBRLY9zKhuGxZiJKF4h9eT81PfkSiIbUA
      m1JcQvEPr+/N3rQV5lNx3dfZdWfqBTqCLFH50+8gO9PDGjFoi6RYUxMbLruin+HjnjsX0zDQ
      4waiRUTUA+DMQbBYMaMh9KiKKMRBVgAdOacEyQzR+e5+f72Sl4tvwSH430ovY5lr7jwm/OZ3
      mPEYsfUriK1dglq3Az0UAF1HUBRETybhjijde4JEO8JoB3CSijYbzqoJ5J91ClanROP994yL
      JtI5fQYVv/7tgLQQ0zRJ7NpG55/uRGttGpNMa9U0Mr/xQyx5BUAyn+el5TfSE0mtIm4ozCg9
      g3kTzweSXrrdt9085u419kmTKL3xZpS8/hQypq6z4/Y/0PxcCg1GRJGJP7iWov+6IG3ZoIMq
      gOr3s+78i5LurL2wVkzF6jWIhwREQUdtqMVWPQ9rUR7xmhq0cAytqxmloAjRomDJzsJMROn+
      ZHmvDFtZKZIeSzsHkehwMPWxJ5E9+4vYTcNIvmUNnUh9IzvvuJ+e1aOLZ9iKCsioLiW+ZR3o
      Y0+Mc0ytpuymX2Hx+Ya8x4iGCbyxiNDi1zACwyd2iTlZuE8+A+cxpyBZPQh9KENW1zzH+vr0
      uljPPORmstzlvZ/1SIS2p5+k69WXR0xhEe12Ms84i9xLLhuQFLkPpqZR9+DD7Hn46VHT8UgO
      OxN/fB3555ye1qKYQRXANAzWnXsBalfXYM/0wloxCWumg8CqdaMazDVjOokd+7uji04nRjiM
      5HKhhwZvSC0oypDGsmCR93JwwqR778cxeUr/72GadH7wKVtv+DV6cIxHGkkkc85U5HgX6oFN
      NYZ8RiLz5FMouPoaJMfofNRGJExs4xpiW9ahNu7GCAZAAM0eRCvSoMgKWQ6QkoxpouRAcZTi
      8M7GmTGXqBrlpRU3oqaJS7PAV81XZv2on5IBYJok2trofm8xweXLiDc29CqDaLcj5GWgTc1D
      XDAVMt1IoozTloPPVYHTlj1Anmma9KxeT919f6Nn7YahU2xEEefEcvLPPRN7cQGSy4W9KB8l
      J2vceUAwTJfIXTfdQtd77497gL7IOf0Ueha/vW9osi+8kI7nXiT3kq/S+cZ72PIyiDW2Imd4
      0UNBTAPsE8qJ7WlB8TmIdwax5ecQ3bkLW+UURClOaH3St1x+y614Dz+i33hdny5n03dv7G/P
      jBElV1yAszAD/1tvkmgZ/KghSBKy14NrWnWSlVnXkb0ZWMsnYK+ekSyJHOVbKxbeRVfDs8RC
      OxipObcke/Dmn0ptOMi6NOwCkmjhtLk3kuUenp7RNE3MeBw9GqE7VM+OjndpjWxD1QfuDoIg
      4XOVU1V0MsXZhyIe0ATPNAzC23fR9elyQlt39vY1TnR1E61vwFD1JHdpn2UqWCw4KkrIO/UE
      Cs47Pdm/IUUMqQD+jz5m5w2/SFnwgIEUhcqbb6T+Vzfvu4JzwfHI1hjE48Q7w9inTELb00Ss
      fguW4koE0wCLjB5RcUwsJ9HSQLypA1tZMbGtG7EUFBDZmjyblv3yZjL6eHBiLW2svuQbqJ2p
      +cJ75y1JTLvndnyHzSVWV0t0xw7UjnZMTUWwKMQ2byBRu2NIo1a0O3AdcRRZF16KsvfsPhhM
      06Cn9W26ml6AMXLrWBwT2RCK0hYaPtdpJBw66TKmFp04qiOGrifYVL+I7Y1vjpoLKMc7lflV
      V+GyD909Xu0JsOuuB2l5+e1R1WVYfBlUfPt/KDz/jJRKJYesB7AWFdL90Sdo/vEtoH3IPvUU
      Mo89pl8XdMGIIyo2Em0dCJIF0SKiNjYkOX/smYhqJ3pURZCtCKJBorUFrScIqoq1tAwj2I3W
      nQyvZ595dq/BZZomu37zRwLr0pDWa5oEN22l4PyzsObn46iqwjV7DkpONt0vPkN8x9Zh7QRT
      U4nX7iLw3jvIWTlYyyoGZZ/wNy3C3/wiY+JK2QtD9ZNpEYgIXiJqKt4rgVnlX2VG6WmjWvyq
      HmPJlvuoa/1wTE3xIvEO9nQsJzdjGnZlYFAssruBdVf9EP+nK0fdeNyIxej8cAmx5lYyFx6a
      TJcfA4ZtlB1YtZrtP/7JuCukLJmZVP/1L8geN5suPB9jCOrtvrCWlhPfUzfSKQBIbolTHnkc
      JScHgEj9Hlae+9/9jPjxYvKtPyP/7FMAiNXuouGWn6N3j/HlIIrk/s81+E7/ar8jUbDjY9rr
      /z7uOUr2MhrFYna0fIppjs64tFpcHFp5GRPyFoxq8RumzvKtf2J3e+o5YnbFxwlzbsZh3U8C
      HG/rYPXl3ybWMDbPWF/kn3UyU277yZh2gmGtCM/cORReeQXjSWYXFIWKn/8UJTsLwWLBOWPG
      qJ6L764b1eIHsJWWYcnanxbb/tZ7aV38AK2vvt1LkNV0x61jX/wAhkHbw38hvGZ/iaSW8NPZ
      8HRa5qhH66nOKODUOT+lJHsOkjg4xTmAzeJmavaxnFH9M8q9s0c9Rl3LR+Na/ADRhJ+V2//W
      22/MNAy2/Pw341r8AC0vv0XjP18a0zPD7xeCQMF/XYahqjQ//uSot6V9EB12Kn72U7yHzt8r
      TsB3wokEl40/w7QvMk44sdcjYJom3cvSwxfUF8FNW9HDETqffgy1eRx/KF2n5U9/pOKehxBt
      NrpbXsMYxHhMFd2tb1Iy7WiOn/4dooke2gM76Q43ElNDCAZoW/ZgLqtDqfVjdi1iU+KfiErS
      be2ZNYPsE47FM3vGoCkhqhZlU316SiVb/Otp8W+gIHMmbW+8i3/JOBsz7kXtfX8n56SjseaM
      LlFu2JpgSC5a95zZ2CvKCW/ajD7KCKlz6hQqb/sV3rlz+123FhXT8/GHKSXBDQY5K4uS7/0A
      0ZpMjDNVjfo/PZJsvicreA+bi2gk0IIRQMBeWgwCWPILURzy3usHClWQHRaMPrQhZkIla8Fs
      Op96eNx91IxwGDkrG+uEctrq/jpmo3c4mEYCizUbm7MCi2wjw1lInncy7j0QvvsF4s8vgZoO
      dH8AIxbDVFWMWAy1y09o81baXnsT/7IV2MtKsObn9TsW7WlfSn3bx2mbq6qFKc05nM3X35b0
      /qQBRjyBZHfgO3Qgie9gGFEBYF8VVznZp56KxZeB2tWVzOU5YEcQrVZsFRW4pk3HWlSM/6NP
      aHvldbo++Ijw1u2YiQTWvDzsEybgf3fx+FOZBYGib327Hy24Houz5+GnMeIJ7NUzUHesJ+aP
      kHHUUVi9NiRPBrLLiWfWTPS4hmtSOZJVwHvUUVi8buyVkxAsAlabiGPWHKw+G/GWZBqzYlHR
      G+vGN+d98wwFUQ4tIdSVvjrZfTBNE3dWMj/K1HUaHn2Snb/6HfEhqrIORKKtg/Y33kEQBDyz
      pvfurpvqFxGMpi/qHIl1UBSaxO4/P5k2mQDx9g6KLj6nt4R2OIzJZJbdLvIvupC8Cy8g0dZG
      bM8etO6e5C9Ikuh6/yP8Hy8htGXwsHnzk/9A9mWQd+7Z5Jx/Ie3P/GMsww9A1pln4Tuhf1KU
      IAi9RfNaIIS9uADDL6JkWBA8BcRaehAdNmL1tagJA31XLUpxPrH6WgzNJLK5EVd1IRJOFJeM
      4C6iZ20yMTC+cxvCaHV2hN99bOd2ol2bh78pRSQi9Ukj2BSof+AhGh8bu41hahq7//Q39HCY
      suuuAQG6QvubA6qqjmyR0BLJ/6cSnDVMndr3xnZmHw1ijc3EmpqxjyKlO6XcX0EQsOblYc3L
      S565lyyj5vY7kklyI0Dzd9P4t0exFhXinjuf8JqVY98JBIGs08+g6JvXDogGilYFS4YHrbsH
      dfdOxOJiiHYQ3EDSf6+bycVpgh6JYp9QTs+qDQiKNVn7kdAIbwwgGBpKQQHqXhp2BAFB3e/r
      dx37FSKfvIOlvIp4bQ0CBpbiUtTGBkxNR1AsyU6WiiXJeGzoCJKcLBjRDdB1Yns2wyDZ3Fok
      wturejj1kAw2dsKkbAsWRUJTdSTZZM/uOKWlDjTNQJIlZKn/6jOMGIYWofOtj1Na/H3R+Pg/
      sJeX4TvtWFRtv62ydHEN846bwLJXtjPv1Era9gQpKXfTsjuA22dj/bI25iwsoLUpTPlED427
      g2QVeuhp7saV68HnTRro/totaScMMDWd6O6mz04BegcyTTreeJua3941Zq9LvLEJtauL/DPP
      ILRiyajzgySPl4Kvf53Mr3wFBAHTNPqF2QVJwjW5kmhdMoMx3pAMDqk9g9su0Zq65HfpU19q
      RJJn8mjt7t5r1rwcRAWMGAjuXIxAF0pRAYLdgX3mYTjKMonWtyDnFqN3NOGcv5DI5k1YXBKC
      zYnW3o6YXYIkRehZnOQe0qPBQRVgR02ITLtAJKYRjpq88WYdtlwPoaYQhx9TxNo1LWArYNua
      RiJWB+eecECdgWkSb2+l9g8PjOp3OhLq/vggjkOq6RujyC9yUb+lHXeOi9qdfiaWONi2uR1f
      rhd/Z5zCIg9mPEHQH2TXhgSWggxaG3uIB+I0tbZx2JHJOWvxKOOnSxsILTh4as2BGJcCBFat
      SWnx74MRjdH66ttMvecuIls20fXWG8n+BAd6mwQBJdeL59AcMo6agGhbQWzLXrpv2YVoK0Ry
      VyN55yBIDrKOOYL2t1KnAx8MvsMPQe7aQSLQg1JUiBkJImXlYyR0JJcNLRTFNEGUBOTMbOK1
      uxGtFuI1WxG9OSAoSKKOkdj/3WRXFjoD62S7AjEcdpldeyKohoA1w4UkQHmpk91NYUqKXAQ6
      wuhWK67BmtkJEi3PvILWk57GGFogQNszLyMeagGSaSXuLBf+lhAl5W50SaCmJkhOoQuHSyGG
      SVcwQHdQwOZQcNgVnB4LCWSifgG3d7971sJn0w51tCyEwwbChoMWCrHha1ePquP7SHBOncz0
      hx4AUSTR2kK8rg7V7wfTRHLbkGybkZQdYI6Q8CXakXOOR3QexYpzriLRnqYaXFFgzmMPEHz9
      WUJL0mO0ChaZnP/9Jv72F9Miry9EvLT/YjeJ9vRl3So52fh/UUW3Or50iwNRvXQa7Y++kVaZ
      AIc8+xDu6qoR70s5na71+ZfSsvgBwlu20fmvd5O2RX4BngWHk3XqafiOm4k1+30ky4aRFz+A
      EUVrfQ218Q8UX5a+8rvsE47GPX0Kjpmzk/ZDGv6zTa7GnjW6oOBYYbTKaV38AIn2Dtyd46/m
      6guXPZ/8+emrwNsH2ePGXj668tOUFMBIJGh7Ob056C3Pv0jfzUgP1xLbeTdmfHSuu74w4y1k
      ztmBd/b4+/kqOdlU/uQ7CKKIe8FRaSnpA/Ce8BWsjnJka05a5PWF0D5IdqTiwDNvNkpONpLj
      gAixYkey720D6xw6jTurOxdRSF/NdEXe0fgOm4uUpuquffAdPg95iFqEA5GSAkR27krb238f
      Qhs399YfGAk/8dr7QU+dSk8QYky4JhNHRerUGbLbxbQ/3NZLvyFnZpJx6pkpy9sHpbgEz1HJ
      OtmM3JPHLa+fbHsJkjow61TMLMRoq0GN23CWZuM5dD724lycM2ZjK8hDsil4Dj0Ez8zJOKfN
      wFk5sLG4PWanJGdBWuZptXiYWHgCksNOwTnpoToHQBQouviro789lTFCm9PTQqkfTJPwlm3J
      wouGJ0AbvwEnOw2m3jwf3xHzR775ANhKiphx/+3YMxQSOzehNtRixKNkXXAp1rKKlOckyDL5
      1+2ninfnHINiT72LfX+IZBZfhCAMkgwmCLimz8CS4UTMnYDRshVLYRGy00IioeCaXU1881rU
      kIrsdeOsqhx0hFkTLsKupNjJvg/mVV6JsrcbfNk3Lkf2Dt6SdqzIPnYhGfNHn9uU0n6WaG1L
      5bEREW9tQw9twwhsTJtMUail+nffp/2dY6j/86PEW4ev7pIUGV+Zi6zJDsJ/uoFwX4+UJGGp
      mEzGkQvoDPT0tgkdNSSJ/G//CPvkqb2XBEEit+Iamrb9etw5QRn5p2J3T8WSObA3gBnspOvT
      3SRiVoRoC9aKKahN9egqmBGd0PoW7NNno7a1IVitxJoGlmlaMn3YlAyOqP42H264EzXFHXpa
      2bkUZe9vcq5k+Zhyy4/Y+IObRmxgPhys+blU/eL7YyqZTMkLVPfH+2n5R2r9s4ZD2Xe/ReZh
      neg96U1mkzIOwVp2NUZCpfPjpXR9uJTQ1h0kOrvAMJC9HhwTyrArcazd2xH1kSvITIuNaLeG
      Fh5dKaLk8eI+8TQExUa8uRkjFkW02bEWFuKcPh2xWKS19v6UlcCTcxxZJZciCBLBTVtYf+U3
      U5IzHGY+/CDu6dWYmPiDtSzZci/h2OiNbVGQmVF8NpXyZMyeNkw1gWBzIGQWImaX0vD0Inb+
      7r6UlEDJ8jHzz3finjppTM+lpAANf3+UhoceHutjI2LCz3+Aq+wdMFIvYRwUkh37tDsR+qQH
      m6bZj7ov9NrThF59amxRaUGEwiri3RHitYPz+Yl2B5pmoieMYenBLbl5eE87DH1aM5o++h1W
      EBUyC8/Fk3tib0BQj8VZfe6laXeDzn3hSaQ+LBdxNcSm+heobfkA3Rie5CwrJFLdouBp6QRt
      kHsdHuSpC/F3e9lx/z+ShU+jRLDYR+1lR7JR76S2o4FgLIRVVijIyGVWyVROqD6CQ8pnIg3W
      VyIVBehc/D47brx5rI+NiKn3XI/Fkn6/OICt6gZEx+C1ruF/vUjgmb+kJliU8F75A6TiSmLb
      t6B1tGPqOpLHi6EZtD3/PInm0TsMrGXFZFy1kIRzF1pi6OOaICg4fYfgKzgD2do/axPTpO6+
      P487DaIvCv/rYiq+e+2A66ZpEkv00NCxnLbuzQSjLWh6DFGQcVgz8Qk+cleswt3YMrqUB0nG
      qFhI01ad1jfeR48MvSMGPApvlBt8UGKQGCZJSwCmFEzkBydfxXFT+hf+pKQA8bZ21l5w2fio
      DQ+A5HEz+/GfozYNvrM88fJWzjutin8+u5mzzqyitT1KcaZCDIlwT5TMHBchfxhHhoMMx0DT
      Rim/FjljYIqsuqeGjtu/lxL9yT4IDhfZN96LnL3f7RpcvYq6W24ZVfXbgRCdLspv/iWWSg/R
      4DbUWAuGHkEQLchKJlZHOXZ3NaLsGvK8m+joZM3FV6YlGix7PMz+x8OjyLE3kwXzZjLfymyp
      Jf6PWzGDYw9IiqXTkU7+Nt3rthNYt4loUytmIoHkcuKoKOUjSyd3175NaBTH1X0QBIEL55/G
      TWd9B6slmT4/qnToAyE5HIQ2bCLW0DjWR4dEzqknkzG/BL1n8GYP4UCEts44uiDhtImsWtuC
      ikgoqhLTBJr3+FmxpZP2oMbkUveA5yXvLET7wOBIzyP/i946zu+hJjBjUWyzky7CaG0NNTf8
      PGV2OVNNEFi6lMxjzsBdfChO31xcmYfh8s3H4ZmOYi9GlKzDGnui3Y6S5aPrg/Hn70+4/nt4
      5swchXEpJNviCiJmZxPxJ27EDKWW52/2tEFHLd6zLifrmCPIO/V48s44iZyTjuYVrZbblj1F
      PIW+CJsad7CxcQenTD8aWZJTc4MKgkDhf10yaK+ulORZLBRcehGIQ7M9+3I9BIIxqkpcBCMq
      OT47ikXCYbdQmOsgM8NGQY6DqrLB3WmCODDnRGttJL4pPR0cYys/Qg/4MRIJ9tx1J8YQPEej
      hR4MJuUMk2elR6N0vvcBu359B+uvvJpVZ57HyjPOY90VV7Hr1t8iWizknz96n/hgKLr8YnLP
      OGVMnhVTjRNfdBdmeHydHI3dm0i8+2i/AOl7W5fw61cfQB+kxdVo8cG2Zdz00h8xTTP1ZDj3
      nFnknHYy7a+OP4+j8IpLsRUXYcaGPo1NKctgSlkfJoEDem3kZ1qZXDVUuxwBQRm4fcfWLx/k
      3tRgxqMktm0g0hkmOpbeysMgsmULPR+8j+/Ek/pdNzSNtpdfo/HRJwZ1SasdHUS276D99Tex
      +DKw5mYTb+8ck4EvyDIlV32N4isvGzMBlbbqTYzm8XeDBNBWvo486wSkgkr8kQC/WPR7tHEc
      V/fhuRWvc1L1wtQVQBAEyr77LaI1dYQ2j601Z19kHLGAoisvT75hrAUgOUFPbxd4ZBeCbWBa
      hLZ7/x9JLpuEVp8s5BFcGZiRnjG74xJ12+l8Nz21rfvQ8dJLZBx/Qu8iVP1+dt5yO91LR6e8
      +/rpyg4bkts7qqow55Qqso89EiMeYdsPr0ft7MI0DSwZGdgnTsB76Hw88+b28wjtg6nGUZel
      scjF0FGXLEI650c89snztPSMkqVvBJjAnW8+NL50aNnlYvKdv2b7DTcTXDv2PmK+o4+k8uYb
      erlcBFFG8s5GT3OZoOSdjTBIDose2Hs+VTKwlJZjtNYiVx0GiRBGKIgR7EEuqkDvbEHOzUP3
      dyFm5KA37EDMLoZYEMGTjd5ai97ZSWzrJqI1wzeoHisi27ehtrWh5Oej+v1s+e6PCW8fG1Et
      JPlzLFmZVN16I4F1Gwmu30iivQMjkdhfFD9jGqJFIrh6NU2PPDJgx4hRT3DtOtqeX4SSn0fB
      pZeQc+bpiH1Sj409W5Ln9zRC37GCaMjPMyteT6vcHa11429eaMnMZMrv76Dxkcdp+edzGLGR
      rfL/3955h8l1Vvf/8942fWdme9euVlr1Xm3LuIAbLhhcMIQSiCEOv8QQWkJIsAM4phsMJCSE
      QAgkgCkO2AZi3G3Zkqtk9bqr7X12+ty5976/P0ZlVzvbR0aS9Xke+fFOOffOzHvufd/znvM9
      qt9H1c1vo+Laq5DxKLZtofhyEQ299BLswWeZiUBUXoSKXjpeZmhuXqs1zMMZGkZvaMJJDSFN
      gV5Tg9muItxFaLUu7NZtiOAcpGmilNWiBooQpaVY/QMoRWHsgQFSBw9OWzljUhyH5L69aKWl
      HPjsP81o8B8j09FJzy/vZ/G37kHoeq4o3rYRqoq0HVq+8lX6HnpsSlMli/hlfgAAIABJREFU
      s7uH1q99ncHHHqfpHz6NUZ5L6rNbZt5QcfwTT7LthYcKdvUfyYyiQCejaBpFa1ZT+qZLEYaB
      FYlgxeOj9Rw1FcOr4wvphGoCyLa9RH9/P9H/+zWx//sNiacfJdvVjhauRfEJZHrmTZ9HopVc
      iFZ8QV5tTnPPNqz2Q2AmsdoPIjM2TjSCjA+T7epECAchLayuNpxEHCeVQbjcOP3tIDSs7jZQ
      NJxILzKTwbR0zNjoC4Ba3khw5VzSXQOoAS9aURChu9HDARwbNL8H6YBeUoKTymBUlmMnRi+g
      vQsWkDjQQtdPfj7r78Ps6UX1+ihasQxF11GOig/v++TfMjyFvs1j7HV3E9n8LKFN56P5/WRf
      eBDZn/vtnjncT2nARetwmmKPntufGE4Tco9frHIkkiSY5/lHI708PcOI0kTMuCBmIhzLIjs4
      iNndi5NOYw/1k3j0N9gdhye/uigK7sUL8W1KoAZmdzUV7hrc8z+BUPOnxiYe/TXRn3xnVscY
      ScZTy/Cu0VOgwMYLUL0G8QM9eMMpHMIkD7cSWNqEnVVAE4i0SdZSEfF23AvWk219kfjuExeA
      sre/g+4HHibT3V2Q89SCRaz65U/QfD6k43DgM//I0ONPzMqmb9FCFt57D+Z9n8M5ehd4vm0A
      IVRM6dDSG6c07MfMZNANA69wKA/5ONA5iCfgZ3AoyvqmSna19dFYWUx3f4RhdK5rzgUv/l0K
      7k2e2B1eO2cZ27raWFISoCORJpoYwjA8CMfG6/ZhO5LhxCBBfwnRxCBuVxGqNJlftYh9XbsY
      SuV25U9J/2ZF03CVl2OUlZHY/BiR+76LTE0xccpxSO/YRbZdI3hjKVp4ZhWjwihHDdxE7LkX
      yXZ14KTTKF4vRnUtngUL0UJhXCs2wE//tSCdJoXXh3vF+pMcQMHJJMl0D2CU+Ejt34Ve68W7
      eCl2tBupB9HcGmY0QmbYwl8XwurtRZ4kJR7fuatggx/AGo4y+PiTlF99FQN/eGTWgx8gsXsP
      XT/6b0q9J34vXddRsiYDWQmqRm2Ri96og4PE73WxwK/wEjpm3GROyEvLUAoJmI7FUFqSVk5s
      tGZO+o2GLVhT08BAMsE1y9bSFenDo0jakiYCAz9RHG0hdqYXpXwOLpcbM5PC6w5gj5imnqoG
      5rk2qI/+loEf/DPMIGZrRywiP+mj6OpSjPrxJf7GHhfMdkHsuSFSez6JzI7drRYuF75Vaym5
      6RbcK88j/fLmPJamh2fDpdBwch9kh8TLLwNgtuQeye4ZX7A3Nk7qTrJtdpKB+Yhs3kLpFZfR
      8d3Za5Ieo+fnvyT4jnXHN5cWl/nRBDTZkmzWQtM0KjwaLkPDUASogjc1hPC7NJKZLF63gSoC
      OI6kxmNg6CeGp+0PQ+rE1PBwXxvrlq3i1Z5OuiI97O/rRLMTOEaYSNoiKKL4/VAZKGUoNkRf
      YgAFHa+jUuzxET2q5n3KHCC9azsDP/zOjAb/MZy4TeQX/ZTeejVqaRcyM/FVUBIm8tsuYlt7
      JgxhykyG+HPPEH9hC0UbNyBUbVapEEpRGP9Vb8dxcs4lZ9GPYIxttxtrZH6/BISCXlqMFRlC
      Zu3xNYgkCJeBzJhjXpPYf4DhLVvJTCNPaTLsRILIziMUH92IN9ScK/gUQM99Br8xulahzJ/b
      /PToIx5XwT3ybyGYs2QTPH4it8kyI/z3iznhg9/tHBl16jvx38HJkwFPiQM4qSQD/3EvWAUQ
      qLVsIve/QPXn7kE63dix3chUO9LKzQeFXoRw1yC0Brru/RHJbdOYKlgW0aefwRV04/LMUANY
      0wm+58OooWIUKQmsWkX0ucJpnwbWrmPg5dECWv7Vq7EHesHKoJVWY0d6UAKlCDOKlREoBqiB
      YmRqGMcGKQw0wyZ5sO34h8wODhLZ/GzBzvMYse40xSEd7MKJEyvlDaxZ8UbUJ36KLQsbZTsl
      DhB7/PdY3YW7bVvdncSeeITgVW9F9Y+t9JeOTdc9Xya5bWqtmk4mM5xGMQIYhjkt3U/hchN8
      9+24l50Q/y278WaiW7cWJhyqKJTddBMDL//j6IdVME0N37LlGEEf5kAJTjoCej2G6iax+yCa
      L4pWWQVS4lgCX0N5zgGOIRnVClcYLrCzSKGiKBKJQJpZEApCkUhbTtiu6hjpgThKw1qcg4Xb
      ZdfWXMm8yrksqJrLrs7C7DADCMTMVSHGQ1oW8UcLL3MRf/S34/YpiG1+muiTs9MBSvXHcV96
      I1rV1MoT9YZmij/2BTzrLx4VYvUtWzZGrnGmFF95Jd5Fi8c020t39OOpLcVsP0KmP0qm8whS
      eCEVJ32kBSs+hF7egFHkPd4h52TxWT0cwhwhRuZpXoJ/6Xy8C1dStGohRlkprsZ5GHPmE75g
      LUZZCKOsFL2iBv+SBWjhMvyLm1FDxfiXLkF15a6ldiaDsvoa0MfP65oOoqw+lwqhKLxv000F
      sXmMixduLPwdINvVTrazMDH8UXY728h2tWPUNYx63Mlm6f/Jj2cfyZGS6EvbqbvzG2Re3kxq
      y2OYLfuQ6WTurqBqCE2gB9y4mxox5i9EdL2AHT2IKJuLKG1A6C6EolD9Fx8iffgQqQMzv1p5
      mhdQ/cHbEELgm99EYveJOmyzowXzmEjvoaPfdcsIvR5FxYolSO1rJdM7BJzQ9DyGd34TiR0j
      Sk/tFGguFOHgWA5GzTxEtpdYS4JsTwyjqg5hGCAdpFQxShVcjfNQigKkD3fgqi4hebgHpESU
      1mFc/C7Mh783488PgO7Cde3tCD2XcnHtykv5ydYHeLHl1dnZBdy6i799858X3gEyBwvfYf64
      7UP7xjhAeu9uzCMtBbGf2rmDbG8vno2X4tl4KdJMY0cjOJ17cbY/BAMHEU4KortwXjxJ2NZf
      grroYtRV16IFimn83F0cvuMzpPbtnfZ5eBctouHOzx6XKAmdt4HeXz+Ye3IqCxVpE9/+yoSv
      D523kcyRI8dbYNmxGFbMQCGFMFQghVpcihG0MAd7wK3mNs6CxXjnVJLcfQg7GiE7MIgdjyOc
      3KJV0XVUrxdlw1twhvuwts6gHzCAquO67sOoNQuOP6SrOl+88ZPc8p3b6Z/FppgQgr+/9i+Z
      V9FQeAew8nVqFwrulRsQqiC9fQug5uaUqkBaNorbhZNMITweZDqdi6RkMzkR2ZG2+8baTrxS
      yPphSWLbS7jq6o+et4CdDyJfeRDhTBIlig9gP/8L7B0Po134PrTFl9D05a/Q9b1/Z/ChB6fU
      ZkpoGiXXXkfl+96POkJ/KLRxPUZ5OWZvYXJs1ECAkksuIrp1K+nWVuCEhuooDo28c+RCkK5G
      lWR8gMT+wzDCt4/lLxoV5SheL0IIjMtvRQSKyT7+42ktioU/jHHdR9CaVo/ZwW8sq+M77/08
      t/3n38/ICRSh8NeXv59b1l8DFCgVYiSpl58ns/+k7FAjhOoxybTF8KxYjO4zMBZtxLt0AVL1
      oDc1oxke1GAYtboJd1URalEJ1kn9eV1NzXiWjW64MfTA/2K2t6FX1+Z67J6M4UHRyLXa1N0o
      hkBa4y9Q9bJy/Os2ItMxsr++C2fvkzCdyIOVyS0AsxnUuWsp2rCB4PnnI22bbH/f2JatQqB6
      NUKL/NS8dRmh+QK6NiN7XoFYBygqwl+KYriIbC5MdKn2/e8htGEddiw27UiQHRkkOzh+nn/J
      ZW8itHEDkLvSqnWLUOetRUZ6c0lyE01VdRfaqstxve0TqFVN47aWrQqW88bFF7Cjfd+08oOK
      fUHuvvGTvHPjdcfrGwp+B8irnJaNoRQvw10C2Z4enPZ96K4yrM5e0AMoHg9W1kIJBbEzGbI9
      h8CfR9zJPda2E8+FQ/WyMrKd7biXrkb16jjRCJm+JHqxF4FELwuRPNiDRhRtxWLs/g606rk4
      wz1YSYmrxEdsy/O5/sSWSfaBLyHbZzrXlNgv/gp0N+rGW/DMbaLuox/DMf+KTHsbZlc3TjqF
      SLWhDW/GcEdQFAnsR3aPtHKUQA1lK9/M4JoVDE+xKfl4+BcvpPodNwNQfPFFHPnmP+OkC9Nk
      G1Wl9PLLkNImmWhleHgnqVQ7VjYKa/yoTUtxdfTgj2m4TA2sLMLlQ5RUo9YvRW1ejxIIM5V5
      3tyyOv7ntq9z/0sP8x9P3ceB3haccZwr7A3ytjVX8IGLbqEsMFrTqOAOoJXn6YUrLVJbnxz1
      kP1yLuVZrZyD4lLItO6F1hEv6B2rCpDPtjCO7hILBeFyobpU7LSDXuTDJoBiWJAYwLEr0EpL
      UEUA1QVqVTVmbzsIFaOiCr0kt3sjdAN7y0+RbbMbaAD2lp+hVC9CzMkJNSmGgWduE+459Ti7
      fow8+FvwTuHuEutAvvpdGt9Uzt4OP6numVWbuaqraP6nzx5vJ6UFg5S/7Xq6/3t2jUqOEdq4
      nnTpEId33EEqmScQogB1AFl8/iaqa95CMDiVUsv86KrOTevezA1rrmR310FebHl1lCpEdaiC
      5XULWTNnKV5XfknLgifDZbs76Pj4BwqSXzMKIaj5ynfRK0c3Pej+53uJ/O4BlFApethHti+C
      6tGw4iZ6cZDs4CBCOugVlWQ6uxDCQa+szqk3ODYgUAJhFJkh2z9I8ZWXErReALswBf+idA76
      O+/J7TYD0srgbP0KsuflGdnLphQOPmQROzC9QnP/kkXM//wdGKWluUjN0a4+TjLJjj/7IJlZ
      1ncLn477b1aS9k1vnVJcch4Nje9FVQsrvDtVCu4A0rbpuuOvMQ/PPG89H0bjfKo+ew9CGb2V
      PvzYH+i650sFO07VxY24RWF1T7Vr/w513kakdHCe/wayY3YFP1IL0te/js77fjdpcznF4ybQ
      VI+/sZZM25Fc+oRlo/q8GFU1+JavQK+p59AXvow9xaYSY9AEvLcMsXhmg9jna6R54cfRtDzd
      Qk4xBZ8CCVUlcNk1DPzbPQW1G7js2jGDH8C3eh2KzzdjBYaRqKEgLmMYCttiGGfvk6hNG5Ct
      j8568AMIa5iKBQNU3PcjBp9+lsjmLST27c+JC8uchKGnsQEZHcDuOoLTeZho5+i9ACeZINvX
      R2L7K6Ao+KqqiKfTONnp5UQJrwG3hGCGgx8gkTjMgf3fonnBx1GUU5aelpdTcjT/+ZcQe/iB
      gt0FjMb5+M+/OO9zWjBI6LKrGLx/9sUi4fPXIFKFz49x2ncgs0mcXYUTqpI9L6NE91B2xWWU
      XTG6aN4ajtD2pbtJHJ7iHoTjYHV34PII7EAQMzK2A2g+itatRbythKgxe7HkWHQ33V0PUVV9
      7YzXBDOh4KkQkJM5Kf3gXyPyRG2mbcvtofSDfw2ahp1IkDx4iPjOXSQPHcJOJpFSUnLTO9Ar
      Kmd1HFdDI6FN6xmvPX3bQE6hLBJPkz6aLhRLmcTMKSxi03Gcvb+GTGF6Ix/DOfAAJ89grUiE
      w5/6xKhu9FNFINGcFLV/cjMVN9+Iu652dChSCIzyMkqvfjOLvn0vc+76CDFX4XJzujofyEWM
      XkNOSUXYMZIvb6XvG3flzcmfCkI3KHr7n5Fo62Xo6WdIt7SOXlwLgWduI+ELN+FfOI+eb35t
      RkpsajDEnC98DXVgB9Yj+RvLPXdgiIAb9vcnWNNYyr6uGBVBndZBk/piL33RJEV+D2trxopy
      IRSUpnKENU016clQNNTLvoXw5qqmnGyW1s98isS2/OJiU0VoGg13fQnfsuXYiQTZwSGklOjB
      IGpR4PgVurXlh/T2PDLrjzGSmtobqK65rqA2J+KUTri8q9ZT8befp+9bX8QemqY8nstDxlXG
      wS99c/xdVClJHTxE6uAhhK5TtGwRSm+ufneq6JXV1P7DZzFqarEjE9/Ko1lJc6mH1oEkA8NJ
      spqf1Q0hDrdFCRX5SCbHqwNwwJqdSFR+sxZy6MBxBxh84NezHvyQS2js+MZXmfetf0X1+fJ2
      jXGcLJGhmUWyJmJo8AWqqq8Z1fnzVHLKj+JesJTqu79N4E3XTKlzn9B19OblRAYkwzv2TSmF
      AEBmswy/tJ1UWuBevAzUPE0iTjpO+Nrrabjn28dTH4R/fO3LRdV+FpV5cTQXyyv9LKwrZkNN
      EcVujWUNIQKKxaLaYP43qwKRR+WidSAJOLT3T7wRFYmZDCdNsvmKfOK5iJUdj9F3X+HWGGZn
      B0O/Hz+r18wMYJqFL1JPJtuw7QJtzE2BU7/kFgI1EKT4Tz9E8PpbSDz3JOkdL5PtOIJ9NHVB
      DRSh19TjXroKtbqR/Z/5LNYE2+0TYfYPElFUmj5zF+ah/SR3bCfb3ZWrCfZ4MKpr8C5bSdGF
      F6GGi0crBZc15JLt81SxBb06oBM6GqlbPqLPlktVCFSOM/gB4fEBY6eB2w4N0dGnk7E1uvpi
      GD4XhhAc6UvSWOFFlTZHog4Vfg235qCXh9BPumRJK1drPfzM09iRwt5lBn/3IMXXXIfIczHJ
      mP2Mt16aHQ6mOYCmFbZv2Hi8ZjEnIQRauITgVW+l6Mrrc3P5Y5EGRQEhcJJJdv35h7AmiW1P
      Rra3jyPf/BcWfvteit92c+5YUuYWdEKMG2UQniCishnZOXOlu7x261dBYqzkSMDvYm1TkBd3
      DXAo4ZDtzVLpthA+H30Ji1Q8xb6ODNq8IoKGg5VnvAkld1eNPTf7uuaTybS2YHZ14qodWyPh
      nMKr9Km0fTKvbdD1KOLoQDxZXLfje98n3XpknHdNj+T+A3T914+p/eCt4yZV5Tkx1OVXYRXS
      ATQDdfWNOE8/PyapbkVdEYausaipGE9PgsoSL9J2KPZpDFuQjKrUVYYoK9LQFPDmm9V5y5CW
      RbrAinTHSO3fl9cBlAmEjGeLop462yfzR3GAfGS6u+m9f4a54+PQ84tfUv7W6zEm1bU/gdK8
      CfHi/ci+/B1fpou67EpEyRwI1EJ0tHMX+3PTqJDfYKV/tPJFOYB/sjWTQISbcFIp7FmqUY9H
      ti9/aoPhKiWXtFboaZCCYYwnclx4Xpul9hTof/C3yPGkwBUNLRjI7StMY5PESaYY+L+Hp3Ue
      QtXQLvtL0GZ/FRLFdajnvQMhFETlmlnbG0OgBvzVSMc+mtdUeMb7TVyuUnQjlPe52eDx1rym
      eUGnjQMMPTVBioC3hJKL1+OZ14xRWkxg5QqMqiq04gpcZWH00vHbdg49NXmDCGmbyMww0owi
      HQulYh7a5bfDbLbl/SVo134K4cqFEJU5b5ydvTwoDW9CKBpCN1CMqWsnTesYvvz5OYqiEwqt
      KPjxwuHVr1kIFE6TKZCdTJFqaZnwNclDHXib5mGVhpFpE6O8HD3kxXFcmId3jpu+kzp0GDud
      HiXlLaWEyH6crs3IgZ2Q6gPHAgSoOvhqEKXL0S55N9YzP4f01Bu2AYiyRrSrP4kSHpG56qtA
      NFyGPFQgwQBfFWLOG4FcDYZWUoodm955TgVX7diuOscoL7+U/r6nkLIwdx9FMSgru7ggtqbK
      aeEAZm/vxHIk2SSZjgRS82P2dOOuriB16BA01uLYOpnu8QWQHNMkOziIWl0NUiKHD+Ls+RFy
      cA9556+OCZF9yMg+EBrq4gacviyyY//kIl8uH+rKq1HX3oAwRt/GhRAoi9+B3fcqxPKUH04H
      RUdd9ecI3XPctm/pMjItY4vfZ4MwXHiaF4z7vMdbT0npJvr7Zi+tCFBReSW6EZ78hQXktHCA
      MWWCJ5OJYWbAHMw1nzA7cwMovn0K0RrHQZomUjrIQ7/B2f+zo1f7KSAtSBxACfoRi9+FjKRx
      2rYjh7vBTOXapLp8KCX1KI1rUeZfgPAFGa+iSehe1A2fxH76TkjPMC1CqCgrboXSJaMeDr7h
      YgYf/E1B6zD8q9egBoqQjkO2s53Uvj1ke7pyEvE+P0ZtHVVNlxGP7yedmp0OlM8/j+qa1zYR
      Dk4TB1A87tzi9hSkJQlFQTGM3FX/8IMzM5KNI1t/ibLsA6jnvTNXLHNMSlEzjha7nPjhnHQK
      c/crZPZsI9t5BCceRagqaqgEfc48XI3vQun5X4i25j/eeOg+lJUfhNLVONEhUNRcXwVFxbto
      Cd7FS0nunL1kCABCUHr9DcSfe4ah+39G+uCBvHdA4XLjX1KPuUHiFM1s8Ho8tcyf/1coyqlZ
      x0zEKU2Gmyp2Os3LV12bN+3BvWQFdut+hM9PdmAIxesFCYoqsU2JokvstAWORFqZMbMaxetl
      xb23wsEClP0pOsrav0EpXZb3aSeTJvnYg8T/cD9OZILcJ6Gg18/Bt7gIw9UJ2UkS+ISKbdST
      HqogffAIVm9XTnZSCBRfAGPeYrwbL8HRvbT83SfHj6ZNA/+adeheg8QLW6Z0YXKKFJJvDmLX
      u6alMRkKraJh7p+h63mSCF8DTgsHANj1gdtI7Bmbv+5ZsQaX34deXobZ2YHMDoOnHCfSiWvu
      UlTNJNXSieM4JLdvG/NbBRaUMe9GV25uXwg85aibvoDQRyeIZbvbiXz3y2Rbp1EDIRS8520i
      sGkZDOxARltzziBlLgzrq0CEmom/0k782eeRmYl3SI2mhdi+CgYefmRWd1MtGET3u7EHptdp
      XipgbyzDurSCTHbi93o8tVTVXEtx8TqEmDhv61RyWkyBAEJvuHCMA6ihMtxhL+nOfqSZIDMw
      jNXXgVbu5KQB+/uQw72k+9P4G8N5f/Oy5VlwCjivTPUiW36LmH/j8YeybYcY+PpncIanOa+X
      DsnNT2LH0xTf9inQNLAzucGr6shMloHv3E1mx9Ry+82DexCuFgILm4jtOTQ9OZejGNXVqIrE
      7p++BpFwQNvcR1ntG3FdtX6EKsRR5Q49iNdbR1FoGT7f3Ne8+isfp80dwBwY4NV3vBsnlZr2
      e10N87D727Hio6+QrhKNRbeGEUp+B4gmsxR5ddKmjduYxlXIVYx60T0IzY09PEj/3R/H7p9d
      AwvvhVcQfM/txxeB0rYY+NbnSW+bftsidAN99aUMPv4U9vAUE+SEoGjTG/DUVjP0q59N/5gj
      TekGdXffg3vuvFnZeS04bTbCjJISKm++cfIX5iHTcmDM4Aco21gx7uAH2LKji/39GV48OMje
      liGODKbpi2Q42BljcDgzfouBzCByaC9SSqI//e6sBz9A8qnfk37lhPBV/NEHZjb4AbImzuHt
      NH3165Te+Ha04vFTC4Su41u5mobP3U3N7R8l+sjvZ3bMEcisyeDP//uUBDUKzR//HjSCqnf9
      CcNbnx8lBDtT/CuWU7opDNHxQ6UlpQEG+mLgZHlmd4K6GouAYtE65FBf7mFjcPx0CDm4Gyvm
      IvXCU7M+12PEfvmfuJetQ5oZYg/MbtFu93aS2b6Fyvd/gPJ3vpvUgf2kDuwj298PloUaCGDU
      1uFdtAS9rAwhBNEnH8WOFqZsM/HSC1hDgxM63+nAaeUAittF0+fuZO+HP0qmY+ZxZXfDHJru
      +DRi510Tvq7YbxAOw65BjXmVCmWlXpKRJBct9tGZcCYOZiS6SGzrKmhbVKvrCJm927Ejgzix
      2Q/ExFO/x3/5W1HcbnxLl+Fbmj96dYzktsLprEozQ2rPTgLnv6FgNk8Fp5UDALgqKljwja9x
      8I7Pkti5a/I3nERg5Qrm3vH36OGiSSuLGspzkZzzRm4+Vuceq5zkwiWTQ2R2FiZjdCTpV54t
      iMQLgNXTid3XjVZRPaXXm+2FSUU/bq+tsPZOBafNGmAkrooKFn7ja9Tc+n7UwNTiw1owSO1f
      /DnNX/1STv0MkdupPUXYkQjO8EmFO/rRjRx1kuuKUMaNlWcP7yfbWaCB49hYvVO/kxY6pfrk
      fsenI6fdHeAYistF9XvfTdl11zDwh0eJPPU0yQMHR3U3VzwevPPnEX7DhRRfegl6aERZoqKB
      UQTpQZ4/NMS6uSG2HYwwv8YPQkFTIJ11kBJ8bpVEyiLg04kmshi2yeG0xrwSg0jcJOzTcYCM
      aeP36qhCYKfsMYs8Y8FaZKQVESjF6htACBOZTiMRCM2D6jPI9g9iLNyA7HweEawn27obaZ7Y
      YbWHB5CycGFbJzX1u4kocEbpqcpQLSSnrQMcQw+HqbzpBipvugEnkyEbiSCzWYRhoIdC437J
      QghEYA4y2kI0mubx7b1EU5LIUIKdAw6LKg16I2nKDQO11EVQgXTa4tXODFctCXCoP0NkONcd
      ZiCSpr7YzWM7B1i9tJqLmovAU8XJnVdkchA8JQhVx7VoKTIxiJNIH+3TJTEa6hHedszWwxih
      MMLlxpi3gMyuEVM9y0J4C7crKsYRhc2HXlGJ2Vq4hDptllpNrwWn5RRoPBSXC1dFBe7aWlzl
      5ZNeYURZLl/d5TG4eHk51UUaw6akzKNRHHQzt9LHgkofDjAYy+L3e6gvEnQOZVlQH8JvKGiq
      wpyqAFVhFwvmhGmucINQUevOG3M8JxEj29YCZLH7erEHerGGosh4H0JRsGPDOIkERk0l0lFy
      vQTio6/Qwu1Fr64v0Bem5FfrHgfPoqWFOe7RY3uaFxXO3initL8DzAZRvhqMIJuOZvSuXZS/
      NNLsSVDXVIyqCJbMKTrxRGh0xdOby3PPifACtPoVoOswIu/G7skpLGd2jJZWz8WJuk/ULHSM
      X7+rlVfhWrqG1Iuz1xBVS8qPL4CllDjJJFZfN3YshlAV1FAxWkkZwjAQQhDYeAH9P/4+TFGK
      ZiJccxox6ubM2s6p5ux2AM2D0vhmnL0T6+U0VIwVfprAKqLpekSoGK2yDqutsJEgY8FyPKsv
      YPi+7yFnoHI3Et8Fl+Gk0sSefIT4M4+TObR/TKKc4g/gWbSUoksux7t6HYELLiL2xOzV3sLX
      35yTYD/NOasdAEA0XAWdmyE2zdTj8exVb0KULkMIBc/6i4gV0gEUFc/aC1EDRQSuuIHor344
      c1PBMI4wOPKRW7Ej48vMOPEYieefJfH8s7ia5hO+/u0kX3lx6ikUefCuXkfg/Atn/P7XktPf
      RWeJUF2oq27PRYRmS1EDypL3Ha9Z9W66HCUwviDWdPGsvRC1LLcZlQ18AAAK6ElEQVRwDFx5
      A0bzzObkEsimof+H/z7h4D+ZzMH99Hzji3gXL51xRMiorafyLz+WV0zrdOSsdwAA4a9FXfcp
      cM1CxaCoEXXt345Kg1YDQQLXv6cAZwjC6ydww58eT4YTukHJhz6N3tg8TUMCK6uQ7Z9ZxZm0
      siS2PoNv+SrUouk5t7t5EbV33I0Wem3LGmfDaZMNeiqQUmJaJn3xQUw7i99JETr4E8TQrmnU
      bAhE3SUoi96D0MaGFKXjEPnB10lt/sPMT1RRKf6Lv8OoLkF27kBGOpBmCqG7ka4QsWe2kNx7
      eNLkMq2iBlv1kdo7/d7EY89JoeyDt5N8dRuxZ56YsGZb8fsJv+Umwte+7YyI/Y/krHMAKSX9
      8UF+8+ofeHL/Vg70tWCPKOXzGR7O90tuCDks9ojxZYaEiihfhTL3LYjQ/An1iGTWJPKf3yD1
      3GPTP2FVo2jTagytF4bGL5a30gqpQRUz6T46rcn9bEI3MJoW4T3vUkSonM67Pj2xwMA00Moq
      qP/Kv2BFh4k/+xSp3TvI9nQjzczRmuB6vMtX4d9wPuo48imnO2eVA2Qskx88ex//8/z/krEm
      rwBr8Lr40LK1nF9RDWY8N8hdIUSgHlG8GOEau26QUpJpOUxi+zYy7W3Y8RhC09GKi3Ha9iHb
      dyOmKFKlhkME6kFTp54yIMqbUS64DUfxIDQdNVSMUDWk49B516dJbS+sZHnJu28lfN3M0tTP
      BM4aB+iPD/I3v7qbXV3Tb8v0J+uv50MXvQdlgtwhadtEHnuU/p//lExry7ivU1SBy6/iDuiI
      cfRy9IZmvOs2ovc8AvGeaZ8vvhL06z6HCJ/Q7DHbj3DkY7cVNDsVQK+po/4r/4LQzs6A4Vnx
      qYaSw9z+0zs4PJCnN+0U+PHW+8lYJh994wfyynKY3V20f+WLJHfumNSWY0tSwxbplELJFZcR
      XLsGJxkDVUUNlaLXN6H4/Fj/+ynkTAY/QGKA7G/vQr/hywhXbuqReOn5gg9+gGxHG9mujjNi
      U2smnPFRIMux+fxD98548B/j5y89xAOvjt0ASh3Yz6GPfnhKg38k0jTp/82DDD73It4Lr8R3
      4ZW4l61FDYZxtt2P7Nk3q/Ml0oG95cfH/8wcLMDCdxzSB06d7T82Z7wDPLz7KTYfmn5DuHx8
      8/EfMJA4sQFkdnfTesensYZm3ttr6LcP0vOD7x3/W2YS2K/8albneQxnz8M5kS7GV3EGQHPh
      XrgAY/EK3PNX42muQy2uQCstxtW8DKNurPz5SKwZFMifKZzRDpC1s/zXc78omL1YOs59Lz4A
      5Ob8Hfd8GWtw9o3t+n/5c2IvbAXAObQZMgXKk7dMnP05WUJpTrLoP9qTwbEc7L4utMoafGvW
      objcUBRGnaB22pnM9hnMGe0AOzr3zXrqczK/2/UElm0x/NQTJLZvm/wNU8Fx6P7ud5CWhTxS
      2CiN05YrY1Q8E6Q9W1mEO4Tu0bAi/WjVjSiGgR2PY0X6sCORCbcYlAK0uz1dOaMXwc+3zL4j
      4sn0RPtoHexA/uK+gtrNHDlCbMuzeIYKWyYoI11Iy0SvqCK9Z+c4r3JIvXxCcSI5BDD1aJle
      OfWU6jONM/oOcLDvWIKbxKO70TQ3Pk3Do7uZqHOJohq41fE/+q6XnjolLYcijz+KnKbU+qRY
      GbAyuBcsLqzdYwiBe/7CU2P7NOCMvgMMJU8oJyyqnMewBWHiSL2IIwMtIDR8nhAumSbhGFT6
      fdgIDvR14lIly4uraB/qwOerxJApdva0AoKOFzbTeApCiskdr0JdAZLyRiJyDQa9q9YiDGPy
      tcA0cc1rRistL6jN04kz+g4wMmbfb2ap0S0svYRMeoi64jlUBSspcRv4vaUUuz1IoXM4ZlIf
      KqEsUEYy1kI4MI+AlsbjPpH4pfYe1bUUBlpxEcacRtBc6OVlKJ4p5roIBdU/Oj3AisVwnMl7
      JU8Llw90D1pJGb715xfWNhC84tozIq9/ppzRd4AS34msw+6hToLhMHHpEBnupryshMTQAQKh
      RlwyTl8ijqZqpNJZBu2jEyQzA3Y7c0obKPecGJgB5+gPLrMYtQtRwtW5haCVRnG70MurSLe0
      4G6Yg9nTj1FZjtnZiVFbh9XfjRouxzxyCMXlwb1oGaQiJHbsztUG+2tQkl0F+w5E2TyEkks9
      Lr7pXSRe2IJMT19eMh+upmYC519UEFunK2e0a88vbzz+/6YZ5dWeVg737mUokyWd7KU9mWR3
      505e6TpIV7SHtqEOMqleuqK9dEd76U5bdEe7GUxGeLF1+3FbjRXH7EpwhbHa9uCZPxcrYaEa
      ChIVd1MT5uE9qMUlpPYcxKirw2zZh3D5kKaFVlyKVlSEEx3AOVaEJQRqc2ELRZS5J2qT9aoa
      Sv7k/QWxKzxeym/7CEIv8B3rNOOMdoANjSuPToNO/getg515Hs//b3/3XjrjUUBQH65mzvwT
      Cmpm6z7MI20kXn4Fa7CfTG8EJxUjuf0VlLJ6zEP7cdVVkty+DWs4htnRjpNOke3uIN3ehtnZ
      hdmZqxVWdB1j4QWIsqbCfAFFFSiN64//KYQgePnVhK69YVZmhWFQ+VefyE39znLO6ClQc0UT
      Cyua2N19oGA2r172RvzuRo6p21u9uemK2ZFLVbZNSO3MhRvTe3JyJsldI8KPaXPcckL33CaE
      YaCe/z6sX39mRvLlJxCoG951vE/Y8UcVhZJ3vR81UMTAz36Ua6QxDdRQMRV/9XE8y1a95u2K
      /hic0XcATVF53/k3F+yHKvMX89aVV+BduBg1WLhSx2MENmwEQFQvQ1lz86xsKYsvR5mXfzol
      FJXQ9TdTc+cXc+HRKXw/QtMJXPQm6r54L97lq18Xgx9AvfPOO+/8Y5/EbKgLVdE53MOBvpZZ
      2VGE4B+u/gjNFXMRmoY1NERq9/S1Sce173ZT8+GPoXq9OdGuqiWQTSN7pp9opiy4FPUNtx3t
      TZYfIQR6aRmBi96Ed+kKhK7jZNJg20gpc8p6Pj/GnEaKLr2Csg/8JUWXXoHqnY5CxpnPWVEP
      EM8k+cQvPs8r7TMbsALBBy98J+/deOPxK192YIADH/oAdjRakHMsvekWKt9/66jHpJQ4+x7H
      3vx9SE1BhcHlR133DpSlbz4e+ZkO0nFwkoncXoEQKB4PwuV+3Vzt83FWOADkEtk+/9C9PHlg
      67Tep6s6/++i93DzmmvGDITIIw/T/tUvzbrRg3tuE41fvgfV6837vExFcXb/H86+J5DDnWCP
      mLcrKhRVoszbhLr4SoT/9NbbP9M4axwAwLItfr39D3z/2Z/RH584i1MgWFrdzIcv/TMWV83P
      exWUUtL7Xz+g7ycz73ail5XT8IUv46qumfS1UjqQGETG+iCbBM2NCJSBr2RGV/xzTM5Z5QDH
      iGcSPL7vOZ7cv4U93QeIZ5I40kFXNUp8YVbWLeGyhZtYWbcEdZKBJR2H/l/+nN4ffn/a7Ufd
      TfOo+7t/mNLgP8cfh7PSAUZiOzbxTALLtnHpLnyGZ0Zz3uTunXR/999I7tk16d1A8fkoue56
      Sm+6BXWiNOVz/NE56x2gkEjbJrHjVYafeIzEq9uxBgaQtpVbULrduBvnEli/keBFF6Of5r2x
      zpHjnAPMECklTiqJk0ojVBXV7z9rlRPOZs45wDle15zRO8HnOMdsOecA53hdc84BzvG65pwD
      nON1zTkHOMfrmnMOcI7XNecc4Byva845wDle1/x/2/vme1KRIdcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Scatterplot 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scatterplot 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scatterplot2 part 2' width='192'>
      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
      PQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Treemap' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='scatterplot1 part 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
